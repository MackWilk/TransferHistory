<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ClearScada.Client</name>
    </assembly>
    <members>
        <member name="T:ClearScada.Client.AccessControlEntry">
            <summary>
            	Specifies a set of security permissions for a particular user.
            </summary>
            <remarks>
            	An <b>AccessControlEntry</b> specifies a set of permissions for a particular user that control what data and operations that user has access to.
            	An <b>AccessControlEntry</b> can apply to either a single user, a user group, or the special users <b>Everyone</b>, <b>Guest</b> or <b>Web</b>.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.AccessControlEntry.Everyone">
            <summary>
            	The <see cref="P:ClearScada.Client.AccessControlEntry.UserName"/> to use to indicate the <b>AccessControlEntry</b> applies to all users.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AccessControlEntry.Guest">
            <summary>
            	The <see cref="P:ClearScada.Client.AccessControlEntry.UserName"/> to use to indicate the <b>AccessControlEntry</b> applies to the Guest user for non-web clients.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AccessControlEntry.Web">
            <summary>
            	The <see cref="P:ClearScada.Client.AccessControlEntry.UserName"/> to use to indicate the <b>AccessControlEntry</b> applies to the Guest user for web clients.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AccessControlEntry.#ctor(System.String,ClearScada.Client.ObjectPermissions)">
            <summary>
            	Initializes a new instance of the <b>AccessControlEntry</b> class with the specified user and permissions.
            </summary>
            <param name="userName">
            	The name of the user the <b>AccessControlEntry</b> applies to.
            </param>
            <param name="permissions">
            	The set of permissions granted to the user by the <b>AccessControlEntry</b>.
            </param>
        </member>
        <member name="P:ClearScada.Client.AccessControlEntry.UserName">
            <summary>
            	Gets the name of the user the <see cref="T:ClearScada.Client.AccessControlEntry"/> applies to.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the user the <b>AccessControlEntry</b> applies to.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessControlEntry.Permissions">
            <summary>
            	Gets the permissions specified by the <see cref="T:ClearScada.Client.AccessControlEntry"/>.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectPermissionSet"/> containing the permissions specified by the <b>AccessControlEntry</b>.
            </value>
        </member>
        <member name="T:ClearScada.Client.AccessControlList">
            <summary>
            	Represents the security of a database object.
            </summary>
            <remarks>
            	The <b>AccessControlList</b> class is a collection of <see cref="T:ClearScada.Client.AccessControlEntry"/> objects that represent the security of a particular database object. 
            	An <b>AccessControlEntry</b> specifies a set of permissions for a particular user that control what data and operations that user has access to.
            	An <b>AccessControlEntry</b> can apply to either a single user, a user group, or the special users <b>Everyone</b>, <b>Guest</b> or <b>Web</b>.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.#ctor">
            <summary>
            	Initializes a new instance of the <b>AccessControlList</b> class that is empty.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.#ctor(ClearScada.Client.AccessControlList)">
            <summary>
            	Initializes a new instance of the <b>AccessControlList</b> class that contains entries copied from the specified <b>AccessControlList</b>.
            </summary>
            <param name="acl">
            	The <b>AccessControlList</b> whose entries are copied to the new <b>AccessControlList</b>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="acl"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.InheritedFromParent">
            <summary>
            	Gets and sets a value indicating whether this <b>AccessControlList</b> is inherited.
            </summary>
            <value>
            	<see langword="true"/> if the <b>AccessControlList</b> is inherited; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	<para>
            		When an <b>AccessControlList</b> is returned from a call to <see cref="M:ClearScada.Client.Simple.DBObject.GetSecurity">GetSecurity</see>, <b>InheritedFromParent</b> will be <see langword="true"/> if the ACL 
            		was inherited from the object's parent, or <see langword="false"/> if the ACL belongs to object itself.
            	</para>
            	<para>
            		When an <b>AccessControlList</b> is passed to a call to <see cref="M:ClearScada.Client.Simple.DBObject.SetSecurity(ClearScada.Client.AccessControlList,System.Boolean)">SetSecurity</see>, set <b>InheritedFromParent</b> to <see langword="true"/> to remove the ACL
            		from the object and cause it to inherit from its parent, or <see langword="false"/> to replace the object's ACL. If <b>InheritedFromParent</b> is <see langword="true"/> then the
            		contents of the <b>AccessControlList</b> will be ignored.
            	</para>
            </remarks>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.Count">
            <summary>
            	Gets the number of entries in the <b>AccessControlList</b>.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of entries in the <b>AccessControlList</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.Keys">
            <summary>
            	Gets a collection containing the users in the <b>AccessControlList</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:System.String"/>&gt; containing the users in the <b>AccessControlList</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.Values">
            <summary>
            	Gets a collection containing the entries in the <b>AccessControlList</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:ClearScada.Client.AccessControlEntry"/>&gt; containing the entries in the <b>AccessControlList</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.Item(System.String)">
            <summary>
            	Gets and sets the <see cref="T:ClearScada.Client.AccessControlEntry"/> for the specified user.
            </summary>
            <param name="key">
            	The name of the user whose entry to get or set.
            </param>
            <value>
            	The <see cref="T:ClearScada.Client.AccessControlEntry"/> for the specified user. If the specified user is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException"/>, and a set operation adds a new entry for the specified user.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            	When setting the property, <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            	When getting the property, an entry for <paramref name="key"/> does not exist in the <b>AccessControlList</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.Add(ClearScada.Client.AccessControlEntry)">
            <summary>
            	Adds an <see cref="T:ClearScada.Client.AccessControlEntry"/> to the <b>AccessControlList</b>.
            </summary>
            <param name="value">
            	The <b>AccessControlEntry</b> to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	An <b>AccessControlEntry</b> with the same <see cref="P:ClearScada.Client.AccessControlEntry.UserName">UserName</see> already exists in the <b>AccessControlList</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.Clear">
            <summary>
            	Removes all entries from the <b>AccessControlList</b>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.ContainsKey(System.String)">
            <summary>
            	Determines whether there is an <see cref="T:ClearScada.Client.AccessControlEntry"/> for the specified user in the <b>AccessControlList</b>.
            </summary>
            <param name="key">
            	The name of the user to locate.
            </param>
            <returns>
            	<see langword="true"/> if an entry for <paramref name="key"/> is found in the <b>AccessControlList</b>; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.Remove(System.String)">
            <summary>
            	Removes an <see cref="T:ClearScada.Client.AccessControlEntry"/> from the <b>AccessControlList</b>.
            </summary>
            <param name="key">
            	The user of the <b>AccessControlEntry</b> to remove.
            </param>
            <returns>
            	<see langword="true"/> if an entry for <paramref name="key"/> was found and removed from the <b>AccessControlList</b>; or, <see langword="false"/> if an entry for <paramref name="key"/> was not in the <b>AccessControlList</b>.
            </returns>
            <remarks>
            	Attempting to remove the <b>AccessControlEntry</b> for a user that is not in the <b>AccessControlList</b> leaves the <b>AccessControlList</b> unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.TryGetValue(System.String,ClearScada.Client.AccessControlEntry@)">
            <summary>
            	Gets the <see cref="T:ClearScada.Client.AccessControlEntry"/> for the specified user.
            </summary>
            <param name="key">
            	The name of the aggregate to get.
            </param>
            <param name="value">
            	When this method returns, contains the <b>AccessControlEntry</b> for the specified user, if found; otherwise, <see langword="null"/>. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AccessControlList</b> contains an entry for the specified user; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method combines the functionality of the <see cref="M:ClearScada.Client.AccessControlList.ContainsKey(System.String)">ContainsKey</see> method and the <see cref="P:ClearScada.Client.AccessControlList.Item(System.String)">Item</see> property.
            	Use the <b>TryGetValue</b> method if your code frequently attempts to access entries that are not in the <b>AccessControlList</b>.
            	Using this method is more efficient than catching the <see cref="T:System.Collections.Generic.KeyNotFoundException"/> thrown by the <b>Item</b> property.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.AccountLogonFailedReason">
            <summary>
            Enumeration for logon failure reason
            </summary>
        </member>
        <member name="F:ClearScada.Client.AccountLogonFailedReason.Unknown">
            <summary>
            Unknown reason
            </summary>
        </member>
        <member name="F:ClearScada.Client.AccountLogonFailedReason.BadNameOrPassword">
            <summary>
            Bad username or password
            </summary>
        </member>
        <member name="T:ClearScada.Client.AccountLogonFailedEventArgs">
            <summary>
            	Provides data about events raised when a logon fails.
            </summary>
        </member>
        <member name="P:ClearScada.Client.AccountLogonFailedEventArgs.UserId">
            <summary>
            	Gets the User Id associated with the failed logon
            </summary>
            <value>
            	An <see cref="T:System.UInt32"/> containing the User ID of the user associated with the failed logon.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccountLogonFailedEventArgs.UserName">
            <summary>
            	Gets the User name associated with the failed logon
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the user associated with the failed logon.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccountLogonFailedEventArgs.ReasonForFail">
            <summary>
            	Gets the reason for the failed logon.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.AccountLogonFailedReason"/> containing the reason for logon failure.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccountLogonFailedEventArgs.FailedLogonCount">
            <summary>
            	Gets the failed logon count
            </summary>
            <value>
            	The number of failed logons which have occurred.
            </value>
        </member>
        <member name="T:ClearScada.Client.Advanced.AggregateDetails">
            <summary>
            Information on a database object aggregate.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.Name">
            <summary>
            Gets the name of aggregate.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing aggregate name.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.Index">
            <summary>
            Gets the index of aggregate (for multi-choice aggregates).
            </summary>
            <value>
            A <see cref="T:System.Int32"/> containing index of aggregate. Zero for single aggreates.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.Classes">
            <summary>
            Gets the collection of aggregate classes (for multi-choice aggregates).
            </summary>
            <value>
            A read-only collection of class names.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.AlarmConditions">
            <summary>
            Gets the collection of alarm conditions.
            </summary>
            <value>
            A read-only collection of alarm condition names.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.IsHistoric">
            <summary>
            Test if aggregate is an historic aggregate.
            </summary>
            <value>
            <see langword="true"/> if an historic aggregate.
            </value>
        </member>
        <member name="M:ClearScada.Client.Advanced.AggregateDetails.Copy">
            <summary>
            Copies this instance. A deep copy of all fields and properties is performed
            </summary>
            <returns>A copy of this instance</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmActionItem">
            <summary>
            Alarm Action Item
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.AlarmActionItem.#ctor(System.String,System.String,System.DateTimeOffset,System.Int32)">
            <summary>
            Alarm Action Item
            </summary>
            <param name="source"></param>
            <param name="condition"></param>
            <param name="activeTime"></param>
            <param name="cookie"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.AlarmActionItem.#ctor(System.String)">
            <summary>
            Alarm Action Item
            </summary>
            <param name="source"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmActionItem.Source">
            <summary>
            Gets the Source
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmActionItem.Condition">
            <summary>
            Gets the Condition
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmActionItem.ActiveTime">
            <summary>
            Gets the Active Time
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmActionItem.Cookie">
            <summary>
            Gets the Cookie
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmActionsResponse">
            <summary>
            Alarm Actions Response
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmActionsResponse.ActionCount">
            <summary>
            Gets the Action Count
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmActionsResponse.SuccessCount">
            <summary>
            Gets the Success Count
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmActionsResponse.Errors">
            <summary>
            Gets the errors Errors
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmLimit">
            <summary>
            The Alarm Limit
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.AlarmLimit.#ctor(System.String,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.Advanced.AlarmLimit"/> class.
            </summary>
            <param name="label"> The label. </param>
            <param name="value"> The value. </param>
            <param name="color"> The color. </param>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmLimit.Value">
            <summary>
            Gets the data.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmLimit.Label">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmLimit.Color">
            <summary>
            Gets the color.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AnnotationItem">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AnnotationItem.Path">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AnnotationItem.OpcHandle">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AnnotationItem.Entries">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmColumnFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.AlarmColumnFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.AlarmColumnFlags.Fixed">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmColumn">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmColumn.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmColumn.IsFixed">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmColumn.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmColumn.Categories">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmColumn.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmConfiguration">
            <summary>
            Alarm Configuration
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConfiguration.Categories">
            <summary>
            Gets the Categories
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConfiguration.Severities">
            <summary>
            Gets the Severities
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConfiguration.Columns">
            <summary>
            Gets the Columns
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConfiguration.ColumnsOrder">
            <summary>
            Gets the Column Order
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConfiguration.SortColumns">
            <summary>
            Gets the Sort Columns
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConfiguration.BackgroundColor">
            <summary>
            Gets the Background Color
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConfiguration.KeepHighlightedAlarmVisible">
            <summary>
            Gets if Keep Highlighted Alarm Visible
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmFilter.Sources">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmFilter.Regions">
            <summary>
            Gets the regions for the filter
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmFilter.Areas">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmFilter.CategoryIds">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmFilter.Severities">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmFilter.SystemName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmFilter.AssignedOnly">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmRecord">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.Source">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.ObjectId">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.UpdateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.ActiveTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.CategoryId">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.CategoryDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.Severity">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.SeverityDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.Condition">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.SubCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.NewState">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.Quality">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.Cookie">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.Area">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.SuppressionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.SuppressedAlarmCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.IsTextAlarm">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.AcknowledgeRequired">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.ResponsibleEntityType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.ResponsibleEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.UserAcknowledgeRequired">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.Response">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRecord.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmRedirection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.AlarmRedirection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRedirection.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRedirection.ActionId">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRedirection.RedirectWithComment">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmRedirection.DeselectAfter">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmResponse.ServerReadTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmResponse.Alarms">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmSound">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.AlarmSound.#ctor(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmSound.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmSound.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmSound.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmStateColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmStateColor.Color">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmStateColor.AlternateColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmStateColor.Flash">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmStateColor.UseAlternateFlashColor">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AreaDetails">
            <summary>
            	Information on an area of interest.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AreaDetails.Id">
            <summary>
            	Get ID of area of interest.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.AreaOfInterestId"/> containing ID.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.AreaDetails.Name">
            <summary>
            	Get name of area of interest.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name.
            </value>
            <seealso cref="P:ClearScada.Client.Advanced.AreaDetails.FullName"/>
        </member>
        <member name="P:ClearScada.Client.Advanced.AreaDetails.ParentId">
            <summary>
            	Get ID of parent area of interest.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.AreaOfInterestId"/> containing parent area's ID.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.AreaDetails.FullName">
            <summary>
            	Get full name of area of interest.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the full name.
            </value>
            <seealso cref="P:ClearScada.Client.Advanced.AreaDetails.Name"/>
        </member>
        <member name="M:ClearScada.Client.Advanced.AreaDetails.UpdateFullName(System.String,System.String)">
            <summary>
            	Move an area of interest.
            </summary>
            <param name="oldParentName">Name of old parent area.</param>
            <param name="newParentName">Name of new parent area.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="oldParentName"/> is <see langword="null"/>.
            	<paramref name="newParentName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="oldParentName"/> is empty string.
            	<paramref name="newParentName"/> is empty string.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<paramref name="oldParentName"/> doesn't match current name of area.
            </exception>
            <seealso cref="P:ClearScada.Client.Advanced.AreaDetails.FullName"/>
        </member>
        <member name="T:ClearScada.Client.Advanced.BrowseNodeType">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseNodeType.Branch">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseNodeType.Leaf">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.BrowseIconType">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Unknown">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DatabaseObject">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Objects">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Config">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Aggregate">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.SearchKeys">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.SearchKey">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.RegisterSpaces">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.RegisterSpace">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Tag">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Network">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Domain">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Server">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.SerialPort">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Folder">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveRemovable">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveFixed">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveRemote">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveCDRom">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveRamDisk">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.StatusRow">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.StatusGroup">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.List">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.HistoricTag">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.AlarmCondition">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.ColorPalette">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.ColorPaletteEntry">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.BrowseNode">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.NodeType">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.IconType">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.ClassName">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.Description">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.Label">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.CertLookupInfo">
            <summary>
            The information required to look up a system certificate.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.CertLookupInfo.#ctor(System.UInt32,System.String,System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.Advanced.CertLookupInfo"/> class.
            </summary>
            <param name="storeLocation">The system certificate store location.</param>
            <param name="storeName">The system certificate store name.</param>
            <param name="hash">The system certificate hash.</param>
        </member>
        <member name="P:ClearScada.Client.Advanced.CertLookupInfo.StoreLocation">
            <summary>
            Gets the system certificate store location.
            </summary>
            <value>
            A <see cref="T:System.UInt32"/> containing store location.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.CertLookupInfo.StoreName">
            <summary>
            Gets the system certificate store name.
            </summary>
            <value>
            An <see cref="T:System.String"/> containing the store name.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.CertLookupInfo.Hash">
            <summary>
            Gets the certificate hash.
            </summary>
            <value>
            A collection of <see cref="T:System.Byte"/> containing the certificate hash.
            </value>
        </member>
        <member name="T:ClearScada.Client.Advanced.ChildLink.ChildLink">
            <summary>Base class for DedicatedLink (supporting legacy connections) and VirtualLink (supporting coalesced comms)</summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ChildLink.Settings">
            <summary>
            External interface to ChildLink settings
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ChildLink.Settings.ClientSideAutomation">
            <summary>
            Indicates whether host application was started using client side automation, see ViewXAppClassFactory
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ChildLink.DedicatedLink">
            <summary>Implements a link supporting the legacy comms protocol, including secure sessions</summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ChildLink.VirtualLink">
            <summary>Implements a link supporting the coalesced comms protocol</summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.UserTokenType">
            <summary>Defines the type of a user token</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserTokenType.None">
            <summary>No token</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserTokenType.AIM">
            <summary>A token obtained from an AIM server</summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ConversionDetails">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ConversionDetails.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ConversionDetails.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ConversionDetails.Category">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ConversionDetails.Icon">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AnnotationEntry">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AnnotationEntry.Annotation">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AnnotationEntry.User">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AnnotationEntry.Timestamp">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AnnotationEntry.AnnotationTime">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmSortColumn">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmSortColumn.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmColumnOrder">
            <summary>
            Class that represents the alarm column order.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmColumnOrder.Index">
            <summary>
            Column Index.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmColumnOrder.Name">
            <summary>
            Optional Column Name.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmColumnOrder.Width">
            <summary>
            Column Width.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.BrowseNodeEx">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNodeEx.BranchPosition">
            <summary>
            Optional branch position (when null, this is a database node: use full name instead)
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNodeEx.FullName">
            <summary>
            Full name.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.BrowseListExResult">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseListExResult.Nodes">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseListExResult.ContinuationPoint">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseListExResult.LastPosition">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.EventData">
            <summary>
            Class that represents the OPC Event.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.ChangeMask">
            <summary>
            Change Mask
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.NewState">
            <summary>
            New State
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.EventType">
            <summary>
            Event Type
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.EventCategory">
            <summary>
            Event Category
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.Severity">
            <summary>
            Severity
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.ConditionName">
            <summary>
            Condition Name
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.SubConditionName">
            <summary>
            Sub Condition Name
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.Quality">
            <summary>
            Quality
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.AcknowledgeRequired">
            <summary>
            Acknowledge Required
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.ActiveTime">
            <summary>
            Active Time
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.Cookie">
            <summary>
            Cookie
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.EventAttributesCount">
            <summary>
            Number of Event Attributess
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.EventAttributes">
            <summary>
            Event Attributes
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventData.ActorId">
            <summary>
            Actor ID
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AggregateDetailsExtensions">
            <summary>
            Extension methods for the <see cref="T:ClearScada.Client.Advanced.AggregateDetails"/> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.AggregateDetailsExtensions.SafeCopy(ClearScada.Client.Advanced.AggregateDetails)">
            <summary>
            Safely copies the AggregateDetails instance via <see cref="M:ClearScada.Client.Advanced.AggregateDetails.Copy"/>. If the instance is <see langword="null"/>
            then <see langword="null"/> is returned for the copied instance.
            </summary>
            <param name="aggregateDetails">The instance to copy</param>
            <returns>A copied AggregateDetails instance. Could be <see langword="null"/></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.AggregateDetailsExtensions.SafeCopy(ClearScada.Client.Advanced.AggregateDetails[])">
            <summary>
            Safely copies the AggregateDetails array by creating a new array and using <see cref="M:ClearScada.Client.Advanced.AggregateDetailsExtensions.SafeCopy(ClearScada.Client.Advanced.AggregateDetails)"/>
            to copy each AggregateDetails element. If the array is <see langword="null"/> then <see langword="null"/>
            is returned for the copied AggregateDetails array.
            </summary>
            <param name="aggregateDetailsArray">The AggregateDetails array to copy</param>
            <returns>A copied AggregateDetails array. Could be <see langword="null"/></returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.ObjectDetailsExtensions">
            <summary>
            Extension methods for the <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetailsExtensions.SafeCopy(ClearScada.Client.Advanced.ObjectDetails)">
            <summary>
            Safely copies the ObjectDetails instance via <see cref="M:ClearScada.Client.Advanced.ObjectDetails.Copy"/>. If the instance is <see langword="null"/>
            then <see langword="null"/> is returned for the copied instance.
            </summary>
            <param name="objectDetails">The instance to copy</param>
            <returns>A copied ObjectDetails instance. Could be <see langword="null"/></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetailsExtensions.SafeCopy(ClearScada.Client.Advanced.ObjectDetails[])">
            <summary>
            Safely copies the ObjectDetails array by creating a new array and using <see cref="M:ClearScada.Client.Advanced.ObjectDetailsExtensions.SafeCopy(ClearScada.Client.Advanced.ObjectDetails)"/>
            to copy each ObjectDetails element. If the array is <see langword="null"/> then <see langword="null"/>
            is returned for the copied ObjectDetails array.
            </summary>
            <param name="objectDetailsArray">The ObjectDetails array to copy</param>
            <returns>A copied ObjectDetails array. Could be <see langword="null"/></returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.IMaps">
            <summary>
            An interface for Maps.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IMaps.GetMapConfiguration(ClearScada.Client.ObjectId)">
            <summary>
            Get the Map Source configuration
            </summary>
            <param name="objectId"> The Map source object </param>
            <returns>Map configuration</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IMaps.GetRegionConfiguration(ClearScada.Client.ObjectId)">
            <summary>
            Gets the region data as geojson
            </summary>
            <param name="objectId"></param>
            <returns>Region configuration</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.IUser">
            <summary>
            User interface.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IUser.GetUserProfile">
            <summary>
            Gets the current user profile
            </summary>
            <returns>The users profile</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IUser.GetUserProfileForWeb">
            <summary>
            Gets the current user web profile
            </summary>
            <returns>The users web profile</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IUser.SetUserProfile(ClearScada.Client.ObjectId,System.IO.Stream)">
            <summary>
            Sets the user profile.
            </summary>
            <param name="userId">The user id.</param>
            <param name="settings">The profile settings.</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IUser.GetUserDictionary">
            <summary>
            Gets the users custom dictionary
            </summary>
            <returns>The Users custom dictionary</returns> 
        </member>
        <member name="M:ClearScada.Client.Advanced.IUser.GetUserRegistry(System.String)">
            <summary>
            Gets user registry setting
            </summary>
            <param name="name">Index into the registry map</param>
            <returns>Value of registry as either an integer or string.</returns> 
        </member>
        <member name="M:ClearScada.Client.Advanced.IUser.SetUserRegistry(System.String,System.Object)">
            <summary>
            Sets user registry setting
            </summary>
            <param name="name">Index into the registry map</param>
            <param name="value">value to set in the registry</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IUser.SetNamedUserRegistry(System.String,System.String,System.Object)">
            <summary>
            Sets the named users registry setting
            </summary>
            <param name="userName">Use the registry of this user.</param>
            <param name="name">Index into the registry map</param>
            <param name="value">value to set in the registry</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IUser.GetNamedUserRegistry(System.String)">
            <summary>
            Gets all of the named users registry settings
            </summary>
            <param name="userName">Get the registry of this user.</param>
            <returns>Dictionary of key of registry to value</returns> 
        </member>
        <member name="M:ClearScada.Client.Advanced.IUser.DeleteNamedUserRegistryEntry(System.String,System.String)">
            <summary>
            Remove the named users specific registry setting
            </summary>
            <param name="userName">Use the registry of this user.</param>
            <param name="name">Index into the registry dictionary to remove</param>
        </member>
        <member name="T:ClearScada.Client.Advanced.LinkProvider.LinkProvider">
            <summary>A factory class for creating ChildLink objects.</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.LinkProvider.LinkProvider.CreateChildLink(ClearScada.Client.ServerNode,ClearScada.Client.ClientConnectionSettings,System.Boolean,NLog.Logger,SchneiderElectric.Common.Util.ILoggingSource)">
            <summary>Returns a ChildLink that has been attached to a ParentLink. Call Connect on the ChildLink before using it.</summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MapConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.Provider">
            <summary>
            The map source provider
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.SourceUrl">
            <summary>
            The url for the map source
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.SourceLayer">
            <summary>
            The layer to use from the map source
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.Title">
            <summary>
            The human readable title for the layer
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.ApiKey">
            <summary>
            The API key to access the map source
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.UserName">
            <summary>
            The username to access the map source
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.Password">
            <summary>
            The password to access the map source
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.Zoom">
            <summary>
            The starting zoom level
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.Overlay">
            <summary>
            A flag to indicate if this is a base layer or an overlay
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.Opacity">
            <summary>
            The Opacity for the layer when used as an Overlay
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.RefreshRate">
            <summary>
            The refresh rate in minutes for the layer.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.CustomData">
            <summary>
            An ampersand separated list of value pairs combined using =
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.DisplayByDefault">
            <summary>
            A flag to indicate if this overlay should be displayed by default on a map set.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MapConfiguration.RequestSingleImage">
            <summary>
            A flag to indicate if this source should make a single request for a view instead of tiling.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MobileObjectMenuDetails">
            <summary>
            MobileObjectMenuDetails represent's a single object's Mobile Menu Details.
            The fields rely upon the configuration of the object and the permissions of the current user - usually
            Read Access is required, but higher permissions may be required.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.MobileObjectMenuDetails.#ctor">
            <summary>
            Initialise an instance with no values present but in a useable state.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.CanRefresh">
            <summary>
            Indicates whether there is a Refresh method associated with this object.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.IsAlarmObject">
            <summary>
            Indicates whether the object is an alarm object.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.AlarmsEnabled">
            <summary>
            Indicates whether alarms are enabled and whether alarm is enabled for this object.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.CanDisplayObject">
            <summary>
            Indicates whether the object should be listed in the Mobile client App
            (i.e. avoid displaying template objects)
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.CanViewHistoricTrend">
            <summary>
            Indicates whether Historic Data is active on this object, and hence
            whether an Historic Trend can be viewed.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.MobileHelpViewId">
            <summary>
            The ObjectId referencing this object's Mobile Help View.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.UserHasControlPermission">
            <summary>
            Specifies whether the current user has Control Permissions.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.HasCurrentValue">
            <summary>
            Indicates whether the object has a CurrentValue. Indicates whether the CurrentValue field should be accessed.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.CurrentValue">
            <summary>
            The CurrentValue parameter value, if the object has a CurrentValue
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.CurrentValueType">
            <summary>
            The VarType of the variant which contained the CurrentValue.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.ObjectStatusDetails">
            <summary>
            The Object Status parameter values
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MobileObjectMenuDetails.MobileMethods">
            <summary>
            Optional: The Mobile Methods defined in the object
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.OPCEventCategory">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.OPCEventCategory.#ctor(System.Int32)">
            <summary>
            An OPC Category that can have a collection of OPC Attributes
            </summary>
            <param name="opcEventCategoryId"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.OPCEventCategory.OPCEventCategoryId">
            <summary>
            The OPC Category id
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OPCEventCategory.OPCAttributes">
            <summary>
            The OPC attributes that this category is interested in.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ParentLink.CoalescedSocketWrapper.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>This function is for use by tlsStream, other callers must use Send</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ParentLink.CoalescedSocketWrapper.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>This function is for use by tlsStream, other callers must use Receive</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ParentLink.CoalescedSocketWrapper.Send(System.Byte[],System.DateTime)">
            <summary>This is a send function for all callers to use</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ParentLink.CoalescedSocketWrapper.Send(System.Byte[],System.Int32,System.Int32,System.DateTime)">
            <summary>This is a send function for all callers to use</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ParentLink.CoalescedSocketWrapper.Receive(System.Byte[],System.Int32,System.Int32,System.Nullable{System.DateTime})">
            <summary>This is the receive function for all callers to use</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ParentLink.ParentLink.CoalescedConnect(ClearScada.Client.ServerNode,ClearScada.Client.ClientConnectionSettings,System.Boolean)">
            <summary>Attempt to establish a coalesced comms connection. If unsuccessful then HostsVirtualLinks will be false
            and AddChildLink() will return a DedicatedLink, otherwise AddChildLink() will return a VirtualLink.</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ParentLink.ParentLink.LegacyConnect(ClearScada.Client.Advanced.LinkType,ClearScada.Client.ClientConnectionSettings)">
            <summary>Attempt to establish a legacy comms connection. Called by DedicatedLink.Connect().</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ParentLink.ParentLink.AddChildLink">
            <summary>Creates and returns either a VirtualLink or a DedicatedLink depending on the value of HostsVirtualLinks.</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ParentLink.ParentLink.DoConnectRequest(ClearScada.Client.Advanced.ChildLink.VirtualLink,ClearScada.Client.Advanced.LinkType,ClearScada.Client.Advanced.ConnectionFlags)">
            <summary>Send a virtual link connection request to the peer and receive the response.
            On success, link.Version will be set and link.OnConnectResponseReceived will be called.</summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ParentLink.MessageType">
            <summary>The types of message that may be sent when using the coalesced comms protocol.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.ProtocolVersionRequest">
            <summary>Protocol version request (sent by client).</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.ProtocolVersionResponse">
            <summary>Protocol version response (sent by server).</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.EncryptionSelectionRequest">
            <summary>Encryption selection request (sent by client). Named EncryptionSelectionRequest in v2.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.EncryptionSelectionResponse">
            <summary>Encryption selection response (sent by server). Named EncryptionSelectionResponse in v2.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.EncryptionSetupData">
            <summary>Encryption setup data (sent by client and server).</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.ConnectRequest">
            <summary>Connect request (sent by client and server).</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.ConnectResponse">
            <summary>Connect response (sent by client and server).</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.VirtualLinkMessage">
            <summary>Virtual link message (sent by client and server).</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.DisconnectNotification">
            <summary>Disconnect notification (sent by client and server).</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.VerificationData">
            <summary>Verification data (sent by client and server). Introduced in v2.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.ConnectionAbortNotification">
            <summary>Connect abort notification (sent by client and server). Introduced in v2.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.ConnectionParametersRequest">
            <summary>Connection parameters request (sent by client). Introduced in v3.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.ConnectionParametersResponse">
            <summary>Connection parameters response (sent by server). Introduced in v3.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.MessageType.Invalid">
            <summary>Only used internally.</summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ParentLink.EncryptionTypes">
            <summary>The implemented types of encryption.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.EncryptionTypes.None">
            <summary>No encryption (not valid).</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.EncryptionTypes.TLS">
            <summary>TLS encryption.</summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ParentLink.ParentLinkProtocol.VerificationMethods">
            <summary>The implemented verification methods.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.ParentLinkProtocol.VerificationMethods.None">
            <summary>No verification required.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.ParentLinkProtocol.VerificationMethods.PCSServiceToken">
            <summary>PCS service token.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.ParentLinkProtocol.VerificationMethods.DriverToken">
            <summary>Driver token.</summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ParentLink.ParentLinkProtocol.PeerType">
            <summary>The recognised peer types.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.ParentLinkProtocol.PeerType.Other">
            <summary>Miscellaneous (e.g. general clients).</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.ParentLinkProtocol.PeerType.Server">
            <summary>Server/Partner.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.ParentLinkProtocol.PeerType.Driver">
            <summary>Driver.</summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ParentLink.ParentLinkProtocol.PeerType.Max">
            <summary>Max value, used for validation.</summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.LogEventMessage(System.DateTimeOffset,System.Int32,System.String)">
            <summary>
            Inserts a comment for the event with the specified timestamp and sequence number.
            </summary>
            <param name="timestamp"></param>
            <param name="sequenceNumber"></param>
            <param name="comment"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetEventConfiguration">
            <summary>
            Gets event configuration.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetEventQueryText(ClearScada.Client.ObjectId)">
            <summary>
            Gets event query text.
            </summary>
            <param name="objectId">Object to obtain events query text.</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ReadAnnotations(System.DateTimeOffset,System.DateTimeOffset,ClearScada.Client.Advanced.HistoricTag[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.EditAnnotation(System.String,System.DateTimeOffset,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.DeleteAnnotation(System.String,System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.EditHistoricData(System.String,ClearScada.Client.Advanced.OpcQuality,System.String,ClearScada.Client.Advanced.HistoricPointData[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.DeleteHistoricData(System.String,System.DateTimeOffset[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ReadAggregates">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ReadRawHistory(System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.Boolean,ClearScada.Client.Advanced.HistoricTag[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ReadProcessedHistory(System.DateTimeOffset,System.DateTimeOffset,System.TimeSpan,System.Int32,System.Boolean,ClearScada.Client.Advanced.HistoricTag[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ReadModifiedHistory(System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.Boolean,ClearScada.Client.Advanced.HistoricTag[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ReadHistoricFileDateTimes(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetManualRedirections(ClearScada.Client.Advanced.RedirectionRequestConditions[])">
            <summary>
            
            </summary>
            <param name="conditions"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ListManyAreas(ClearScada.Client.AreaOfInterestId[])">
            <summary>
            Lists the immediate children of each of the areas in the given array of parent area ids
            </summary>
            <param name="parentIds">An array of parent area ids.</param>
            <returns>The two dimensional array of areas corresponding to the given array of parent area Ids.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.LocateArea(ClearScada.Client.AreaOfInterestId)">
            <summary>
            Returns the details of all of the parent areas of the specified area.
            </summary>
            <param name="areaId">The area id.</param>
            <returns>The array of parent area details corresponding to the specified area.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetUserProfile">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetUserProfileForWeb">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetNamedUserRegistry(System.String)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.LookupObject(ClearScada.Client.ObjectId)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.LookupObjects(ClearScada.Client.ObjectId[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.FindObject(System.String)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.FindObjects(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ListObjectsEx(ClearScada.Client.ObjectId,System.String,System.Boolean,System.String[],System.Boolean,System.Boolean@,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ListObjects(System.String,System.String,ClearScada.Client.ObjectId,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ListManyObjects(ClearScada.Client.ObjectId[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.LocateObject(ClearScada.Client.ObjectId)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetTemplateObject(ClearScada.Client.ObjectId)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.CreateObject(System.String,ClearScada.Client.ObjectId,System.String)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.CreateInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.DeleteObject(ClearScada.Client.ObjectId,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.DeleteObjectAsync(ClearScada.Client.ObjectId,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.RenameObject(ClearScada.Client.ObjectId,System.String)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.MoveObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,ClearScada.Client.Advanced.Warning[]@)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.CopyObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String,ClearScada.Client.Advanced.Warning[]@)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.CopyObjectAsync(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetAvailableConversions(ClearScada.Client.ObjectId)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ConvertObject(ClearScada.Client.ObjectId,System.String,ClearScada.Client.Advanced.Warning[]@)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ConvertInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ExportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.Warning[]@)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ExportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.VersionNumber,ClearScada.Client.Advanced.Warning[]@)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetExportVersions">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ImportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.ImportOptions)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.AdviseObjectUpdates(System.Boolean,System.String[])">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.UnadviseObjectUpdates">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetObjectBrowse(ClearScada.Client.ObjectId,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ListDocumentStores">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetValidationErrors(ClearScada.Client.ObjectId)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetDeletionDetails(ClearScada.Client.ObjectId)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetDeletionConsequences(System.Collections.Generic.ICollection{ClearScada.Client.ObjectId},System.Collections.Generic.ICollection{System.Tuple{ClearScada.Client.ObjectId,System.Boolean}})">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ClearScada#Client#Advanced#IObjectHierarchyInternal#ImportConfigurationSync(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.ImportOptions,ClearScada.Client.Advanced.Warning[]@)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.ListFavourites">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.SearchForObjects(ClearScada.Client.Advanced.SearchDetails,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.GetTotalObjectCount(ClearScada.Client.ObjectId)">
            <inheritdoc />
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkServer.LogOnProvisionalUser(System.String,System.Security.SecureString)">
            <summary>
            Attempts to Provisonal Logon the system's logged on user to this node/server. An attempt can only fail if the server is not ready
            and requires this client to retry the attempt. A Failed or successful attempt does not imply anything about the logon credentials.
            </summary>
            <param name="provLogonUserName">The username of the system logged on user which needs to be provisional logged on to this node server. An empty string implies a logoff.</param>
            <param name="provLogonPassword">The password of the system logged on user; or blank to logoff the provisional logon.</param>
            <returns>false indicates a failed attempt due to server unavailability. All other attempts succeed (though may not create a functioning provisional logon).</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.EventConfiguration">
            <summary>
            Events specific configuration.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventConfiguration.Columns">
            <summary>
            Event query columns.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventConfiguration.FixedColumns">
            <summary>
            Number of fixed event query columns.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.EventColumn">
            <summary>
            Class that represents the alarm column order.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventColumn.Name">
            <summary>
            Column Name.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.HistoricPointData">
            <summary>
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.HistoricPointData.#ctor(System.Object,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricPointData.Value">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricPointData.Time">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.FavouriteType">
            <summary>
            Type of favourite.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.FavouriteType.Root">
            <summary>
            Root favourite.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.FavouriteType.Menu">
            <summary>
            Folder favourite.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.FavouriteType.Item">
            <summary>
            Simple favourite.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.FavouriteType.Super">
            <summary>
            Super favourite.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.FavouriteDetails">
            <summary>
            Details about a favourite.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.FavouriteDetails.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteDetails.Name">
            <summary>
            Gets the name of the favourite.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteDetails.FavouriteType">
            <summary>
            Gets the type of the favourite.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteDetails.Class">
            <summary>
            Gets the database class of the favourite.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteDetails.Window">
            <summary>
            Gets the window position of the favourite.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteDetails.Target">
            <summary>
            Gets the target of the favourite.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteDetails.Location">
            <summary>
            Gets the location of the favourite.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteDetails.Children">
            <summary>
            Gets the children of the favourite.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.FavouriteWindowState">
            <summary>
            State of window.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.FavouriteWindowState.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.FavouriteWindowState.Maximised">
            <summary>
            Maximised window.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.FavouriteWindowState.Minimised">
            <summary>
            Minimised window.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.FavouriteWindow">
            <summary>
            Represents a favourite window.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.FavouriteWindow.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteWindow.State">
            <summary>
            Gets the window state of the favourite.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteWindow.Left">
            <summary>
            Gets the left position of window.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteWindow.Top">
            <summary>
            Gets the top position of window.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteWindow.Right">
            <summary>
            Gets the right position of window.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.FavouriteWindow.Bottom">
            <summary>
            Gets the bottom position of window.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IEvents">
            <summary>
            Events
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IEvents.EventsUpdated">
            <summary>
            C# event raised when an OPC event is recived from a subscription
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IEvents.LogEventMessage(System.DateTimeOffset,System.Int32,System.String)">
            <summary>
            Inserts a comment for the event with the specified timestamp and sequence number.
            </summary>
            <param name="timestamp">Time of event</param>
            <param name="sequenceNumber">Sequence number of event</param>
            <param name="comment">Text of event</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IEvents.GetEventConfiguration">
            <summary>
            Gets event configuration.
            </summary>
            <returns>Event configuration</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IEvents.GetEventQueryText(ClearScada.Client.ObjectId)">
            <summary>
            Gets event query text.
            </summary>
            <param name="objectId">Object to obtain events query text.</param>
            <returns>Event query text</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IEvents.AddEventSubscription(System.String,System.String)">
            <summary>
            Subscribes to ClearSCADA OPC Events.
            </summary>
            <param name="clientId">Identifier to allow the events to be raised for the correct client.</param>
            <param name="filter">The event filter to use</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IEvents.AddEventSubscription(System.String,System.String,System.Collections.Generic.IList{ClearScada.Client.Advanced.OPCEventCategory})">
            <summary>
            Subscribes to ClearSCADA OPC Events with extra categories and atrributes.
            </summary>
            <param name="clientId">Identifier to allow the events to be raised for the correct client.</param>
            <param name="filter">The event filter to use</param>
            <param name="eventCategories">The OPC categories to requst extra attributes from.</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IEvents.RemoveEventSubscription(System.String)">
            <summary>
            Removes the subscription to ClearSCADA OPC Events.
            </summary>
            /// <param name="clientId">Identifier to allow the correct subscription to be removed.</param>
        </member>
        <member name="T:ClearScada.Client.Advanced.WebDocumentDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.WebDocumentDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.WebDocumentDetails.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.WebDocumentDetails.Link">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.OpcConditionState">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.ActiveSubCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.ActiveSubConditionDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.ActiveSubConditionPriority">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.ActiveSubConditionDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.Quality">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.LastAckTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.SubConditionLastActive">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.ConditionLastActive">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.ConditionLastInactive">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.AcknowledgerId">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.SubConditions">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcConditionState.AttributeErrors">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ExtendedSourceFilter">
            <summary>
            Filter for extended source
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ExtendedSourceFilter.Raw">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ExtendedSourceFilter.PutAside">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ExtendedSourceFilter.Max">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.OpcQualityFilter">
            <summary>
            Filter for OPC quality constants
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQualityFilter.FilterOpcQualityBad">
            <summary>
            Bad Quality
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQualityFilter.FilterOpcQualityUncertain">
            <summary>
            Uncertain quality
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQualityFilter.FilterOpcQualityGood">
            <summary>
            Good Quality
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQualityFilter.FilterOpcQualityAll">
            <summary>
            All Qualities
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.OpcVqt">
            <summary>
            Container class for value, quality, time values
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.OpcVqt.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.OpcVqt.#ctor(System.Object,ClearScada.Client.Advanced.OpcQuality)">
            <summary>
            Constructor
            </summary>
            <param name="value">The value</param>
            <param name="quality">The quality</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.OpcVqt.#ctor(System.Object,ClearScada.Client.Advanced.OpcQuality,System.DateTimeOffset)">
            <summary>
            Constructor
            </summary>
            <param name="value">The vlaue</param>
            <param name="quality">The quality</param>
            <param name="timestamp">The timestamp</param>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcVqt.Value">
            <summary>
            Get the value
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcVqt.Quality">
            <summary>
            Get the quality
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcVqt.HasQuality">
            <summary>
            Get if has quality
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcVqt.Timestamp">
            <summary>
            Get timestamp
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.OpcVqt.HasTimestamp">
            <summary>
            Get is has timestamp
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.OpcVqt.ClearQuality">
            <summary>
            Clear the quality
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.OpcVqt.ClearTimestamp">
            <summary>
            Clear the timestamp
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.DeletionDetails">
            <summary>
            Defines deletion details.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.DeletionDetails.DeleteObjects">
            <summary>
            The list of objects to delete.
            </summary>
            <remarks>
            Item1 - The ID of the object to delete.
            Item2 - The full name of the object to delete.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Advanced.DeletionDetails.RelatedObjects">
            <summary>
            The list of related objects.
            </summary>
            <remarks>
            Item1 - The ID of the object to delete.
            Item2 - The full name of the object to delete.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Advanced.DeletionDetails.ExcludeGroups">
            <summary>
            The list of groups to exclude.
            </summary>
            <remarks>
            Item1 - The ID of the group.
            Item2 - True if excluding references from the group and its children. False if excluding references from the group's children only.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.Advanced.HistoricAggregate">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricAggregate.Id">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricAggregate.AggregateType">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricAggregate.Name">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricAggregate.Description">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.HistoricItem">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricItem.Path">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricItem.Aggregate">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricItem.Samples">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.OPCHDAEditType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAEditType.None">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAEditType.OPCHDAInsert">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAEditType.OPCHDAReplace">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAEditType.OPCHDAInsertReplace">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAEditType.OPCHDADelete">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.HistoricSample">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricSample.Timestamp">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricSample.Quality">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricSample.Value">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricSample.ModificationTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricSample.ModificationUser">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricSample.ModificationType">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.HistoricTag">
            <summary>
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.HistoricTag.#ctor(System.String,System.Int32,System.Int32,System.Int64)">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricTag.Path">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricTag.Aggregate">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricTag.QualityFilter">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricTag.ExtendedSourceFilter">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.HistoricTag.XAxisOffset">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.OPCHDAAttribute">
            <summary>
            OPC Historic data definitions.
            Borrowed from opchda.h
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDADataType">
            <summary>
            OPCHDADataType
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDADescription">
            <summary>
            OPCHDADescription
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAEngineeringUnits">
            <summary>
            OPCHDAEngineeringUnits
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAStepped">
            <summary>
            OPCHDAStepped
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAArchiving">
            <summary>
            OPCHDAArchiving
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDADeriveEquation">
            <summary>
            OPCHDADeriveEquation
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDANodeName">
            <summary>
            OPCHDANodeName
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAProcessName">
            <summary>
            OPCHDAProcessName
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDASourceName">
            <summary>
            OPCHDASourceName
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDASourceType">
            <summary>
            OPCHDASourceType
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDANormalMaximum">
            <summary>
            OPCHDANormalMaximum
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDANormalMinimum">
            <summary>
            OPCHDANormalMinimum
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAItemId">
            <summary>
            OPCHDAItemId
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAMaxTimeInt">
            <summary>
            OPCHDAMaxTimeInt
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAMinTimeInt">
            <summary>
            OPCHDAMinTimeInt
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAExceptionDev">
            <summary>
            OPCHDAExceptionDev
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAExceptionDevType">
            <summary>
            OPCHDAExceptionDevType
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDAHighEntryLimit">
            <summary>
            OPCHDAHighEntryLimit
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.OPCHDALowEntryLimit">
            <summary>
            OPCHDALowEntryLimit
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDABase">
            <summary>
            SCXHDABase
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAFormat">
            <summary>
            SCXHDAFormat
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAListFormat">
            <summary>
            SCXHDAListFormat
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDALogarithmic">
            <summary>
            SCXHDALogarithmic
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimitCount">
            <summary>
            SCXHDAAlarmLimitCount
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit1">
            <summary>
            SCXHDAAlarmLimit1
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit1Description">
            <summary>
            SCXHDAAlarmLimit1Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit1Color">
            <summary>
            SCXHDAAlarmLimit1Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit2">
            <summary>
            SCXHDAAlarmLimit2
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit2Description">
            <summary>
            SCXHDAAlarmLimit2Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit2Color">
            <summary>
            SCXHDAAlarmLimit2Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit3">
            <summary>
            SCXHDAAlarmLimit3
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit3Description">
            <summary>
            SCXHDAAlarmLimit3Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit3Color">
            <summary>
            SCXHDAAlarmLimit3Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit4">
            <summary>
            SCXHDAAlarmLimit4
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit4Description">
            <summary>
            SCXHDAAlarmLimit4Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit4Color">
            <summary>
            SCXHDAAlarmLimit4Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit5">
            <summary>
            SCXHDAAlarmLimit5
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit5Description">
            <summary>
            SCXHDAAlarmLimit5Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit5Color">
            <summary>
            SCXHDAAlarmLimit5Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit6">
            <summary>
            SCXHDAAlarmLimit6
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit6Description">
            <summary>
            SCXHDAAlarmLimit6Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit6Color">
            <summary>
            SCXHDAAlarmLimit6Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit7">
            <summary>
            SCXHDAAlarmLimit7
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit7Description">
            <summary>
            SCXHDAAlarmLimit7Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit7Color">
            <summary>
            SCXHDAAlarmLimit7Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit8">
            <summary>
            SCXHDAAlarmLimit8
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit8Description">
            <summary>
            SCXHDAAlarmLimit8Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit8Color">
            <summary>
            SCXHDAAlarmLimit8Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit9">
            <summary>
            SCXHDAAlarmLimit9
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit9Description">
            <summary>
            SCXHDAAlarmLimit9Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit9Color">
            <summary>
            SCXHDAAlarmLimit9Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit10">
            <summary>
            SCXHDAAlarmLimit10
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit10Description">
            <summary>
            SCXHDAAlarmLimit10Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit10Color">
            <summary>
            SCXHDAAlarmLimit10Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit11">
            <summary>
            SCXHDAAlarmLimit11
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit11Description">
            <summary>
            SCXHDAAlarmLimit11Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit11Color">
            <summary>
            SCXHDAAlarmLimit11Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit12">
            <summary>
            SCXHDAAlarmLimit12
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit12Description">
            <summary>
            SCXHDAAlarmLimit12Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit12Color">
            <summary>
            SCXHDAAlarmLimit12Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit13">
            <summary>
            SCXHDAAlarmLimit13
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit13Description">
            <summary>
            SCXHDAAlarmLimit13Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit13Color">
            <summary>
            SCXHDAAlarmLimit13Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit14">
            <summary>
            SCXHDAAlarmLimit14
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit14Description">
            <summary>
            SCXHDAAlarmLimit14Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit14Color">
            <summary>
            SCXHDAAlarmLimit14Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit15">
            <summary>
            SCXHDAAlarmLimit15
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit15Description">
            <summary>
            SCXHDAAlarmLimit15Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit15Color">
            <summary>
            SCXHDAAlarmLimit15Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit16">
            <summary>
            SCXHDAAlarmLimit16
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit16Description">
            <summary>
            SCXHDAAlarmLimit16Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit16Color">
            <summary>
            SCXHDAAlarmLimit16Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit17">
            <summary>
            SCXHDAAlarmLimit17
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit17Description">
            <summary>
            SCXHDAAlarmLimit17Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit17Color">
            <summary>
            SCXHDAAlarmLimit17Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit18">
            <summary>
            SCXHDAAlarmLimit18
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit18Description">
            <summary>
            SCXHDAAlarmLimit18Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit18Color">
            <summary>
            SCXHDAAlarmLimit18Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit19">
            <summary>
            SCXHDAAlarmLimit19
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit19Description">
            <summary>
            SCXHDAAlarmLimit19Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit19Color">
            <summary>
            SCXHDAAlarmLimit19Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit20">
            <summary>
            SCXHDAAlarmLimit20
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit20Description">
            <summary>
            SCXHDAAlarmLimit20Description
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAAlarmLimit20Color">
            <summary>
            SCXHDAAlarmLimit20Color
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAFutureData">
            <summary>
            SCXHDAFutureData
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDATotalMultiplier">
            <summary>
            SCXHDATotalMultiplier
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAStateDescription">
            <summary>
            SCXHDAStateDescription
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OPCHDAAttribute.SCXHDAMasterStationStateDescription">
            <summary>
            SCXHDAMasterStationStateDescription
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IHistory">
            <summary>
            Historic data interface
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.ReadAggregates">
            <summary>
            Equivalent to CServerLinkOPCHDA::GetAggregates()
            </summary>
            <returns>A collection of historic aggregates</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.ReadRawHistory(System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.Boolean,ClearScada.Client.Advanced.HistoricTag[])">
            <summary>
            Reads the raw historic data
            </summary>
            <param name="startTime">Start time of historic data</param>
            <param name="endTime">End time of historic data</param>
            <param name="maxValues">Maximum number of values to return</param>
            <param name="bounds">Include bounds</param>
            <param name="tags">Tags to get historic data from</param>
            <returns>A collection of historic items</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.ReadProcessedHistory(System.DateTimeOffset,System.DateTimeOffset,System.TimeSpan,System.Int32,System.Boolean,ClearScada.Client.Advanced.HistoricTag[])">
            <summary>
            Reads the processed historic data
            </summary>
            <param name="startTime">Start time of historic data</param>
            <param name="endTime">End time of historic data</param>
            <param name="resampleTime">Time span to process data over</param>
            <param name="maxValues">Maximum number of values to return</param>
            <param name="bounds">Include bounds</param>
            <param name="tags">Tags to get historic data from</param>
            <returns>A collection of historic items</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.ReadModifiedHistory(System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.Boolean,ClearScada.Client.Advanced.HistoricTag[])">
            <summary>
            Reads the modified historic data
            </summary>
            <param name="startTime">Start time of historic data</param>
            <param name="endTime">End time of historic data</param>
            <param name="maxValues">Maximum number of values to return</param>
            <param name="bounds">Include bounds</param>
            <param name="tags">Tags to get historic data from</param>
            <returns>A collection of historic items</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.ReadAnnotations(System.DateTimeOffset,System.DateTimeOffset,ClearScada.Client.Advanced.HistoricTag[])">
            <summary>
            Reads the annotations on historic data
            </summary>
            <param name="startTime">Start time of historic data</param>
            <param name="endTime">End time of historic data</param>
            <param name="tags">Tags to get annotations from</param>
            <returns>A collection of annotations</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.EditAnnotation(System.String,System.DateTimeOffset,System.String,System.Boolean)">
            <summary>
            Insert or modify an annotation
            </summary>
            <param name="trace">The fullname of the trace</param>
            <param name="time">The time to insert or modify the annotation at</param>
            <param name="annotation">Contents of the annotation</param>
            <param name="modify">If this should modify an existing annotation</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.DeleteAnnotation(System.String,System.DateTimeOffset)">
            <summary>
            Delete an annotation
            </summary>
            <param name="trace">The fullname of the trace</param>
            <param name="time">The time of the annotation to delete</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.EditHistoricData(System.String,ClearScada.Client.Advanced.OpcQuality,System.String,ClearScada.Client.Advanced.HistoricPointData[])">
            <summary>
            Insert or modify a historic data point
            </summary>
            <param name="point">Fullname of point</param>
            <param name="comment">Text to add as comment</param>
            <param name="quality">OPC Quality</param>
            <param name="pointData">Collection of historic point data to add or modify</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.DeleteHistoricData(System.String,System.DateTimeOffset[])">
            <summary>
            Delete a historic data point
            </summary>
            <param name="point">Fullname of point</param>
            <param name="times">Collection of times to remove historic data at</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IHistory.ReadHistoricFileDateTimes(System.Int32,System.String)">
            <summary>
            Reads the time stamps for historic files
            </summary>
            <param name="objectId">The source object id</param>
            <param name="aggregateName"> The aggregate name </param>
            <returns>Collection of historic files</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.EventCategory">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventCategory.Id">
            <summary>
            The id of the category.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventCategory.Description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.PropertyAttribute">
            <summary>
            OPC Historic data definitions.
            Borrowed from opchda.h
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.CorePropertyBase">
            <summary>
            See SCX_PROP_BASE.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.ObjectId">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.ObjectName">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.AlarmViewClass">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.AlarmViewName">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.HelpViewName">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.HelpViewClass">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.AlarmRemovable">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.AlarmCanDisable">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.CorePropertyBase2">
            <summary>
            See SCX_PROP_BASE2.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.AlarmCanRespond">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.AlarmCanUnAcknowledge">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.PropertyAttribute.AlarmCanLocate">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IAlarms">
            <summary>
            An interface for alarms.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.GetAcknowledgeComments">
            <summary>
            Gets the preconfigured comments for acknowledging alarms
            </summary>
            <returns>Array of comments</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.GetAlarmConfiguration">
            <summary>
            Gets alarm configuration.
            </summary>
            <returns>Alarm Configuration</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.GetAlarmConfiguration(ClearScada.Client.Advanced.AlarmSound[])">
            <summary>
            Gets alarm configuration including sounds
            </summary>
            <param name="sounds">Alarm sounds</param>
            <returns>Alarm Configuration</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.GetFilteredAlarms(ClearScada.Client.Advanced.AlarmFilter)">
            <summary>
            Get the filtered alarms
            </summary>
            <param name="filter">Filter for the alarms</param>
            <returns>Alarm data</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.GetFilteredAlarms(ClearScada.Client.Advanced.AlarmFilter,System.DateTimeOffset)">
            <summary>
            Get the filtered alarms
            </summary>
            <param name="filter">Filter for the alarms</param>
            <param name="alarmsSince">Start time for alarms</param>
            <returns>Alarm data</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.GetManualRedirections(ClearScada.Client.Advanced.RedirectionRequestConditions[])">
            <summary>
            Get Manual Redirections
            </summary>
            <param name="conditions">Conditions</param>
            <returns>Collection of Alarm Redirection</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.TriggerManualRedirections(ClearScada.Client.ObjectId,System.String,ClearScada.Client.Advanced.AlarmActionItem[])">
            <summary>
            Trigger Manual Redirections
            </summary>
            <param name="actionId">Redirection Object</param>
            <param name="comment">Comment to log redirection</param>
            <param name="items">Alarms to redirect</param>
            <returns>Alarm Actions</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.GetConditionState(System.String,System.String,ClearScada.Client.Advanced.PropertyAttribute[])">
            <summary>
            Get Condition State
            </summary>
            <param name="source">Source object</param>
            <param name="condition">Condition</param>
            <param name="attributeIds">Attribute IDs to request</param>
            <returns>Condition state</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.AcknowledgeAlarms(System.String,ClearScada.Client.Advanced.AlarmActionItem[])">
            <summary>
            Acknowledge Alarms
            </summary>
            <param name="comment">Comment to add to Acknowledge</param>
            <param name="items">Alarms to Acknowledge</param>
            <returns>Alarm Actions</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.RemoveAlarms(System.String,ClearScada.Client.Advanced.AlarmActionItem[])">
            <summary>
            Remove Alarms
            </summary>
            <param name="comment">Comment to add to removal</param>
            <param name="items">Alarms to remove</param>
            <returns>Alarm Actions</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.SetAlarmsResponse(System.String,ClearScada.Client.Advanced.AlarmActionItem[])">
            <summary>
            Set Alarms Response
            </summary>
            <param name="response">Response message</param>
            <param name="items">Alarms to respond to</param>
            <returns>Alarm Actions</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.DisableAlarms(ClearScada.Client.Advanced.AlarmActionItem[])">
            <summary>
            Disable Alarms
            </summary>
            <param name="items">Alarms to disable</param>
            <returns>Alarm Actions</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAlarms.UnAcknowledgeAlarms(System.String,ClearScada.Client.Advanced.AlarmActionItem[])">
            <summary>
            UnAcknowledge Alarms
            </summary>
            <param name="comment">Comment to apply to the UnAcknowledgement</param>
            <param name="items">Alarms to UnAcknowledge</param>
            <returns>Alarm Actions</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.IAreaHierarchy">
            <summary>
            Area Hierarchy
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.LookupArea(ClearScada.Client.AreaOfInterestId)">
            <summary>
            Lookup an Area of interest
            </summary>
            <param name="areaId">Is of the area of interest</param>
            <returns>Details of the area of interest</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.FindArea(System.String)">
            <summary>
            Find an area of interest by name
            </summary>
            <param name="areaName">Name of the area of interest</param>
            <returns>Details of the area of interest</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.ListAreas(System.String,ClearScada.Client.AreaOfInterestId,System.Boolean)">
            <summary>
            List areas of interest matching pattern
            </summary>
            <param name="areaNamePattern">Pattern to search for</param>
            <param name="parentId">Parent ID to search within</param>
            <param name="childrenOnly">Only return direct children of the parent area</param>
            <returns>Details of the areas of interest found</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.ListManyAreas(ClearScada.Client.AreaOfInterestId[])">
            <summary>
            List areas of interests from each parent
            </summary>
            <param name="parentIds">Collection of ids of parent areas of interest</param>
            <returns>Details of the areas of interest found</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.LocateArea(ClearScada.Client.AreaOfInterestId)">
            <summary>
            Locate area of interest
            </summary>
            <param name="areaId">The area of interest id to locate</param>
            <returns>The parent areas of interest</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.CreateArea(ClearScada.Client.AreaOfInterestId,System.String)">
            <summary>
            Create area of interest
            </summary>
            <param name="parentId">Id to create new area under</param>
            <param name="areaName">Name of new area of interest</param>
            <returns>Details of new area of interest</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.GetDeleteAreaConsequences(ClearScada.Client.AreaOfInterestId)">
            <summary>
            Get the consequences of deleting an area of interest
            </summary>
            <param name="areaId">Id of area to delete</param>
            <returns>Warnings detailing potential issues with deleting the area</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.DeleteArea(ClearScada.Client.AreaOfInterestId,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Delete area of interest
            </summary>
            <param name="areaId">Id of area to delete</param>
            <param name="forceDeletion">Set to true to delete the area ignoring warnings</param>
            <param name="warnings">Warnings detailing potential issues with deleting the area</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.RenameArea(ClearScada.Client.AreaOfInterestId,System.String)">
            <summary>
            Rename Area of interest
            </summary>
            <param name="areaId">Id of target area</param>
            <param name="areaName">New name for area</param>
            <returns>Updated details for the renamed area of interest</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.MoveArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">
            <summary>
            Move Area of interest
            </summary>
            <param name="areaId">Id of target area</param>
            <param name="parentId">Id of new parent area of interest</param>
            <returns>Updated details for the moved area of interest</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.CopyArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId,System.String)">
            <summary>
            Copy Area of interest
            </summary>
            <param name="areaId">Id of target area</param>
            <param name="parentId">Id of new parent area of interest</param>
            <param name="areaName">Name of copied area of interest</param>
            <returns>Updated details for the moved area of interest</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.IBrowse">
            <summary>
            Browse interface for the database
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.IBrowse.IsFlat">
            <summary>
            Gets is the result a flat list
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.IBrowse.AllowBranches">
            <summary>
            Gets if Branches are allowed
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.IBrowse.AllowRoot">
            <summary>
            Gets is the root is allowed
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IBrowse.List">
            <summary>
            Lists the contents of the database
            </summary>
            <returns>Array of nodes found</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IBrowse.ListEx(System.String[],System.String[],System.Int32,System.Boolean,System.Int32,System.String[])">
            <summary>
            </summary>
            <param name="startPosition"></param>
            <param name="resumePosition"></param>
            <param name="continuationPoint"></param>
            <param name="recurse"></param>
            <param name="maxResults"></param>
            <param name="leafFilter"></param>
            <returns>BrowseListExResult</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IBrowse.MoveTo(System.String[])">
            <summary>
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IBrowse.GetFullName(System.String)">
            <summary>
            Gets the fullname of the database object
            </summary>
            <param name="name">database objects name</param>
            <returns>Fullname of the database object</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IBrowse.GetPath(System.String)">
            <summary>
            Get the objects path from its fullname
            </summary>
            <param name="fullName">The fullname of the object</param>
            <returns>The path to the object</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.IDatabaseMetadata">
            <summary>
            Database Metadata
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.GetClass(System.String)">
            <summary>
            Get Class Metadata
            </summary>
            <param name="className">Class name</param>
            <returns>Class metadata</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.GetClasses(System.String[])">
            <summary>
            Get Classes Metadata
            </summary>
            <param name="classNames">Array of class name</param>
            <returns>Collection of class metadata</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.ListClasses(System.String)">
            <summary>
            List Classes that derive from a base class
            </summary>
            <param name="baseClassName">The base class to search</param>
            <returns>Collection of class metadata</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.GetSeverities">
            <summary>
            Get Severities
            </summary>
            <returns>Collection of Severities</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.ListQueries">
            <summary>
            Get queries
            </summary>
            <returns>Collection of Queries</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.GetMetadata(System.Boolean,System.Boolean)">
            <summary>
            Get database Metadata
            </summary>
            <param name="allModules">True to get all installed modules</param>
            <param name="fullMetadata">True for more details information</param>
            <returns>XML document of the Database metadata</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.TagAccessRights">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.TagAccessRights.None">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.TagAccessRights.Readable">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.TagAccessRights.Writable">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IDataSource">
            <summary>
            Data Source
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IDataSource.TagsUpdated">
            <summary>
            Raised when a tag is updated
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.AddTags(ClearScada.Client.Advanced.TagDetails[])">
            <summary>
            Add tags to interest updates
            </summary>
            <param name="tags">Tags to register</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.RemoveTags(System.Int32[])">
            <summary>
            Remove tags from interest updates
            </summary>
            <param name="tagIds">Collection of Ids of tags</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.ValidateTags(System.String[])">
            <summary>
            Validate tags
            </summary>
            <param name="tags">Names of tags</param>
            <returns>Array of tag details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.ListTags">
            <summary>
            List tags currently registered for interest
            </summary>
            <returns>Array of tag details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.ReadTagValue(System.Int32)">
            <summary>
            Read the value of a tag
            </summary>
            <param name="tagId">Id of tag</param>
            <returns>Value of tag</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.ParseTag(System.String)">
            <summary>
            Parse information for tag
            </summary>
            <param name="tagName">The name of the tag</param>
            <returns>Parsed tag details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.ReadTagVqt(System.Int32)">
            <summary>
            Read the value, quality and time of the tag
            </summary>
            <param name="tagId">Id for the tag</param>
            <returns>Value, quality and time</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.WriteTagValue(System.Int32,System.Object)">
            <summary>
            Write a value to a tag (quality and time set to default).
            </summary>
            <param name="tagId">The tag identifier></param>
            <param name="value">The value</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.WriteTagVqt(System.Int32,ClearScada.Client.Advanced.OpcVqt)">
            <summary>
            Write VQT to a tag
            </summary>
            <param name="tagId">The tag identifier</param>
            <param name="vqt">Value, Quality, Time</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.WriteTagVqtElement(System.Int32,System.Int32,ClearScada.Client.Advanced.OpcVqt)">
            <summary>
            Write VQT to a tag array element
            </summary>
            <param name="tagId">The tag identifier</param>
            <param name="index">The array index</param>
            <param name="vqt">Value, Quality, Time</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.GetTagBrowse(ClearScada.Client.ObjectId,System.Type,ClearScada.Client.Advanced.TagAccessRights)">
            <summary>
            Get browse interface for tag
            </summary>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.GetTagFixedBranchNames(System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Get fixed branch names.
            </summary>
            <param name="rootGroup">Name of root group</param>
            <param name="searchKeys">Search Keys</param>
            <param name="config">Config</param>
            <param name="status">Status</param>
            <param name="systemStatus">System status</param>
        </member>
        <member name="T:ClearScada.Client.Advanced.ILink">
            <summary>
            Link
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ILink.PeerVersion">
            <summary>
            Gets the peer version.
            </summary>
            <value> The peer version </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ILink.EmulatedVersion">
            <summary>
            Gets the emulated version.
            </summary>
            <value> The emulated version </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ILink.Node">
            <summary>
            Gets the node configuration.
            </summary>
            <value> The node configuration</value>
        </member>
        <member name="M:ClearScada.Client.Advanced.ILink.StartSecureSession">
            <summary>
            Start Secure Session
            Only required for connection to older servers that are not secure all the time
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ILink.EndSecureSession">
            <summary>
            End Secure Session
            Only required for connection to older servers that are not secure all the time
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ILink.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Set the current culture for the link
            This will update the messages sent from the server to be localized for this culture (if available)
            </summary>
            <param name="culture">Culture to set</param>
        </member>
        <member name="T:ClearScada.Client.Advanced.GetObjectMenuOptions">
            <summary>
            Flags for menu construction
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.GetObjectMenuOptions.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.GetObjectMenuOptions.ReturnDescriptions">
            <summary>
            Return Descriptions of menu entries
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IObjectConfiguration">
            <summary>
            Object configuration interface.
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IObjectConfiguration.PropertyUpdated">
            <summary>
            Raised when a property is updated
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IObjectConfiguration.TaskQueued">
            <summary>
            Raised when a task is queued
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IObjectConfiguration.TaskProgress">
            <summary>
            Raised periodically with an update to the tasks progress
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IObjectConfiguration.TaskWarnings">
            <summary>
            Raised if a task has generated warnings
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IObjectConfiguration.TaskComplete">
            <summary>
            Raised when a task completes
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetProperty(ClearScada.Client.ObjectId,System.String)">
            <summary>
            Gets the value of a property
            </summary>
            <param name="objectId">Id of object of query</param>
            <param name="propertyName">Name of property to query</param>
            <returns>The value of the property</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetProperties(ClearScada.Client.ObjectId,System.String[])">
            <summary>
            Gets the values of named properties
            </summary>
            <param name="objectId">Id of object of query</param>
            <param name="propertyNames">Names of properties to query</param>
            <returns>The values of the properties</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetProperty(ClearScada.Client.ObjectId,System.String,System.Object)">
            <summary>
            Sets the value of a property
            </summary>
            <param name="objectId">Id of the object to update</param>
            <param name="propertyName">Name of property</param>
            <param name="value">Value to set the property to</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.IsPropertyWritable(ClearScada.Client.ObjectId,System.String)">
            <summary>
            Checks if a property can be written to
            </summary>
            <param name="objectId">Id of the object to query</param>
            <param name="propertyName">Name of property</param>
            <returns>Value indicating if the property is writeable or not</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetProperties(ClearScada.Client.ObjectId,System.String[],System.Object[])">
            <summary>
            Sets the values of a list of properties
            </summary>
            <param name="objectId">Id of the object to update</param>
            <param name="propertyNames">Names of properties</param>
            <param name="values">Values to set the properties to</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.InvokeUserMethod(ClearScada.Client.ObjectId,System.String,System.String)">
            <summary>
            Invoke a UserMethod on a specified object. The method is specified by the display name,
            to avoid non-User Methods being available for invocation.
            </summary>
            <param name="objectId">Id of the object to invoke the method upon</param>
            <param name="displayName"> The Display Name of the object's User Method.</param>
            <param name="methodName"> The underlying MethodName which is the key into the object's defined User Methods.</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.InvokeMethod(ClearScada.Client.ObjectId,System.String,System.Object[])">
            <summary>
            Invokes a method on an object
            </summary>
            <param name="objectId">Id of the object to invoke the method upon</param>
            <param name="methodName">The MethodName to invoke</param>
            <param name="arguments">Array of arguments required by the method</param>
            <returns>Result of the method</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetAggregate(ClearScada.Client.ObjectId,System.String,System.String)">
            <summary>
            Set Aggregate
            </summary>
            <param name="objectId">Id of the object to set the aggregate on</param>
            <param name="aggregateName">Name of the aggregate</param>
            <param name="aggregateClass">Class of the aggregate</param>
            <returns>Updated details of the aggregate</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetSecurity(ClearScada.Client.ObjectId)">
            <summary>
            Get security details of an object
            </summary>
            <param name="objectId">Id of the object to get the security details of</param>
            <returns>Security details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetSecurity(ClearScada.Client.ObjectId,ClearScada.Client.AccessControlList,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Set security details of an object
            </summary>
            <param name="objectId">Id of the object to set the security details nf</param>
            <param name="security">AccessControlList to set on the object</param>
            <param name="removeSecurityFromDescendants">If true this will override any child objects with this security</param>
            <param name="warnings">Warnings generated by changing the security</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetPropertyOverrides(ClearScada.Client.ObjectId)">
            <summary>
            Get the property overrides
            </summary>
            <param name="objectId">Id of the object to get the property overrides</param>
            <returns>The collection of property overrides</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetPropertyOverrides(ClearScada.Client.ObjectId,ClearScada.Client.PropertyOverrideCollection)">
            <summary>
            Set the property overrides
            </summary>
            <param name="objectId">Id of the object to set the property overrides</param>
            <param name="propertyOverrides">The collection of property overrides to apply</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetReferencesFrom(ClearScada.Client.ObjectId)">
            <summary>
            Gets the objects that target references
            </summary>
            <param name="objectId">Id of the object to get the references from</param>
            <returns>The details of all referenced objects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetReferencesTo(ClearScada.Client.ObjectId)">
            <summary>
            Gets the objects that reference the target
            </summary>
            <param name="objectId">Id of the object to get the references to</param>
            <returns>The details of all referencing objects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetEvents(ClearScada.Client.ObjectId,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Get events from an object
            </summary>
            <param name="objectId">Id of the object to get the events from</param>
            <param name="rangeStart">Earliest event time</param>
            <param name="rangeEnd">Latest event time</param>
            <returns>Collection of events</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetAlarms(ClearScada.Client.ObjectId)">
            <summary>
            Get alarms from an object
            </summary>
            <param name="objectId">Id of the object to get the alarms from</param>
            <returns>Collection of Alarms</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.AdvisePropertyUpdates(ClearScada.Client.ObjectId,System.String[])">
            <summary>
            Subscribe to updates to properties
            </summary>
            <param name="objectId">Id of the object to get the updates from</param>
            <param name="propertyNames">Properties ro register interest in</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.UnadvisePropertyUpdates(ClearScada.Client.ObjectId)">
            <summary>
            Unsubscribe to updates to properties
            </summary>
            <param name="objectId">Id of the object to unsubscribe from updates</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetDocumentContent(ClearScada.Client.ObjectId,System.Object,System.IO.Stream)">
            <summary>
            Gets the content of the document.
            </summary>
            <param name="objectId">The object id.</param>
            <param name="context">The context.</param>
            <param name="stream">The stream.</param>
            <returns>Details of object.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetWebDocumentContent(ClearScada.Client.ObjectId,System.Object,System.IO.Stream)">
            <summary>
            Gets the content of the document for the web client.
            </summary>
            <param name="objectId">The object id.</param>
            <param name="context">The context.</param>
            <param name="stream">The stream.</param>
            <returns>Details of object.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetDocumentContent(ClearScada.Client.ObjectId,System.String,System.IO.Stream,System.Int32,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Sets the content of the document.
            </summary>
            <param name="objectId">The object id.</param>
            <param name="expectedClass">The name of the expected object class.</param>
            <param name="stream">The stream containing the new content.</param>
            <param name="version">The version of the object.</param>
            <param name="force"><see langword="true"/> to force overwriting changes when version does not match.</param>
            <param name="warnings">Array of warnings from server.</param>
            <returns>Details of object.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetObjectMenu(ClearScada.Client.ObjectId,ClearScada.Client.Advanced.GetObjectMenuOptions)">
            <summary>
            Get menu options for an object
            </summary>
            <param name="objectId">The object id.</param>
            <param name="options">Menu options</param>
            <returns>Objects menu entries</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetMobileMethods(ClearScada.Client.ObjectId)">
            <summary>
            This gets an object's UserMethods relating to Mobile clients
            (These User Methods are simple methods whose execution is allowed on restricted, Mobile clients
            and are distinct from ObjectMethods belonging to the ObjectMenu.)
            </summary>
            <param name="objectId">The object id.</param>
            <returns>Collection of method details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetObjectMethods(ClearScada.Client.ObjectId)">
            <summary>
            Get Methods for an object
            </summary>
            <param name="objectId">The object id.</param>
            <returns>Collection of method details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetObjectMethod(ClearScada.Client.ObjectId,System.String)">
            <summary>
            Get Method for an object
            </summary>
            <param name="objectId">The object id.</param>
            <param name="methodName">Name of the method</param>
            <returns>Method details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetMobileObjectMenuDetails(System.String,System.Boolean)">
            <summary>
            Retrieves all the attributes required to populate a mobile client's object.
            </summary>
            <param name="objectFullName">Fullname of the object</param>
            <param name="requireMobileMethods">Indicates whether MobileMethod details for that</param>
            <returns>An object containing the fields in the response from DBServer.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetObjectStatus(ClearScada.Client.ObjectId)">
            <summary>
            Get Object Status
            </summary>
            <param name="objectId">The object id.</param>
            <returns>Collection of status information</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetObjectThumbnails(ClearScada.Client.ObjectId[])">
            <summary>
            Gets thumbnails for the provided list of objects. 
            </summary>
            <param name="objectIds">The object ids.</param>
            <remarks>One thumbnail per object. Objects and their thumbnails have matching indexes.</remarks>
            <returns>Returns a list of binary blobs representing the thumbnails. Null at the position where the object has no thumbnail.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.AdviseBackgroundTasks">
            <summary>
            Subscribe to background tasks
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.UnadviseBackgroundTasks">
            <summary>
            Unsubscribe to background tasks
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetMarkerColors(System.String)">
            <summary>
            Return the Marker Colors for points
            </summary>
            <param name="sourceTag">Fullname of source tag</param>
            <returns>Array of colors</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.ReadAttributes(System.String[],ClearScada.Client.Advanced.OPCHDAAttribute[])">
            <summary>
            Read Attributes
            </summary>
            <param name="sourceTag">Array of fullname of sources</param>
            <param name="attributes">Array of attributes to request</param>
            <returns>Collection of a collection of attributes</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetPrivileges(System.String[])">
            <summary>
            Get Privileges
            </summary>
            <param name="sourceTag">Array of sources</param>
            <returns>Collection of uints each representing the bitmask of privileges of a source</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetTemplatePropertyControls(ClearScada.Client.ObjectId)">
            <summary>
            Get collection of overrides for a specific object in a template.
            </summary>
            <param name="objectId">Id of object in template</param>
            <returns>Collection of Template Property Controls</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetTemplatePropertyControls(ClearScada.Client.ObjectId,ClearScada.Client.TemplatePropertyControlsCollection)">
            <summary>
            Sets collection of overrides for a specific object in a template.
            </summary>
            <param name="objectId">Id of the object to set the overrides on</param>
            <param name="propertyControls">The property controls to set</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetTemplateExpressionVariables(ClearScada.Client.ObjectId)">
            <summary>
            Returns the list of expressions variables defined in a template.
            </summary>
            <param name="objectId">Id of target object</param>
            <returns>Collection of template expression variables</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetTemplateExpressionVariables(ClearScada.Client.ObjectId,ClearScada.Client.TemplateExpressionVariablesCollection)">
            <summary>
            Sets the list of expressions variables defined in a template.
            </summary>
            <param name="objectId">Id of target object</param>
            <param name="variables">Collection of template expression variables</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetInstanceVariables(ClearScada.Client.ObjectId)">
            <summary>
            Returns the list of expressions variables defined in an instance.
            </summary>
            <param name="objectId">Id of target object</param>
            <returns>Collection of instance variables</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetInstanceVariables(ClearScada.Client.ObjectId,ClearScada.Client.InstanceVariablesCollection)">
            <summary>
            Sets the list of expressions variables defined in an instance.
            </summary>
            <param name="objectId">Id of target object</param>
            <param name="variables">Collection of instance variables</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetTemplateFields(ClearScada.Client.ObjectId)">
            <summary>
             Returns all configuration fields that are defined in all objects in a template.
            </summary>
            <param name="objectId">Id of target object</param>
            <returns>Collection of TemplateReadObjects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetTemplateOverrideDetails(ClearScada.Client.ObjectId)">
            <summary>
            Return all overriden fields in a template and all of its children.
            </summary>
            <param name="objectId">Id of template to get overrides from</param>
            <returns>Template Override Details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetTemplateOverrideDetails(ClearScada.Client.ObjectId,ClearScada.Client.TemplateOverrideDetails)">
            <summary>
            Sets all overriden fields in a template and all of its children. Returns latest configuration.
            </summary>
            <param name="objectId">Id of template to set overrides on</param>
            <param name="templateOverrides">Template overrides</param>
            <returns>Template Override Details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetInstanceVariablesGetDetails(ClearScada.Client.ObjectId,ClearScada.Client.InstanceVariablesCollection)">
            <summary>
            Sets the list of expressions variables defined in an instance. Return all overridden fields in an instance and all of its children.
            </summary>
            <param name="objectId">Instance object id</param>
            <param name="variables">Variables to set</param>
            <returns>Updated Instance override details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetInstanceOverrideDetails(ClearScada.Client.ObjectId)">
            <summary>
            Return all overridden fields in an instance and all of its children.
            </summary>
            <param name="objectId">Id of instance</param>
            <returns>Instance override details</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetObjectFields(System.String,System.String[])">
            <summary>
            Return field values of an object.
            </summary>
            <param name="objectName">Fullname of database object</param>
            <param name="fieldNames">Names of fields to query</param>
            <returns>Values of fields</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetDynamicLocation(ClearScada.Client.ObjectId,SchneiderElectric.Common.Types.GeoCoordinate)">
            <summary>
            Sets the location on an object that has a dynamic location source
            </summary>
            <param name="objectId"> The object to update </param>
            <param name="location"> The new location of the object </param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetLocation(ClearScada.Client.ObjectId)">
            <summary>
            Gets the objects location
            </summary>
            <param name="objectId"> The object to fetch the location of </param>
            <returns> The location if present else null </returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetAlarmLimits(System.String)">
            <summary>
            Get the Alarm Limits for a tag.
            </summary>
            <param name="tag">Name of target object</param>
            <returns>Collection of Alarm Limits</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetTrendSpecs(ClearScada.Client.ObjectId)">
            <summary>
            Get the Trend Specs for an object.
            </summary>
            <param name="objectId"> The object to fetch the trend specs of.</param>
            <returns>Collection of Trend Specs</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.ImportOptions">
            <summary>
            Import Options
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ImportOptions.None">
            <summary>
            Import duplicates as a copy
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ImportOptions.Merge">
            <summary>
            Merge matching import objects with their targets
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IObjectHierarchy">
            <summary>
            Object Hierarchy
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IObjectHierarchy.ObjectUpdated">
            <summary>
            Object Updated Event
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.LookupObject(ClearScada.Client.ObjectId)">
            <summary>
            Lookup Object
            </summary>
            <param name="objectId">Id of object to lookup</param>
            <returns>ObjectDetails for found object</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.LookupObjects(ClearScada.Client.ObjectId[])">
            <summary>
            Lookup Objects
            </summary>
            <param name="objectIds">Ids of objects to lookup</param>
            <returns>ObjectDetails for found objects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.FindObject(System.String)">
            <summary>
            Find Object by name
            </summary>
            <param name="objectName">Full name of object in database</param>
            <returns>ObjectDetails for found object</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.FindObjects(System.String[])">
            <summary>
            Find Objects by name
            </summary>
            <param name="objectNames">Names of database objects to find</param>
            <returns>ObjectDetails for found objects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ListObjects(System.String,System.String,ClearScada.Client.ObjectId,System.Boolean)">
            <summary>
            List Objects
            </summary>
            <param name="className">Class name of search target</param>
            <param name="objectNamePattern">Object name pattern</param>
            <param name="parentId">The object to search under</param>
            <param name="childrenOnly">Limit the results to children of the parent only</param>
            <returns>ObjectDetails for found objects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ListObjectsEx(ClearScada.Client.ObjectId,System.String,System.Boolean,System.String[],System.Boolean,System.Boolean@,System.Int32)">
            <summary>
            List Objects Extended method. Provides the extra capability of excluding specified object types and 
            limiting the number of reported matches. Used for clients which have limitation of resultsets. e.g. Mobile clients.
            </summary>
            <param name="parentId">The object to search under</param>
            <param name="objectNamePattern">Object name pattern</param>
            <param name="invertedMatch">true to invert the filter</param>
            <param name="classNames">Class names of search target</param>
            <param name="childrenOnly">Limit the results to children of the parent only</param>
            <param name="constrainedResultSet">Set to true if the result set was too large to return in full</param>
            <param name="maxSizeOfResultSet">Limit to the number of results to return</param>
            <returns>ObjectDetails for found objects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ListManyObjects(ClearScada.Client.ObjectId[])">
            <summary>
            Lists the immediate children of each of the elements in the given array objectIds
            </summary>
            <param name="objectIds">An array of object ids.</param>
            <returns>The two dimensional array of objects corresponding the given array of object Ids</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.LocateObject(ClearScada.Client.ObjectId)">
            <summary>
            Returns the details of all of the parent groups of the specified object.
            </summary>
            <param name="objectId">The object id.</param>
            <returns>ObjectDetails for found objects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetTemplateObject(ClearScada.Client.ObjectId)">
            <summary>
            Gets the Template of an instance object
            </summary>
            <param name="objectId">Id of instance object</param>
            <returns>ObjectDetails for found objects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.CreateObject(System.String,ClearScada.Client.ObjectId,System.String)">
            <summary>
            Create a new object
            </summary>
            <param name="className">Name of class of new object</param>
            <param name="parentId">Id of group to create object in</param>
            <param name="objectName">Name of the new object</param>
            <returns>ObjectDetails for new object</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.CreateInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">
            <summary>
            Create Instance of an existing template
            </summary>
            <param name="templateId">Id of the template to create an instance of</param>
            <param name="parentId">Id of group to create object in</param>
            <param name="instanceName">Name of the new instance</param>
            <returns>ObjectDetails for new instance</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.DeleteObject(ClearScada.Client.ObjectId,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Delete a database object
            </summary>
            <param name="objectId">Id of object to rename</param>
            <param name="forceDeletion">True to force the delete even if there are warnings</param>
            <param name="warnings">Warnings for what will happen if the delete is forced</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.DeleteObjectAsync(ClearScada.Client.ObjectId,System.Boolean)">
            <summary>
            Delete a database object asynchronously
            </summary>
            <param name="objectId">Id of object to rename</param>
            <param name="forceDeletion">True to force the delete even if there are warnings</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.RenameObject(ClearScada.Client.ObjectId,System.String)">
            <summary>
            Rename a database object
            </summary>
            <param name="objectId">Id of object to rename</param>
            <param name="objectName">New name for object</param>
            <returns>Details of new renamed object</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.MoveObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Move a database object
            </summary>
            <param name="objectId">Id of object to move</param>
            <param name="parentId">Id of target location</param>
            <param name="warnings">Array of warnings</param>
            <returns>Details of new moved object</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.CopyObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Copy a database object
            </summary>
            <param name="objectId">Id of object to copy</param>
            <param name="parentId">Id of target location</param>
            <param name="objectName">Name of new object post copy</param>
            <param name="warnings">Array of warnings</param>
            <returns>Details of new copied object</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.CopyObjectAsync(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">
            <summary>
            Copy a database object asynchronously
            </summary>
            <param name="objectId">Id of object to copy</param>
            <param name="parentId">Id of target location</param>
            <param name="objectName">Name of new object post copy</param>
            <returns>Id of the copy task</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetAvailableConversions(ClearScada.Client.ObjectId)">
            <summary>
            Get available conversions
            </summary>
            <param name="objectId">Id of object to be converted</param>
            <returns>Array of possible conversions</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ConvertObject(ClearScada.Client.ObjectId,System.String,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Convert a database object
            </summary>
            <param name="objectId">Id of object to convert</param>
            <param name="className">Target classname to convert to</param>
            <param name="warnings">Array of warnings</param>
            <returns>Details of the converted object</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ConvertInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Convert instance
            </summary>
            <param name="instanceId">Id of instance to convert</param>
            <param name="templateId">Id of Template to convert to</param>
            <param name="forceConversion">True to force the conversion</param>
            <param name="warnings">Collections of warnings generate by converting the instance</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ExportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Export database Configuration as current version
            </summary>
            <param name="objectId">Id of object to export</param>
            <param name="stream">Stream to hold the data</param>
            <param name="warnings">Array of any warnings export produced</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ExportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.VersionNumber,ClearScada.Client.Advanced.Warning[]@)">
            <summary>
            Export database Configuration
            </summary>
            <param name="objectId">Id of object to export</param>
            <param name="stream">Stream to hold the data</param>
            <param name="version">Version to export as</param>
            <param name="warnings">Array of any warnings export produced</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetExportVersions">
            <summary>
            Get available Export Versions
            </summary>
            <returns>A list of versions that the server can export to</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ImportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.ImportOptions)">
            <summary>
            Import database configuration
            </summary>
            <param name="parentId">The ObjectID of the group to import configuration under</param>
            <param name="stream">Data stream to import</param>
            <param name="options">The options to control type of Import</param>
            <returns>Id of import task</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.AdviseObjectUpdates(System.Boolean,System.String[])">
            <summary>
            Subscribe to object updates
            </summary>
            <param name="includeObjectsInTemplates">Should objects in templates be included</param>
            <param name="classNames">The Classes to subscribe to updates for</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.UnadviseObjectUpdates">
            <summary>
            Unsubscribe to object updates
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetObjectBrowse(ClearScada.Client.ObjectId,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="objectId"></param>
            <param name="className"></param>
            <param name="filterName"></param>
            <param name="filterParameter"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ListDocumentStores">
            <summary>
            Gets the available document stores
            </summary>
            <returns>Array of details for the document stores</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetValidationErrors(ClearScada.Client.ObjectId)">
            <summary>
            Get Validation Errors
            </summary>
            <param name="objectId">Is of object to check for validation errors</param>
            <returns>Array of warnings detailing the validation errors</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetDeletionDetails(ClearScada.Client.ObjectId)">
            <summary>
            Gets the details of a delete operation.
            </summary>
            <param name="objectId">The ID of the object to be deleted.</param>
            <returns>The info on the objects to be deleted.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetDeletionConsequences(System.Collections.Generic.ICollection{ClearScada.Client.ObjectId},System.Collections.Generic.ICollection{System.Tuple{ClearScada.Client.ObjectId,System.Boolean}})">
            <summary>
            Gets the consequences for a delete operation.
            </summary>
            <param name="objectIds">The IDs of the objects to delete.</param>
            <param name="excludeGroups">The groups to exclude. See <see cref="P:ClearScada.Client.Advanced.DeletionDetails.ExcludeGroups"/> for more info.</param>
            <returns>The warnings for deleting these objects</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ListFavourites">
            <summary>
            List Favourites.
            </summary>
            <returns>Root favourite.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.SearchForObjects(ClearScada.Client.Advanced.SearchDetails,System.Int32@)">
            <summary>
            Search the database for the matching objects
            </summary>
            <param name="searchDetails">The search parameters</param>
            <param name="totalResults">The total matched found which may be larger than the returned data</param>
            <returns>The first X matching objects where X is configured on the server</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetTotalObjectCount(ClearScada.Client.ObjectId)">
            <summary>
            Get total object count.
            </summary>
            <param name="objectId">The ID of the object to get total count.</param>
            <returns>Total object count of object.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchyInternal.ImportConfigurationSync(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.ImportOptions,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="parentId"></param>
             <param name="stream"></param>
             <param name="options"></param>
             <param name="warnings"></param>
             <returns>
             A <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> representing the top-level imported object if the call is blocking. Otherwise, <see cref="P:ClearScada.Client.Advanced.ObjectDetails.Empty"/>.
             </returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.IOfflineObjects">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectCreate(ClearScada.Client.ObjectId[],ClearScada.Client.ObjectId[],System.String[],System.String[])">
             <summary>
            
             </summary>
             <param name="existingObjects"></param>
             <param name="newObjectParents"></param>
             <param name="newObjectNames"></param>
             <param name="newObjectClasses"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectAssign(ClearScada.Client.ObjectId[],System.String)">
             <summary>
            
             </summary>
             <param name="objects"></param>
             <param name="userName"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectSetDeployState(ClearScada.Client.ObjectId[],System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="objects"></param>
             <param name="deploy"></param>
             <param name="warnings"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectCommit(ClearScada.Client.ObjectId[])">
             <summary>
            
             </summary>
             <param name="objects"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectQuery(ClearScada.Client.ObjectId[])">
             <summary>
            
             </summary>
             <param name="objects"></param>
        </member>
        <member name="T:ClearScada.Client.Advanced.IQuery">
            <summary>
            Query
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IQuery.Complete">
            <summary>
            Raised when an asynchronous query is completed
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IQuery.Progress">
            <summary>
            Raised to update an asynchronous query in progress
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IQuery.Canceled">
            <summary>
            Raised when an asynchronous query is cancelled
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IQuery.ExecuteSync(ClearScada.Client.Advanced.QueryExecuteParameters)">
            <summary>
            Execute Query Synchronously
            </summary>
            <param name="parameters">Query parameters</param>
            <returns>Query data</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IQuery.ExecuteAsync(ClearScada.Client.Advanced.QueryExecuteParameters)">
            <summary>
            Execute Query Asynchronously
            </summary>
            <param name="parameters">Query parameters</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IQuery.Cancel">
            <summary>
            Cancel Asynchronous Query
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IQuery.GetMetadata">
            <summary>
            Get Query Metadata
            </summary>
            <returns>Query Metadata</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IQuery.GetExtraMetadata">
            <summary>
            Get Extra Query Metadata
            </summary>
            <returns>Query Extra Metadata</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IQuery.ClearResults">
            <summary>
            Clear Results of query
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IQuerySource">
            <summary>
            Query Source
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IQuerySource.PrepareQuery(System.String,ClearScada.Client.Advanced.QueryParseParameters)">
            <summary>
            Prepare Query
            </summary>
            <param name="query">SQL query</param>
            <param name="parameters">Parameters for the query</param>
            <returns>Query interface</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.ChangePasswordOptions">
            <summary>
            Change Password Options
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ChangePasswordOptions.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ChangePasswordOptions.DoNotResetPreExpiredFlag">
            <summary>
            Do Not Reset PreExpired Flag
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ChangePasswordOptions.IsAdministrativeReset">
            <summary>
            Is Administrative Reset
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ISecurity">
            <summary>
            Security
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.ISecurity.NotifyUser">
            <summary>
            Notify User
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ISecurity.IsLoggedOn">
            <summary>
            Gets a value indicating the logged on status of the connection
            </summary>
            <value> The logged on status of the connection </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ISecurity.UserName">
            <summary>
            Gets UserName
            </summary>
            <value> The username </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ISecurity.UserObjectId">
            <summary>
            Gets UserObjectId
            </summary>
            <value> The Id of the current user </value>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.LogOn(System.String,System.Security.SecureString)">
            <summary>
            Log on
            </summary>
            <param name="userName">Username</param>
            <param name="password">Password</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.LogOn(System.String,System.Security.SecureString,ClearScada.Client.Advanced.ILogonInformation@)">
            <summary>
            Log on
            </summary>
            <param name="userName">Username</param>
            <param name="password">Password</param>
            <param name="logonInformation">Information about the logon</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.LogOff">
            <summary>
            Log off the current user
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.InactivityLogOff">
            <summary>
            Inactivity LogOff
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.ValidatePassword(System.Security.SecureString)">
            <summary>
            Validate Password is suitable for current security rules
            </summary>
            <param name="password">Password to check for validity</param>
            <returns>True if the password passes security rules</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.ValidateUser(System.String,System.Security.SecureString)">
            <summary>
            Validate User
            </summary>
            <param name="userName">Username</param>
            <param name="password">Password</param>
            <returns>True is credentials are correct</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.ChangePassword(ClearScada.Client.ObjectId,System.Security.SecureString,System.Security.SecureString,ClearScada.Client.Advanced.ChangePasswordOptions)">
            <summary>
            Change Password
            </summary>
            <param name="objectId">Id of user to change password for</param>
            <param name="oldPassword">Previous password</param>
            <param name="newPassword">New password</param>
            <param name="options">Options</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.ChangeExpiredPassword(System.String,System.Security.SecureString,System.Security.SecureString)">
            <summary>
            Change a users expired password
            </summary>
            <param name="userName">Username of user</param>
            <param name="oldPassword">Previous password</param>
            <param name="newPassword">New password</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.GetPasswordRules(ClearScada.Client.ObjectId)">
            <summary>
            Gets the password rules.
            </summary>
            <param name="objectId">The use object id.</param>
            <returns>The password rules</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.ChangeVoicemailPin(ClearScada.Client.ObjectId,System.Security.SecureString,System.Security.SecureString)">
            <summary>
            Change Voice mail Pin
            </summary>
            <param name="objectId">Users object id</param>
            <param name="oldPin">Old PIN</param>
            <param name="newPin">New PIN</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.AdviseNotifyUser">
            <summary>
            Advise Notify User events
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.UnadviseNotifyUser">
            <summary>
            Unadvise Notify User events
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.WebLicenseCount">
            <summary>
            Get the maximum count of WebX licenses for the server
            </summary>
            <returns>Maximum license count</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.SetAVEVAIdentityManagerUserToken(System.String)">
            <summary>
            Set the user token used to authenticate requests sent to the server
            </summary>
            <param name="token">An AVEVA Identity Manager user token</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.ClearUserToken">
            <summary>
            Clear the user token used to authenticate requests sent to the server
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ILogonInformation">
            <summary>
            Logon Information
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ILogonInformation.FailedLogons">
            <summary>
            Failed Logon count
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.DatabaseFeatures">
            <summary>
            Specifies flags corresponding to database features that can be enabled and disabled.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.None">
            <summary>
            No feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.Security">
            <summary>
            Security feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.HistoricData">
            <summary>
            Historic data feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.EventJournal">
            <summary>
            Event journal feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.AlarmsAndEvents">
            <summary>
            Alarms and events feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.HistoricValidation">
            <summary>
            Historic data validation feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.QualityClassification">
            <summary>
            Point quality classification feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.MultipleAlarmLimits">
            <summary>
            Point multiple alarm limits feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.ExclusiveControl">
            <summary>
            Exclusive control feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.MasterStationAlarmLimits">
            <summary>
            Point master station alarm limits feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.HistoricFiles">
            <summary>
            Historic files feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.AlarmResponse">
            <summary>
            Alarm response feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.AreaOfInterest">
            <summary>
            Area of interest feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.ConfigurationPermits">
            <summary>
            Configuration permits feature (obsolete).
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.PerUserSecurity">
            <summary>
            Per-user security feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.ConfigurationChanges">
            <summary>
            Configuration changes auditing feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.AlarmSummary">
            <summary>
            Alarm summary feature.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.AllowEditSql">
            <summary>
            Dynamic feature. Indicates whether 'Can Edit SQL' in an adhoc, operational context
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.DmzPermanentStandby">
            <summary>
            Dynamic feature. Indicates whether connected to DMZ permanent standby server.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ClientCertMode">
            <summary>
            Specifies whether client certificates will be sent to the server.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ClientCertMode.Disabled">
            <summary>
            Client certificates will not be sent to server.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ClientCertMode.Automatic">
            <summary>
            Client certificate will be automatically selected if requested by server.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ClientCertMode.Specified">
            <summary>
            Client certificate will be selected based on configured criteria if requested by server.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.CertSelectionMethod">
            <summary>
            Specifies the method of selecting a client certificate.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.CertSelectionMethod.Hash">
            <summary>
            Client certificate will be selected by hash.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.CertSelectionMethod.SubjectSubstring">
            <summary>
            Client certificate will be selected by matching a substring within the subject name field.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IServer">
            <summary>
            Advanced server interface.
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IServer.ServerShutdown">
            <summary>
            Event occurs when server is shutdown.
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IServer.StateChanged">
            <summary>
            Event occurs when server state changes.
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IServer.ForceLogoff">
            <summary>
            Event forces a log off (i.e when user account disabled)
            </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IServer.AccountLogonFailed">
            <summary>
            Event occurs when a log on fails for logged in user
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.IServer.ServerLabel">
            <summary>
            	Gets the label of the server.
            </summary>
            <value>
            	The label of the server.
            </value>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.AdviseStateChange">
            <summary>
            Subscribe to server state change events.
            </summary>
            <seealso cref="E:ClearScada.Client.Advanced.IServer.StateChanged"/>
            <seealso cref="M:ClearScada.Client.Advanced.IServer.UnadviseStateChange"/>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.UnadviseStateChange">
            <summary>
            Unsubscribe to server state change events.
            </summary>
            <seealso cref="E:ClearScada.Client.Advanced.IServer.StateChanged"/>
            <seealso cref="M:ClearScada.Client.Advanced.IServer.AdviseStateChange"/>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.GetServerState">
            <summary>
            Gets the current state of the server.
            </summary>
            <returns>The current server state.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.Poll">
            <summary>
            Poll the server.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.SupportsFeatures(ClearScada.Client.Advanced.DatabaseFeatures)">
            <summary>
            Test if the server supports a particular feature.
            </summary>
            <param name="features">The feature.</param>
            <returns><see langword="true"/> if feature is enabled and <see langword="false"/> if disabled.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.StartDatabase">
            <summary>
            Attempts to start the database if the server is in the Configuration Problem state.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.ShutdownServer">
            <summary>
            Initiates a shutdown of the server.
            </summary>
            <seealso cref="E:ClearScada.Client.Advanced.IServer.ServerShutdown"/>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.GetWebServerPort(System.Boolean@,System.Security.SecureString@)">
            <summary>
            Gets the configured settings for the web server.
            </summary>
            <param name="secureConnection">true if HTTPS is enabled</param>
            <param name="authenticationKey">The authentication key to logon with</param>
            <returns>The port number</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.LoopbackTest(System.Byte[],System.Int32)">
            <summary>
            Performs a loopback test.
            </summary>
            <param name="loopbackData">Data sent to the server</param>
            <param name="delay">Delay the server should apply before replying</param>
            <returns>The port number</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.CheckIntegrity(ClearScada.Client.IntegrityCheckOptionsSet)">
            <summary>
            Run integrity checks on database
            </summary>
            <param name="options">Integrity checks to run</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.SendReceiveModule(System.String,System.Int32,System.String,System.Byte[],System.Byte[]@)">
            <summary>
            Request that an action be performed by the named module.
            </summary>
            <param name="moduleName">The name of the module to send the requested action to.</param>
            <param name="action">The action to perform.</param>
            <param name="actionDescription">A description of the action to perform</param>
            <param name="data">The input data required by the action.</param>
            <param name="returnData">The output data from the action.</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.ConfigureConnectionSecurityServerSettings(ClearScada.Client.Advanced.CertLookupInfo[])">
            <summary>
            Configure the connection security settings used by the server when clients and partners connect to it.
            </summary>
            <param name="certs">A list of certificates to use. If null then automatically generated self-signed certificates will be used.</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.ConfigureConnectionSecurityClientRequirements(System.Boolean,System.Boolean)">
            <summary>
            Configure the connection security settings that define the requirements for clients and partners that connect to the server.
            </summary>
            <param name="requireClientCerts">true if clients are required to supply a valid certificate.</param>
            <param name="requireMappedClientCerts">true if clients are required to supply a certificate that is mapped to a Windows user account. This is ignored if requireClientCerts is false.</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.ConfigurePartnerConnectionSecurity(System.Boolean,ClearScada.Client.Advanced.ClientCertMode)">
            <summary>
            Configure the connection security settings for when the server connects to a partner.
            </summary>
            <param name="validateServerCert">true if the partner's certificate should be validated.</param>
            <param name="clientCertMode">Whether a client certificate is supplied to the server. Valid values are 'Disabled' and 'Automatic'. For 'Specified', see ConfigurePartnerConnectionSecuritySpecifiedClientCert(bool, CertSelectionMethod, string).</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.ConfigurePartnerConnectionSecuritySpecifiedClientCert(System.Boolean,ClearScada.Client.Advanced.CertSelectionMethod,System.String)">
            <summary>
            Configure the connection security settings for when the server connects to a partner. This overload implies a client certificate mode of 'Specified', see also ConfigurePartnerConnectionSecurity(bool, ClientCertMode).
            </summary>
            <param name="validateServerCert">true if the partner's certificate should be validated.</param>
            <param name="clientCertSelectionMode">The method by which the certificate is selected.</param>
            <param name="clientCertSearchString">The search string or hash used to select the certificate.</param>
        </member>
        <member name="T:ClearScada.Client.Advanced.CategoryMetadata">
            <summary>
            	A database category.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.CategoryMetadata.Name">
            <summary>
            	Gets the name of the category.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing category name.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.CategoryMetadata.SortWeight">
            <summary>
            	Gets the sorting weight of the category.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the weight.
            </value>
        </member>
        <member name="T:ClearScada.Client.Advanced.OpcCondition">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcCondition.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcCondition.Active">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcCondition.Acknowledged">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.OpcQuality">
            <summary>
            The OPC Quality constants
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.QualityMask">
            <summary>
            Quality mask
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.StatusMask">
            <summary>
            Status mask
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.LimitMask">
            <summary>
            limit mask
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.Bad">
            <summary>
            Bad quality
            </summary>		
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.Uncertain">
            <summary>
            Uncertain quality
            </summary>		 
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.Good">
            <summary>
            Good quality
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.ConfigError">
            <summary>
            Config error
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.NotConnected">
            <summary>
            Not connected
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.DeviceFailure">
            <summary>
            Device failure
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.SensorFailure">
            <summary>
            Sensor failure
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.LastKnown">
            <summary>
            Last known
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.CommFailure">
            <summary>
            Comms failure
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OutOfService">
            <summary>
            Out of service
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.WaitingForInitialData">
            <summary>
            Waiting for initial data
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.LastUsable">
            <summary>
            Last usable
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.SensorCalibration">
            <summary>
            Sensor CAL
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.EngineeringUnitsExceeded">
            <summary>
            Engineering units exceeded
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.Subnormal">
            <summary>
            Sub-normal
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.LocalOverride">
            <summary>
            Local override
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OPCHDAExtraData">
            <summary>
            Extra Data
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OPCHDAInterpolated">
            <summary>
            Interpolated
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OPCHDARaw">
            <summary>
            Raw
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OPCHDACalculated">
            <summary>
            Calculated
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OPCHDANoBound">
            <summary>
            No Bound
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OPCHDANoData">
            <summary>
            No Data
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OPCHDADataLost">
            <summary>
            Data Lost
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OPCHDAConversion">
            <summary>
            Conversion
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.OPCHDAPartial">
            <summary>
            Partial
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.SCXHDATimedOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.SCXHDADataEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.OpcQuality.SCXHDAAlarmState">
            <summary>
            Is in Alarm
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryExecuteOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryExecuteOptions.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryExecuteOptions.IsCursorQuery">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryExecuteOptions.ReturnIncrementalData">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryExecuteParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.QueryExecuteParameters.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.QueryExecuteParameters.#ctor(ClearScada.Client.Advanced.QueryExecuteOptions)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.QueryExecuteParameters.#ctor(System.Object[])">
            <summary>
            
            </summary>
            <param name="arguments"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.QueryExecuteParameters.#ctor(ClearScada.Client.Advanced.QueryExecuteOptions,System.Object[])">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="arguments"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryExecuteParameters.Options">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryExecuteParameters.MaxRowsToReturn">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryExecuteParameters.Arguments">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryCompleteEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryCompleteEventArgs.Result">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryCompleteEventArgs.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryExtraMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryExtraMetadata.Tables">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryExtraMetadata.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryType.Query">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryType.Update">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryType.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryType.Other">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryMetadata.QueryType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryMetadata.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryMetadata.ParameterTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryParseOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryParseOptions.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryParseOptions.FetchColumnEnums">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryParseParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.QueryParseParameters.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.QueryParseParameters.#ctor(ClearScada.Client.Advanced.QueryParseOptions)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryParseParameters.Options">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryProgressEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryProgressEventArgs.Progress">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryProgressEventArgs.Rows">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryStatus">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryStatus.Succeeded">
            <summary>
            The query succeeded and all data was returned.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryStatus.NoDataFound">
            <summary>
            The query succeeded, but returned no data.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryStatus.RowLimitReached">
            <summary>
            The query succeeded, but the maximum row limit was hit. Results may be incomplete.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryStatus.SizeLimitReached">
            <summary>
            The query succeeded, but the maximum resultset size limit was hit. Results may be incomplete.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryStatus.HistoricDataIncomplete">
            <summary>
            The query succeeded, but contains historic data and the database is still synchronizing. Results may be incomplete.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryStatus.PartiallySucceeded">
            <summary>
            A DML (INSERT, UPDATE or DELETE) query partially succeeded.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryResult">
            <summary>
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.QueryResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.Advanced.QueryResult"/> class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryResult.Status">
            <summary>
            Gets the status of the query.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryResult.RowsAffected">
            <summary>
            Gets the number of rows affected for a DML query.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryResult.Rows">
            <summary>
            Gets the results of the query.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryColumnAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Indexed">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Unique">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.RowVersion">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.ReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Id">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Foreground">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Blink">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.FullName">
            <summary />
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Background">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.RecordId">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.SequenceNumber">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.CommentNumber">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Hyperlink">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.EventSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.AreaOfInterest">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.AlarmCondition">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Constraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.SummaryFunction">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnAttributes.Constant">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryColumnCost">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnCost.Lowest">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnCost.Low">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnCost.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnCost.High">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.QueryColumnCost.Highest">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryColumn">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.BaseName">
            <summary>
            Gets the base name.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.TableName">
            <summary>
            Gets the table name.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.DataType">
            <summary>
            Gets the data type.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.Length">
            <summary>
            Gets the length.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.Cost">
            <summary>
            Gets the cost.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.Enumeration">
            <summary>
            Gets the enumeration.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryColumn.ReferenceClass">
            <summary>
            Gets the reference class.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryRow">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryRow.Index">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryRow.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryTable">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryTable.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryTable.BaseName">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ObjectStatusDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectStatusDetails.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectStatusDetails.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryDetails.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryDetails.Query">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TrendDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TrendDetails.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TrendDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TrendDetails.Specification">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodConfirmType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodConfirmType.Never">
            <summary>
            
            </summary>
            
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodConfirmType.Always">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodConfirmType.PerUser">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodTargetType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodTargetType.Object">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodTargetType.Aggregate">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodTargetType.AlarmCondition">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.HasReturnValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmUser">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmAlwaysPassword">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmUserPassword">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmAlways">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmNever">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmAlwaysNotes">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmAlwaysPasswordNotes">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmUserNotes">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmUserPasswordNotes">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.ConfirmMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.IsUserMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.IsAlarmMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.GroupMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodFlags.RequiresRefreshAfter">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodDetails">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.MethodDetails.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Object}},ClearScada.Client.Advanced.MethodTargetType,ClearScada.Client.Advanced.MethodFlags)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="displayName"></param>
            <param name="description"></param>
            <param name="prompt"></param>
            <param name="confirmText"></param>
            <param name="parameters"></param>
            <param name="target"></param>
            <param name="flags"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.Prompt">
            <summary>
            Prompt displayed to the user when the method is invoked via a dialog
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.ConfirmText">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.Parameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.HasReturnValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.Target">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.ConfirmType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.IsConfirmedWithPassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.MethodNotesType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.IsUserMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.IsAlarmMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.RequiresRefreshAfter">
            <summary>
            Gets a value indicating whether the object requires a refresh after invoking the method.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.LinkDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.LinkDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.LinkDetails.Details">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.EnumerationDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EnumerationDetails.Descriptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EnumerationDetails.Values">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EnumerationDetails.AllowEditing">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EnumerationDetails.ShowValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.RangeDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.RangeDetails.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.RangeDetails.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IntervalType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.IntervalType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.IntervalType.Milliseconds">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.IntervalType.Seconds">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.IntervalType.Minutes">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.IntervalType.Hours">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.IntervalType.Days">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.IntervalType.Weeks">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodParameterDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Range">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Enumeration">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsReturnValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsFileOpen">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsFileSave">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsServerFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsDBReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IntervalType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.UsesLabelAsName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsDateOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsTimeOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.UseUnsignedRange">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ObjectMenuDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Methods">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Trends">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Queries">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Links">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.WebDocuments">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.AlarmView">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.DefaultView">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.HelpView">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.TemplateObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Template">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.RedirectionRequestConditions">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.RedirectionRequestConditions.#ctor(System.String,System.String,System.DateTimeOffset,System.Int32)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="condition"></param>
            <param name="activeTime"></param>
            <param name="cookie"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.RedirectionRequestConditions.#ctor(ClearScada.Client.Advanced.AlarmRecord)">
            <summary>
            
            </summary>
            <param name="record"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.RedirectionRequestConditions.Source">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.RedirectionRequestConditions.Condition">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.RedirectionRequestConditions.ActiveTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.RedirectionRequestConditions.Cookie">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ScxComLinkQuery.PeerVersion">
            <summary>
            Gets the peer version.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ScxComLinkQuery.EmulatedVersion">
            <summary>
            Gets the emulated version.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ScxComLinkQuery.Node">
            <summary>
            Gets the node configuration.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkQuery.StartSecureSession">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComLinkQuery.EndSecureSession">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.SearchDetails">
            <summary>
            Settings for qualifying database searches
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.SearchDetails.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Construct a Search Details object
            </summary>
            <param name="searchText"></param>
            <param name="targetType"></param>
            <param name="templateOnly"></param>
            <param name="matchCase"></param>
            <param name="useFullName"></param>
            <param name="matchType"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.SearchDetails.SearchText">
            <summary>
            The string to search for in the database
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SearchDetails.TargetType">
            <summary>
            The class of the object to search for
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SearchDetails.TemplateOnly">
            <summary>
            Only search for items in Template Groups
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SearchDetails.MatchCase">
            <summary>
            Match the case of the search string exactly
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SearchDetails.UseFullName">
            <summary>
            Search using the fully qualified name of the objects
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SearchDetails.StringContains">
            <summary>
            Search for the string anywhere in the target field
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SearchDetails.StringStartsWith">
            <summary>
            Search for the string at the start of the target
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SearchDetails.StringEndsWith">
            <summary>
            Search for the string at the end of the target
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.SecureSocket.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:ClearScada.Client.Advanced.SeverityAlarmActions">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.SeverityAlarmActions.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.SeverityAlarmActions.Accept">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.SeverityAlarmActions.AcceptWithComment">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.SeverityAlarmActions.Unaccept">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.SeverityAlarmActions.UnacceptWithComment">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.SeverityAlarmActions.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.SeverityAlarmActions.RemoveWithComment">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.SeverityAlarmActions.Response">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.SeverityAlarmActions.Disable">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.SeverityConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.Priority">
            <summary>
            Gets the priority of the severity.
            </summary>
            <value>
            An <see cref="T:System.Int16"/> containing the numeric priority of the severity.
            </value>
            <remarks>
            The <b>Priority</b> of a <b>Severity</b> is a number between 1 and 1000 representing the relative priority of the severity.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.Description">
            <summary>
            Gets the description of the severity.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the description of the severity.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.UnacknowledgedColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.ClearedColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.AcknowledgedColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.AllowActions">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.UseIsSelectedBackgroundColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.IsSelectedBackgroundColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.UseRequestAcknowledgeBackgroundColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.RequestAcknowledgeBackgroundColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.UseResponsePresentBackgroundColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.ResponsePresentBackgroundColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityConfig.SoundData">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.SeverityDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityDefinition.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityDefinition.Definition">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityDefinition.Priority">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityDefinition.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.SeverityPair">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.SeverityPair.#ctor(System.Int16,System.Int16)">
            <summary>
            
            </summary>
            <param name="minimum"></param>
            <param name="maximum"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityPair.MinSeverity">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.SeverityPair.MaxSeverity">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.SeverityPair.op_Equality(ClearScada.Client.Advanced.SeverityPair,ClearScada.Client.Advanced.SeverityPair)">
            <summary>
            
            </summary>
            <param name="severity1"></param>
            <param name="severity2"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.SeverityPair.op_Inequality(ClearScada.Client.Advanced.SeverityPair,ClearScada.Client.Advanced.SeverityPair)">
            <summary>
            
            </summary>
            <param name="severity1"></param>
            <param name="severity2"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.SeverityPair.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.SeverityPair.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.TagParseInfo">
            <summary>
            Class to contain tag parsing information
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.ObjectName">
            <summary>
            The object name
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.ObjectId">
            <summary>
            The object id
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.IsAggregate">
            <summary>
            Is this an aggregate
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.AggregateName">
            <summary>
            Aggregate name
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.AggregateDispId">
            <summary>
            Aggregate DispId
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.PropertyName">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.PropertyDispId">
            <summary>
            Property DispId
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.PropertyType">
            <summary>
            Property type
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.IsReadOnly">
            <summary>
            Is the tag read only?
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagParseInfo.IsDefault">
            <summary>
            Is the tag default?
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.TagParseInfo.Deserialize(ClearScada.Client.Advanced.ScxComReader)">
            <summary>
            Deserialize the tag parse info from a read stream
            </summary>
            <param name="r">The read stream</param>
        </member>
        <member name="T:ClearScada.Client.Advanced.EventsUpdatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventsUpdatedEventArgs.ClientId">
            <summary>
            The Id for the client that requested these events.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EventsUpdatedEventArgs.Updates">
            <summary>
            Updated Events
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TagUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagUpdate.Id">
            <summary>
            Tag id
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagUpdate.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagUpdate.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagUpdate.Quality">
            <summary>
            Quality
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AggregateMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateMetadata.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateMetadata.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateMetadata.CanDisable">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateMetadata.Classes">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmConditionMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConditionMetadata.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConditionMetadata.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConditionMetadata.Category">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConditionMetadata.SubConditions">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ClassMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Categories">
            <summary>
            The nested categories of this instance.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.BaseClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.DerivedClasses">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Icons">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.DefaultPropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Methods">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Aggregates">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.AlarmConditions">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInDocStore">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInPermit">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.ConfigureRequiresSecurity">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.ConfigureAccessMask">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.SortWeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.Description">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.ReturnType">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.Parameters">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.InvokePermissions">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodParameterMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.Description">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.ParameterType">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.IsOptional">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.PropertyMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.Description">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.PropertyType">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.DataType">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.Length">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.ReferenceClass">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.IsReadable">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.IsWritable">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.WritePermissions">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.OpcPropertyId">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ObjectDetails">
            <summary>
            Information on an object in the database.
            </summary>
            <remarks>Derives from INotifyPropertyChanged to avoid 'WPF binding' memory leaks</remarks>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetails.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="E:ClearScada.Client.Advanced.ObjectDetails.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.Empty">
            <summary>
            Empty object.
            </summary>
            <value>
            An empty instance of <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> class.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.Id">
            <summary>
            Gets the ID of the object.
            </summary>
            <value>
            An <see cref="T:ClearScada.Client.ObjectId"/> containing object's ID.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.Name">
            <summary>
            Gets the name of the object.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the name.
            </value>
            <seealso cref="P:ClearScada.Client.Advanced.ObjectDetails.FullName"/>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.ParentId">
            <summary>
            Gets the ID of the parent object.
            </summary>
            <value>
            An <see cref="T:ClearScada.Client.ObjectId"/> containing parent's ID.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.FullName">
            <summary>
            Gets the full name of the object.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the full name.
            </value>
            <seealso cref="P:ClearScada.Client.Advanced.ObjectDetails.Name"/>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.AlternativeName">
            <summary>
            Gets the alternative name of the object.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the alternative name.
            </value>
            <seealso cref="P:ClearScada.Client.Advanced.ObjectDetails.Name"/>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.ClassName">
            <summary>
            Gets the name of object's class.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the class name.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IconIndex">
            <summary>
            Gets the index of object's icon.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> containing index.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.TemplateId">
            <summary>
            Gets the object ID of template containing the object (if any).
            </summary>
            <value>
            An <see cref="T:ClearScada.Client.ObjectId"/> of containing template.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.InstanceId">
            <summary>
            Gets the object ID of template instance containing the object (if any).
            </summary>
            <value>
            An <see cref="T:ClearScada.Client.ObjectId"/> of containing template instance.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.AccessRights">
            <summary>
            Gets the current users permissions for the object.
            </summary>
            <value>
            A bit mask of <see cref="T:ClearScada.Client.ObjectPermissions"/>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.ConfigVersion">
            <summary>
            Gets the configuration version of the object.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> containing the version number.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.ConfigCrc">
            <summary>
            Gets the CRC of the object's configuration.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> containing the CRC.
            </value>
            <seealso cref="P:ClearScada.Client.Advanced.ObjectDetails.ConfigHash"/>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.ConfigHash">
            <summary>
            Gets the hash of the object's configuration.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the hash.
            </value>
            <seealso cref="P:ClearScada.Client.Advanced.ObjectDetails.ConfigCrc"/>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.Aggregates">
            <summary>
            Gets the object's aggregates.
            </summary>
            <value>
            A read-only collection of aggregates.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.AlarmConditions">
            <summary>
            Gets the object's alarm conditions.
            </summary>
            <value>
            A read-only collection of alarm condition names.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsAlarmObject">
            <summary>
            Test whether object can have alarms.
            </summary>
            <value>
            <see langword="true"/> if object can have alarms, <see langword="false"/> is not.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsGroup">
            <summary>
            Test whether object is a type of group.
            </summary>
            <value>
            <see langword="true"/> if object is a group.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInstance">
            <summary>
            Test whether object is a template instance.
            </summary>
            <value>
            <see langword="true"/> if object is a template instance.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsControlledByInstance">
            <summary>
            Test whether object is controlled by a template instance.
            </summary>
            <value>
            <see langword="true"/> if object is controlled by a template instance, <see langword="false"/> if not in an instance or a local object in an instance.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasDocumentContentOverride">
            <summary>
            Test if object has a template property override on <b>DocumentContent</b> property.
            </summary>
            <value>
            <see langword="true"/> if object has property override.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsUser">
            <summary>
            Test whether object is a user.
            </summary>
            <value>
            <see langword="true"/> if object is a user.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasConfigErrors">
            <summary>
            Test whether object has configuration errors.
            </summary>
            <value>
            <see langword="true"/> if object has errors, <see langword="false"/> if no errors.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInDocumentStore">
            <summary>
            Test whether object is in an operator document store.
            </summary>
            <value>
            <see langword="true"/> if object is in an operator document store.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInDocumentStoreOfCurrentUser">
            <summary>
            Test whether object is in the operator document store of the current user.
            </summary>
            <value>
            <see langword="true"/> if object is in the users operator document store.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasSecurityOverride">
            <summary>
            Test whether object has a template property override on <b>AccessControlList</b> property.
            </summary>
            <value>
            <see langword="true"/> if object has property override.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasPaletteOverride">
            <summary>
            Test whether object has a template property override on <b>ColourPalette</b> property.
            </summary>
            <value>
            <see langword="true"/> if object has property override.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasTemplateOverride">
            <summary>
            Test whether object is a template instance with an overridden template.
            </summary>
            <value>
            <see langword="true"/> if object property override on template.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInstanceWithNoTemplate">
            <summary>
            Test whether object is a template instance but with no template configured.
            </summary>
            <value>
            <see langword="true"/> if object in an instance without a template.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasMfcContent">
            <summary>
            Test whether object has an MFC document.
            </summary>
            <value>
            <see langword="true"/> if object has MFC document.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasWpfContent">
            <summary>
            Test whether object has a WPF document.
            </summary>
            <value>
            <see langword="true"/> if object has WPF document.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasOfflineCopy">
            <summary>
            Test whether object has an offline copy.
            </summary>
            <value>
            <see langword="true"/> if object has offline copy.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsOfflineCopy">
            <summary>
            Test if object is an offline copy.
            </summary>
            <value>
            <see langword="true"/> if object is an offline copy.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsNewOfflineCopy">
            <summary>
            Test whether object is a new offline copy.
            </summary>
            <value>
            <see langword="true"/> if object is a new offline copy.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsDeployedOfflineCopy">
            <summary>
            Test if object is a deployed offline copy.
            </summary>
            <value>
            <see langword="true"/> if object is a deployed offline copy.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsDocumentStore">
            <summary>
            Test whether object is an operator document store.
            </summary>
            <value>
            <see langword="true"/> if object is an operator document store.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInExclusiveControl">
            <summary>
            Test whether the object is under exclusive control.
            </summary>
            <value>
            <see langword="true"/> if object is under exclusive control.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInExclusiveControlOfCurrentUser">
            <summary>
            Test whether the object is under the exclusive control of the current user.
            </summary>
            <value>
            <see langword="true"/> if object is under exclusive control of current user.
            </value>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetails.CheckAccess(ClearScada.Client.ObjectPermissions)">
            <summary>
            Test whether current user has access to object.
            </summary>
            <param name="permissions">The permissions to check.</param>
            <returns><see langword="true"/> if user has access to object.</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetails.UpdateFullName(System.String,System.String)">
            <summary>
            Move an object between groups.
            </summary>
            <param name="oldParentName">The name of old parent group.</param>
            <param name="newParentName">The name of new parent group.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="oldParentName"/> is <see langword="null"/>.
            	<paramref name="newParentName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="oldParentName"/> is empty string.
            	<paramref name="newParentName"/> is empty string.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<paramref name="oldParentName"/> doesn't match current name of parent group.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetails.UpdateVersion(ClearScada.Client.Advanced.ObjectDetails)">
            <summary>
            Update version number of object.
            </summary>
            <param name="details">The new details of update.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="details"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="details"/> is for a different object.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetails.WriteTo(System.IO.Stream)">
            <summary>
            Write the object details to a stream.
            </summary>
            <param name="stream">the output stream.</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetails.Copy">
            <summary>
            Copies this instance. A deep copy of all fields and properties is performed
            </summary>
            <returns>A copy of this instance</returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetails.WriteTo(ClearScada.Client.Advanced.ScxComWriter)">
            <summary>
            Write the object details to a SCX Com Writer.
            </summary>
            <param name="writer">The given SCX Com Writer </param>
        </member>
        <member name="P:ClearScada.Client.Advanced.ScxComLink.ConnectionUseable">
            <summary>
            ConnectionUseable indicates whether a request can be sent.
            A connection can become unuseable when an outstanding response exists on the connection but the application
            did not receive a timely response. Essentially, if there is a response outstanding for a stream the link should not
            be used again and needs to be closed. (If a message-based transport is being used, this might not invalidate the use of the link.)
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ScxComReader.GetOrAddCachedString(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Gets an equivalent cached instance of a given string. This prevents multiple instances of strings that have limited possible values (class name, aggregate name, alarm condition).
            </summary>
            <param name="cache">The container for the cached strings.</param>
            <param name="value">The string.</param>
            <returns>The cached string.</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.TagDetails">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.TagDetails.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="path"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.TagDetails.#ctor(System.Int32,System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="path"></param>
            <param name="updateRate"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.IsValid">
            <summary>
            IsValid
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.Id">
            <summary>
            Subscription id
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.Path">
            <summary>
            Path
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.DataType">
            <summary>
            Data type
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.UpdateRate">
            <summary>
            The update rate
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.InitialStatus">
            <summary>
            The initial status
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.InitialValue">
            <summary>
            The initial value
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.InitialQuality">
            <summary>
            The initial quality
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.InitialTimestamp">
            <summary>
            The initial timestamp
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TagsUpdatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagsUpdatedEventArgs.Updates">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TaskCompleteEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskCompleteEventArgs.Status">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskCompleteEventArgs.Result">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskCompleteEventArgs.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TaskEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskEventArgs.TaskId">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TaskProgressEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskProgressEventArgs.CurrentProgress">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskProgressEventArgs.TotalProgress">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskProgressEventArgs.Status">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TaskQueuedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskQueuedEventArgs.TargetObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskQueuedEventArgs.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TaskWarningsEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TaskWarningsEventArgs.Warnings">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TrendSpec">
            <summary>
            Wrap up a Trend Spec and its Display Name
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.TrendSpec.#ctor(System.String,System.String)">
            <summary>
            TrendSpec constructor.
            <param name="displayName">The trend spec Display Name.</param>
            <param name="value">The trend spec value.</param>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TrendSpec.DisplayName">
            <summary>
            Gets the Display Name.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TrendSpec.Value">
            <summary>
            Gets the trend spec Value.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.UserPasswordRules">
            <summary>
            The user password rules class
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.UserPasswordRules.#ctor(System.Boolean,System.Int32,System.PasswordStrength,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.Advanced.UserPasswordRules"/> class.
            </summary>
            <param name="mustHavePassword">if set to <c>true</c> the user must have a password.</param>
            <param name="minimumLength">The minimum length.</param>
            <param name="passwordStrength">The password strength.</param>
            <param name="canChangePassword">if set to <c>true</c> the user can change password.</param>
            <param name="expirationWarningDays">Warning to be given N days prior to password expiration</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.UserPasswordRules.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.Advanced.UserPasswordRules"/> class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserPasswordRules.MustHavePassword">
            <summary>
            Gets a value indicating whether this user must have a password.
            </summary>
            <value>
              <c>true</c> if the user must have a password; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserPasswordRules.MinimumLength">
            <summary>
            Gets the minimum length.
            </summary>
            <value>
            The minimum length.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserPasswordRules.PasswordStrength">
            <summary>
            Gets the password strength.
            </summary>
            <value>
            The password strength.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserPasswordRules.CanChangePassword">
            <summary>
            Gets a value indicating whether this user can change password.
            </summary>
            <value>
            	<c>true</c> if this user can change password; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserPasswordRules.ExpirationWarningDays">
            <summary>
            Gets a value indicating the number of days prior to password expiration
            that a user should receive a warning.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.UserCapability">
            <summary>
            User capabilities for ViewX
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.DoubleClickEditsDocuments">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.DoubleClickShowsProperties">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanToggleFullScreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanCloseViewX">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.UseServerLabel">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanOperate">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanDisplayAlarms">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanDisplayEvents">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanViewConfiguration">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanConfigureDocuments">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanConfigureDatabase">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanConfigureOptions">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanDisableAlarmBell">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.IsAlarmBellInitiallyDisabled">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanSelectMultipleAlarms">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.HasAlarmBannerAtTop">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanResizeAlarmBanner">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanMoveAlarmBanner">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanRemoveAlarmBanner">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanDebugScripts">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanFilterAlarmBanner">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.MultipleDocuments">
            <summary>
            Multi Document Interface
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.ShowHomepageAtLogOn">
            <summary>
            Show Homepage at Log on
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreDatabase">
            <summary>
            Explorer Bars - Database
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreQueries">
            <summary>
            Explorer Bars - Queries
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreAreasOfInterest">
            <summary>
            Explorer Bars - Areas of Interest
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreOperatorDocuments">
            <summary>
            Explorer Bars - Areas of Interest
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreOPC">
            <summary>
            Explorer Bars - OPC
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreOPCHistoric">
            <summary>
            Explorer bars - OPC Historic
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreFavorites">
            <summary>
            Explorer bars - Favorites
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanViewAlarmSummary">
            <summary>
            Alarm summary
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreWebXDatabase">
            <summary>
            Explorer Trees - Database
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreWebXQueries">
            <summary>
            Explorer Trees - Queries
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreWebXUserQueries">
            <summary>
            Explorer Trees - User Queries
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreWebXOperatorDocuments">
            <summary>
            Explorer Trees - Operator Documents
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanExploreWebXFavorites">
            <summary>
            Explorer Trees - Favorites
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanUseWebXAlarmBanner">
            <summary>
            Can use WebX alarm banner
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.WebXAlarmBannerAtTop">
            <summary>
            WebX alarm banner at top of page by default
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanResizeWebXAlarmBanner">
            <summary>
            Can resize WebX alarm banner
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanMoveWebXAlarmBanner">
            <summary>
            Can move WebX alarm banner between top and bottom
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanRemoveWebXAlarmBanner">
            <summary>
            Can hide and show WebX alarm banner
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanOperateWebX">
            <summary>
            Can Perform operations on database objects in WebX
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.Max">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.CalendarType">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.CalendarType.Gregorian">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.CalendarType.Persian">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.UserProfileDetails">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.UserProfileDetails.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.Advanced.UserProfileDetails"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:ClearScada.Client.Advanced.UserProfileDetails.#ctor">
            <remarks>
            For mocking only
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Locale">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Calendar">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.DisplayTimesInUtc">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.DefaultDateFormat">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Homepage">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.HomepageClass">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.InactivityTimeout">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.MustConfirmMethods">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.DefaultAlarmBannerFilter">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.MinimumAlarmBannerRows">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.AlarmBannerFilterTimeout">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Features">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Capabilities">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.WebXFeatures">
            <summary>
            Gets the WebX specific features of the user
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.ClientSettings">
            <summary>
            Gets the client-side settings stream
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.LocationUpdateViewX">
            <summary>
            Get the flag to indicate if ViewX can update the users location
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.LocationUpdateVirtualViewX">
            <summary>
            Get the flag to indicate if VirtualViewX can update the users location
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.LocationUpdateMobile">
            <summary>
            Get the flag to indicate if Mobile clients can update the users location
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.UserProfileDetails.Write(System.IO.Stream)">
            <summary>
            Writes the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:ClearScada.Client.Advanced.ObjectChangeDetails">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.Empty">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.Id">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.IsNew">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.IsDeployed">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.FullName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.Changes">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.PropertyChangeDetails">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyChangeDetails.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyChangeDetails.OldValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyChangeDetails.NewValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.Warning">
            <summary>
            A warning reported by the server.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.Text">
            <summary>
            Gets description of warning.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing description.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.ObjectId">
            <summary>
            Gets ID of object associated with the warning.
            </summary>
            <value>
            An <see cref="P:ClearScada.Client.Advanced.Warning.ObjectId"/> for object.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.ObjectName">
            <summary>
            Gets name of object associated with the warning.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing full name of object.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.Data">
            <summary>
            Gets custom data of warning.
            </summary>
            <value>
            A <see cref="T:System.Int32"/> containing custom data. Depends on specific warning.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.AggregateName">
            <summary>
            Gets name of aggregate (if any) of field associted with the warning.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing aggregate name. Empty string if no aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.FieldName">
            <summary>
            Gets name of field (if any) associated with the warning.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing field name. Empty string if no field.
            </value>
        </member>
        <member name="M:ClearScada.Client.Advanced.Warning.CreateWarnings(System.IO.Stream)">
            <summary>
            Read an array of warnings from a stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>An array of warnings read from the stream.</returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.VersionNumber">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.VersionNumber.CurrentVersion">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.#ctor(System.UInt16,System.UInt16,System.UInt16)">
             <summary>
            
             </summary>
             <param name="major"></param>
             <param name="minor"></param>
             <param name="build"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.#ctor(ClearScada.Client.Advanced.VersionNumber)">
             <summary>
            
             </summary>
             <param name="version"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.VersionNumber.Major">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.VersionNumber.Minor">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.VersionNumber.Build">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.op_Explicit(ClearScada.Client.Advanced.VersionNumber)~System.Int32">
             <summary>
            
             </summary>
             <param name="version"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.op_Explicit(ClearScada.Client.Advanced.VersionNumber)~System.UInt32">
             <summary>
            
             </summary>
             <param name="version"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.op_Equality(ClearScada.Client.Advanced.VersionNumber,ClearScada.Client.Advanced.VersionNumber)">
             <summary>
            
             </summary>
             <param name="version1"></param>
             <param name="version2"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.op_Inequality(ClearScada.Client.Advanced.VersionNumber,ClearScada.Client.Advanced.VersionNumber)">
             <summary>
            
             </summary>
             <param name="version1"></param>
             <param name="version2"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.Equals(ClearScada.Client.Advanced.VersionNumber)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:ClearScada.Client.AlarmDetailsCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.AlarmDetails"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.AreaReference">
            <summary>
            	Represents a reference from a database object to an Area of Interest.
            </summary>
        </member>
        <member name="P:ClearScada.Client.AreaReference.Source">
            <summary>
            	Gets the source of the reference.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> representing the source of the reference (the referencing object).
            </value>
        </member>
        <member name="P:ClearScada.Client.AreaReference.Target">
            <summary>
            	Gets the target of the reference.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Advanced.AreaDetails"/> representing the target of the reference (the referenced area).
            </value>
        </member>
        <member name="T:ClearScada.Client.ConnectionType">
            <summary>
            Obsolete, only included to stop old programs from breaking
            </summary>
        </member>
        <member name="P:ClearScada.Client.ConnectionType.Standard">
            <summary>
            Obsolete, does nothing
            </summary>
        </member>
        <member name="T:ClearScada.Client.ClientConnectionSettings">
            <summary>
            Settings to identify the kind of client
            </summary>
        </member>
        <member name="P:ClearScada.Client.ClientConnectionSettings.IsLimited">
            <summary>
            Should the server treat this client as a limited connection
            </summary>
        </member>
        <member name="P:ClearScada.Client.ClientConnectionSettings.IsVirtualized">
            <summary>
            Should the server treat this client as Virtualized. i.e. Virtual ViewX
            </summary>
        </member>
        <member name="T:ClearScada.Client.InvalidOPCParseException">
            <summary>
            	The exception that is thrown when an invalid OPC Format is passed to the server for parsing.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidOPCParseException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidOPCParseException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidOPCParseException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidOPCParseException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidOPCParseException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidOPCParseException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.InvalidRegionException">
            <summary>
            	The exception that is thrown when an invalid Region is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidRegionException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidRegionException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidRegionException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidRegionException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidRegionException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidRegionException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.InvalidRegionException.RegionId">
            <summary>
            	Gets the ID of the region that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the region that caused the exception; or, <see cref="F:ClearScada.Client.ObjectId.Null"/> if the exception was caused by passing an unknown region name.
            </value>
        </member>
        <member name="P:ClearScada.Client.InvalidRegionException.RegionName">
            <summary>
            	Gets the name of the region that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the region that caused the exception; or, an empty string if the exception was caused by passing an unknown region ID.
            </value>
        </member>
        <member name="M:ClearScada.Client.InvalidRegionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.InvalidTemplateParameterException">
            <summary>
            	The exception that is thrown when an invalid template parameter is configured.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidTemplateParameterException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidTemplateParameter</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidTemplateParameterException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidTemplateParameter</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidTemplateParameterException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidTemplateParameter</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.InstanceOverrideDetails">
            <summary>
            	Represents all overridden fields, variables and errors in a instance
            </summary>
        </member>
        <member name="M:ClearScada.Client.InstanceOverrideDetails.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ClearScada.Client.InstanceOverrideDetails.Overrides">
            <summary>
            All the overrides for all object contained in the template instance.
            </summary>
            <value>
            A collection of template overrides.
            </value>
        </member>
        <member name="P:ClearScada.Client.InstanceOverrideDetails.Variables">
            <summary>
            The variables used in the calculating expression overrides.
            </summary>
            <value>
            A collection of instance variables.
            </value>
        </member>
        <member name="P:ClearScada.Client.InstanceOverrideDetails.Errors">
            <summary>
            List of errors raised calculating expression overrides for the instance.
            </summary>
            <value>
            A list of property errors.
            </value>
        </member>
        <member name="T:ClearScada.Client.AllTemplateOverridesCollection">
            <summary>
            	Represents all overridden fields in a template and all its children.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AllTemplateOverridesCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ClearScada.Client.AllTemplateOverridesCollection.Id">
            <summary>
            	Id of object in ClearSCADA Database.
            </summary>
            <value>
            	Object Id.
            </value>
        </member>
        <member name="P:ClearScada.Client.AllTemplateOverridesCollection.ObjectName">
            <summary>
            	Name of object.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object.
            </value>
        </member>
        <member name="P:ClearScada.Client.AllTemplateOverridesCollection.ClassName">
            <summary>
            	Type of object
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object's class.
            </value>
        </member>
        <member name="P:ClearScada.Client.AllTemplateOverridesCollection.IconIndex">
            <summary>
            	Currently always 0
            </summary>
            <value>
            	Unused.
            </value>
        </member>
        <member name="P:ClearScada.Client.AllTemplateOverridesCollection.Overrides">
            <summary>
            	All overrides of the object
            </summary>
            <value>
            	A collection of all property overrides.
            </value>
        </member>
        <member name="P:ClearScada.Client.AllTemplateOverridesCollection.Aggregates">
            <summary>
            	Overrides on aggregates and aggregate fields in the object.
            </summary>
            <value>
            	A list of aggregate property overrides.
            </value>
        </member>
        <member name="P:ClearScada.Client.AllTemplateOverridesCollection.Children">
            <summary>
            	The overrides of any child objects ( Only used for group type objects )
            </summary>
            <value>
            	A list of child objects property overrides.
            </value>
        </member>
        <member name="T:ClearScada.Client.ClientLicense">
            <summary>
            	Client license.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ClientLicense.#ctor(NLog.Logger,SchneiderElectric.Common.Util.ILoggingSource,System.Int32)">
            <summary>
            	Client license constructor.
            </summary>
            <param name="logger">Logger.</param>
            <param name="loggingSource">Logging source.</param>
            <param name="timeout">Connection send and receive timeout in seconds.</param>
        </member>
        <member name="M:ClearScada.Client.ClientLicense.GetInstance(NLog.Logger,SchneiderElectric.Common.Util.ILoggingSource,System.Int32)">
            <summary>
            Get the instance of the ClientLicense singleton
            </summary>
            <param name="logger">Logger.</param>
            <param name="loggingSource">Logging source.</param>
            <param name="timeout">Connection send and receive timeout in seconds.</param>
            <returns>The client license.</returns>
        </member>
        <member name="M:ClearScada.Client.ClientLicense.GetLicense(System.Int32,System.String,System.String)">
            <summary>
            Get a license from the client license server
            </summary>
            <param name="minorVersion">ClearSCADA minor version number.</param>
            <param name="systemName">Name of system.</param>
            <param name="clientName">Name of client.</param>
            <returns>True if licensed, false if unlicensed.</returns>
        </member>
        <member name="M:ClearScada.Client.ClientLicense.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:ClearScada.Client.InstanceVariable">
            <summary>
            	Represents a single property variable to be used in instance
            </summary>
        </member>
        <member name="M:ClearScada.Client.InstanceVariable.#ctor(System.Object,System.Object,System.String,ClearScada.Client.ExpressionVariableType)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.TemplatePropertyControl"/> class as a property expression.
            </summary>
            <param name="currentValue">
            	Expression used to calculate instance parameter
            </param>
            <param name="defaultValue">
            	Value of parameter defined in template.
            </param>
            <param name="description">
            	Text string to describe the behavior of the variable.
            </param>
            <param name="type">
            	Defines the type of the variable.
            </param>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            </remarks>
        </member>
        <member name="P:ClearScada.Client.InstanceVariable.CurrentValue">
            <summary>
            Value to be used for variable in template instance.
            </summary>
            <value>
            An <see cref="T:System.Object"/> containing the current value of variable.
            </value>
        </member>
        <member name="P:ClearScada.Client.InstanceVariable.DefaultValue">
            <summary>
            Value defined for variable in template.
            </summary>
            <value>
            An <see cref="T:System.Object"/> containing the default value of variable.
            </value>
        </member>
        <member name="P:ClearScada.Client.InstanceVariable.Description">
            <summary>
            Description defined for variable in template.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the description.
            </value>
        </member>
        <member name="P:ClearScada.Client.InstanceVariable.VariableType">
            <summary>
            Variable Type
            </summary>
            <value>
            A <see cref="T:ClearScada.Client.ExpressionVariableType"/> defining the type of the variable.
            </value>
        </member>
        <member name="T:ClearScada.Client.InstanceVariablesCollection">
            <summary>
            	Represents the variables used in a templates property controls expression.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that is empty.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.InstanceVariable}})">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that contains properties copied from the specified collection.
            </summary>
            <param name="expressionVariables">
            	The collection whose properties are copied to the new <see cref="T:ClearScada.Client.InstanceVariable"/>.
            </param>
        </member>
        <member name="P:ClearScada.Client.InstanceVariablesCollection.Count">
            <summary>
            	Gets the number of properties in the collection.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of properties in the collection.
            </value>
        </member>
        <member name="P:ClearScada.Client.InstanceVariablesCollection.Item(System.String)">
            <summary>
            	Finds or Sets the variable in the collection
            </summary>
            <value>
            	The found variable.
            </value>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.Add(System.String,ClearScada.Client.InstanceVariable)">
            <summary>
            	Adds a property to the collection.
            </summary>
            <param name="name">
            	The name of the variable to modify
            </param>
            <param name="item">
            	The values of variable
            </param>
            <remarks>
            	Adding a property that already exists in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="item"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="item"/> is an empty string.
            </exception>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.Add(System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.InstanceVariable})">
            <summary>
            	Adds a property to the collection.
            </summary>
            <param name="item">
            	A pair containing the name and value of the variable
            </param>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.Clear">
            <summary>
            	Removes all properties from the collection.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.Contains(System.String)">
            <summary>
            	Determines whether an expression variable is in the collection.
            </summary>
            <param name="variableName">
            	The name of the expression variable to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="variableName"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="variableName"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.Find(System.String)">
            <summary>
            	Finds the variable in the collection
            </summary>
            <param name="variableName">
            	The name of the expression variable to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="variableName"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="variableName"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.InstanceVariable})">
            <summary>
            	Determines whether a variable is in the collection.
            </summary>
            <param name="item">
            	Expresssion Variable to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.Remove(System.String)">
            <summary>
            	Removes a variable from the collection.
            </summary>
            <param name="variableName">
            	The name of the variable to remove.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="variableName"/> was found and removed from the collection; or, <see langword="false"/> if <paramref name="variableName"/> was not in the collection.
            </returns>
            <remarks>
            	Attempting to remove a property that is not in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="variableName"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.InstanceVariablesCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.InstanceVariable})">
            <summary>
            	Removes a variable from the collection.
            </summary>
            <param name="item">
            	The name of the property to remove.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> was found and removed from the collection; or, <see langword="false"/> if <paramref name="item"/> was not in the collection.
            </returns>
            <remarks>
            	Attempting to remove a property that is not in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="item"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.IntegrityCheckOptionsSet">
            <summary>
            	Wraps a set of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags.
            </summary>
            <remarks>
            	The <b>IntegrityCheckOptionsSet</b> class wraps a bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags, providing methods to manipulate which options are enabled without having to use bitwise operations.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.IntegrityCheckOptionsSet.op_Implicit(ClearScada.Client.IntegrityCheckOptionsSet)~ClearScada.Client.IntegrityCheckOptions">
            <summary>
            	Converts a <b>IntegrityCheckOptionsSet</b> to a bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags.
            </summary>
            <param name="set">
            	The <b>IntegrityCheckOptionsSet</b> to convert.
            </param>
            <returns>
            	A bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags containing the options specified by <paramref name="set"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.IntegrityCheckOptionsSet.op_Implicit(ClearScada.Client.IntegrityCheckOptions)~ClearScada.Client.IntegrityCheckOptionsSet">
            <summary>
            	Converts a bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags to a <b>IntegrityCheckOptionsSet</b>.
            </summary>
            <param name="options">
            	The <b>IntegrityCheckOptions</b> flags to convert.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.IntegrityCheckOptionsSet"/> containing the flags specified by <paramref name="options"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.IntegrityCheckOptionsSet.Add(ClearScada.Client.IntegrityCheckOptions)">
            <summary>
            	Adds the specified options to the <b>IntegrityCheckOptionsSet</b>.
            </summary>
            <param name="options">
            	A bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags to add.
            </param>
        </member>
        <member name="M:ClearScada.Client.IntegrityCheckOptionsSet.Remove(ClearScada.Client.IntegrityCheckOptions)">
            <summary>
            	Removes the specified options from the <b>IntegrityCheckOptionsSet</b>.
            </summary>
            <param name="options">
            	A bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags to remove.
            </param>
        </member>
        <member name="M:ClearScada.Client.IntegrityCheckOptionsSet.Clear">
            <summary>
            	Removes all options from the <b>IntegrityCheckOptionsSet</b>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.IntegrityCheckOptionsSet.IsSet(ClearScada.Client.IntegrityCheckOptions)">
            <summary>
            	Determines whether the specified options are part of the <b>IntegrityCheckOptionsSet</b>.
            </summary>
            <param name="options">
            	A bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags to test for.
            </param>
            <returns>
            	<see langword="true"/> if all of the options specified by <paramref name="options"/> are part of the <b>IntegrityCheckOptionsSet</b>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.IntegrityCheckOptionsSet.ToIntegrityCheckOptions">
            <summary>
            	Converts this <b>IntegrityCheckOptionsSet</b> to a bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags.
            </summary>
            <returns>
            	A bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags containing the options specified by this instance.
            </returns>
        </member>
        <member name="M:ClearScada.Client.IntegrityCheckOptionsSet.FromIntegrityCheckOptions(ClearScada.Client.IntegrityCheckOptions)">
            <summary>
            	Initializes this instance from a bitmask of <see cref="T:ClearScada.Client.IntegrityCheckOptions"/> flags.
            </summary>
            <param name="options">
            	The flags from which to initialize this instance.
            </param>
        </member>
        <member name="M:ClearScada.Client.IntegrityCheckOptionsSet.ToString">
            <summary>
            	Converts the numerical value of this instance to its equivalent string representation.
            </summary>
            <returns>
            	The string representation of the value of this instance.</returns>
            <remarks>
            	The return value is formatted with the general numeric format specifier ("G") and the <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> for the current culture.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.IntegrityCheckOptions">
            <summary>
            	Specifies flags that control access to the data and operations of a database object.
            </summary>
            <remarks>
            	Some permissions are only relevant for certain types of object e.g. Override is only relevant for points.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.None">
            <summary>
            	No options selected.
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.Modules">
            <summary>
            	Check Modules.
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.ObjectMap">
            <summary>
            	Check Object Map.
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.Indexes">
            <summary>
            	Check Indices.
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.Objects">
            <summary>
            	Check Objects.
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.ObjectUpdateMap">
            <summary>
            	Check ObjectUpdateMap.
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.HistoricLoadedGranules">
            <summary>
            	Check HistoricLoadedGranules.
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.AlarmSourceMap">
            <summary>
            	Check AlarmSourceMap
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.ObjectIndexes">
            <summary>
            	Check Indices
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.Instances">
            <summary>
            	Check Template Instances
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.DataTables">
            <summary>
            	Check Data Tables
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.Metadata">
            <summary> 
            	Check Metadata
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.AlarmSuppression">
            <summary>
            	Check Alarm Suppression
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.ReferenceFields">
            <summary>
            	Check Reference Fields
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.SearchMaps">
            <summary>
            	Check Search Maps
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.GeospatialIndex">
            <summary>
            	Check Geo Spatial Index
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.All">
            <summary>
            	Check all options.
            </summary>
        </member>
        <member name="F:ClearScada.Client.IntegrityCheckOptions.Default">
            <summary>
            	Check Modules, Object Map, Objects, ObjectUpdateMap, AlarmSourceMap, Indices, Alarm Suppression, Reference Fields, Search Maps, and Geo Spatial Index
            </summary>
        </member>
        <member name="T:ClearScada.Client.NotifyUserEventArgs">
            <summary>
            	Provides data for events raised when a property of an object changes value.
            </summary>
        </member>
        <member name="P:ClearScada.Client.NotifyUserEventArgs.User">
            <summary>
            	Gets the name of the user that is receiving the message.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the user that is receiving the message.
            </value>
        </member>
        <member name="P:ClearScada.Client.NotifyUserEventArgs.Title">
            <summary>
            	Gets the title of the message.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the title of the message
            </value>
        </member>
        <member name="P:ClearScada.Client.NotifyUserEventArgs.Message">
            <summary>
            	Gets the message text.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the message text.
            </value>
        </member>
        <member name="T:ClearScada.Client.EventDetailsCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.EventDetails"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.AccessDeniedException">
            <summary>
            	The exception that is thrown when an operation fails due to insufficient access.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AccessDeniedException.#ctor">
            <summary>
            	Initializes a new instance of the <b>AccessDeniedException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AccessDeniedException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>AccessDeniedException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>AccessDeniedException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.AccessDeniedException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the object that caused the exception; or, <see cref="F:ClearScada.Client.ObjectId.Null"/> if the exception was not caused by a specific object.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessDeniedException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception; or, an empty string if the exception was not caused by a specific object.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessDeniedException.RequiredPermissions">
            <summary>
            	Gets the permissions required to perform the operation.
            </summary>
            <value>
            	A set of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags that specify the permissions required to successfully perform the operation; or, <see cref="F:ClearScada.Client.ObjectPermissions.None"/> if the exception was not caused by insufficient permissions.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessDeniedException.RequiredProperty">
            <summary>
            	Gets the property required to perform the operation.
            </summary>
            <value>
            	A <see cref="T:System.String"/> flag that indictates if the property is required.
            </value>
        </member>
        <member name="M:ClearScada.Client.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.AdviseException">
            <summary>
            	The exception thrown by an invalid advise operation.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AdviseException.#ctor">
            <summary>
            	Initializes a new instance of the <b>AdviseException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AdviseException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>AdviseException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AdviseException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>AdviseException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.AggregateException">
            <summary>
            	The exception that is thrown when an error occurs accessing an aggregate of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AggregateException.#ctor">
            <summary>
            	Initializes a new instance of the <b>AggregateException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AggregateException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>AggregateException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AggregateException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>AggregateException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.AggregateException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="P:ClearScada.Client.AggregateException.ObjectId"/> of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.AggregateException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.AggregateException.AggregateName">
            <summary>
            	Gets the aggregate that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the aggregate that caused the exception.
            </value>
        </member>
        <member name="M:ClearScada.Client.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.AreaReferenceException">
            <summary>
            	The exception that is thrown when an operation on an Area of Interest fails due to references from database objects.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AreaReferenceException.#ctor">
            <summary>
            	Initializes a new instance of the <b>AreaReferenceException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AreaReferenceException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>AreaReferenceException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AreaReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>AreaReferenceException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.AreaReferenceException.References">
            <summary>
            	Gets the list of references that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;<see cref="T:ClearScada.Client.AreaReference"/>&gt; containing an entry for each reference that is blocking the operation.
            </value>
        </member>
        <member name="M:ClearScada.Client.AreaReferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.BrowseException">
            <summary>
            	The exception thrown when a browse operation fails to complete successfully.
            </summary>
        </member>
        <member name="M:ClearScada.Client.BrowseException.#ctor">
            <summary>
            	Initializes a new instance of the <b>BrowseException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.BrowseException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>BrowseException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.BrowseException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>BrowseException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.ClearScadaException">
            <summary>
            	 Represents ClearSCADA specific errors.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ClearScadaException.#ctor">
            <summary>
            	Initializes a new instance of the <b>ClearScadaException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ClearScadaException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>ClearScadaException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ClearScadaException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>ClearScadaException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ClearScadaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Initializes a new instance of the <b>ClearScadaException</b> class with serialized data.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.CommunicationsErrorType">
            <summary>
            The type of communication error.
            </summary>
        </member>
        <member name="F:ClearScada.Client.CommunicationsErrorType.Undefined">
            <summary>
            The default value, type not specified.
            </summary>
        </member>
        <member name="F:ClearScada.Client.CommunicationsErrorType.Application">
            <summary>
            Application error.
            </summary>
        </member>
        <member name="F:ClearScada.Client.CommunicationsErrorType.Server">
            <summary>
            Server error.
            </summary>
        </member>
        <member name="F:ClearScada.Client.CommunicationsErrorType.License">
            <summary>
            License error.
            </summary>
        </member>
        <member name="F:ClearScada.Client.CommunicationsErrorType.Protocol">
            <summary>
            Protocol error.
            </summary>
        </member>
        <member name="F:ClearScada.Client.CommunicationsErrorType.Socket">
            <summary>
            Socket error.
            </summary>
        </member>
        <member name="F:ClearScada.Client.CommunicationsErrorType.MainStandbyProxy">
            <summary>
            Main/Standby proxy error.
            </summary>
        </member>
        <member name="T:ClearScada.Client.CommunicationsException">
            <summary>
            	The exception thrown when an error occurs communicating with the server.
            </summary>
        </member>
        <member name="M:ClearScada.Client.CommunicationsException.#ctor">
            <summary>
            	Initializes a new instance of the <b>CommunicationsException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.CommunicationsException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>CommunicationsException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.CommunicationsException.#ctor(System.String,ClearScada.Client.CommunicationsErrorType)">
            <summary>
            Initializes a new instance of the <b>CommunicationsException</b> class with a specified error message.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="errorType">
            The error type of the communication exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.CommunicationsException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>CommunicationsException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.CommunicationsException.#ctor(System.String,System.Exception,ClearScada.Client.CommunicationsErrorType)">
            <summary>
            Initializes a new instance of the <b>CommunicationsException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            The error message that explains the reason for the inner exception.
            </param>
            <param name="errorType">
            The error type of the communication exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.CommunicationsException.ErrorType">
            <summary>
            	The type of communication error.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.CommunicationsErrorType"/> error type.
            </value>
        </member>
        <member name="M:ClearScada.Client.CommunicationsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Get the object data into serialization, part of Serializable implementation.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:ClearScada.Client.DataFileIOException">
            <summary>
            	The exception that is thrown when the server fails to read from or write to a data file.
            </summary>
        </member>
        <member name="M:ClearScada.Client.DataFileIOException.#ctor">
            <summary>
            	Initializes a new instance of the <b>DatabaseLimitException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.DataFileIOException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>DatabaseLimitException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.DataFileIOException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.DataFileIOException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.QueryParseException">
            <summary>
            	Exception associated with parsing an SQL query.
            </summary>
        </member>
        <member name="M:ClearScada.Client.QueryParseException.#ctor">
            <summary>
            	Initializes a new instance of the <b>QueryParseException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.QueryParseException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>QueryParseException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.QueryParseException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>QueryParseException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.QueryParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.QueryParseException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:ClearScada.Client.DatabaseIntegrityException">
            <summary>
            	The exception thrown when the database fails an integrity check.
            </summary>
        </member>
        <member name="M:ClearScada.Client.DatabaseIntegrityException.#ctor">
            <summary>
            	Initializes a new instance of the <b>DatabaseIntegrityException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.DatabaseIntegrityException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>DatabaseIntegrityException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.DatabaseIntegrityException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>DatabaseIntegrityException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.DatabaseIntegrityException.Errors">
            <summary>
            	Gets the errors reported by the integrity check.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;<see cref="T:System.String"/>&gt; containing an entry for each error reported by the integrity check.
            </value>
        </member>
        <member name="M:ClearScada.Client.DatabaseIntegrityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.DatabaseLimitException">
            <summary>
            	The exception that is thrown when an operation fails due to hitting a database limit.
            </summary>
            <remarks>
            	The database limits are:
            	<list type="bullet">
            		<item>Maximum object full name length.</item>
            		<item>Maximum object depth.</item>
            		<item>Maximum area full name length.</item>
            		<item>Maximum area depth.</item>
            		<item>Maximum number of points (as defined by database licence).</item>
            	</list>
            </remarks>
        </member>
        <member name="M:ClearScada.Client.DatabaseLimitException.#ctor">
            <summary>
            	Initializes a new instance of the <b>DatabaseLimitException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.DatabaseLimitException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>DatabaseLimitException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.DatabaseLimitException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>DatabaseLimitException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.DatabaseLimitException.Limit">
            <summary>
            	Gets the limit that caused the exception.
            </summary>
            <value>
            	The limit that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.DatabaseLimitException.Value">
            <summary>
            	Gets the value that caused the exception.
            </summary>
            <value>
            	The value that caused the exception.
            </value>
        </member>
        <member name="M:ClearScada.Client.DatabaseLimitException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.ImportFormatException">
            <summary>
            	The exception thrown when an invalid database export file is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ImportFormatException.#ctor">
            <summary>
            	Initializes a new instance of the <b>ImportFormatException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ImportFormatException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>ImportFormatException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ImportFormatException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>ImportFormatException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.InvalidAreaException">
            <summary>
            	The exception that is thrown when an invalid Area of Interest is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidAreaException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidAreaException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidAreaException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidAreaException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidAreaException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidAreaException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.InvalidAreaException.AreaId">
            <summary>
            	Gets the ID of the area that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.AreaOfInterestId"/> of the area that caused the exception; or, <see cref="F:ClearScada.Client.AreaOfInterestId.Null"/> if the exception was caused by passing an unknown area name.
            </value>
        </member>
        <member name="P:ClearScada.Client.InvalidAreaException.AreaName">
            <summary>
            	Gets the name of the area that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the area that caused the exception; or, an empty string if the exception was caused by passing an unknown area ID.
            </value>
        </member>
        <member name="M:ClearScada.Client.InvalidAreaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.InvalidClassException">
            <summary>
            	The exception that is thrown when an invalid database class is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidClassException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidClassException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidClassException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidClassException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidClassException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidClassException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.InvalidClassException.ClassName">
            <summary>
            	Gets the name of the class that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the database class that caused the exception.
            </value>
        </member>
        <member name="M:ClearScada.Client.InvalidClassException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.InvalidNameException">
            <summary>
            	The exception that is thrown when an invalid name is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidNameException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidNameException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidNameException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidNameException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidNameException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidNameException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.InvalidObjectException">
            <summary>
            	The exception that is thrown when an invalid database object is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidObjectException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidObjectException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidObjectException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.#ctor(System.String,ClearScada.Client.ObjectId)">
            <summary>
            Initializes a new instance of the <b>InvalidObjectException</b> class with a specified error message and object ID.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="objectId">
            	The Object Id of the database object associated with the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <b>InvalidObjectException</b> class with a specified error message and object name.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="objectName">
            	The name of the object associated with the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.#ctor(System.String,ClearScada.Client.ObjectId,System.String)">
            <summary>
            Initializes a new instance of the <b>InvalidObjectException</b> class with a specified error message, object ID and object Name.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="objectId">
            	The Object Id of the database object associated with the exception.
            </param>
            <param name="objectName">
            	The name of the object associated with the exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.InvalidObjectException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the object that caused the exception; or, <see cref="F:ClearScada.Client.ObjectId.Null"/> if the exception was caused by passing an unknown object name.
            </value>
        </member>
        <member name="P:ClearScada.Client.InvalidObjectException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception; or, an empty string if the exception was caused by passing an unknown object ID.
            </value>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.InvalidPasswordException">
            <summary>
            	The exception thrown when an invalid password is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidPasswordException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidPasswordException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidPasswordException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidPasswordException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidPasswordException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidPasswordException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.QueryExecuteException">
            <summary>
            	Exception associated with executing an SQL query.
            </summary>
        </member>
        <member name="M:ClearScada.Client.QueryExecuteException.#ctor">
            <summary>
            	Initializes a new instance of the <b>QueryExecuteException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.QueryExecuteException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>QueryExecuteException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.QueryExecuteException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>QueryExecuteException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.QueryExecuteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.QueryExecuteException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:ClearScada.Client.SecureSessionRequiredException">
            <summary>
            	The exception thrown when an operation requires a secure session to complete.
            </summary>
        </member>
        <member name="M:ClearScada.Client.SecureSessionRequiredException.#ctor">
            <summary>
            	Initializes a new instance of the <b>SecureSessionRequiredException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.SecureSessionRequiredException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>SecureSessionRequiredException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.SecureSessionRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>SecureSessionRequiredException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.TagException">
            <summary>
            	The exception that is thrown when an error occurs with a tag.
            </summary>	
        </member>
        <member name="M:ClearScada.Client.TagException.#ctor">
            <summary>
            	Initializes a new instance of the <b>TagException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TagException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>TagException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.TagException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>TagException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.TagException.TagId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the object that caused the exception; or, <see cref="F:ClearScada.Client.ObjectId.Null"/> if the exception was caused by passing an unknown object name.
            </value>
        </member>
        <member name="M:ClearScada.Client.TagException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information. 
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.LocalObjectsException">
            <summary>
            	The exception that is thrown when an operation on a database object fails due to local objects in an instance.
            </summary>
        </member>
        <member name="M:ClearScada.Client.LocalObjectsException.#ctor">
            <summary>
            	Initializes a new instance of the <b>LocalObjectsException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.LocalObjectsException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>LocalObjectsException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.LocalObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>LocalObjectsException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.LocalObjectsException.Objects">
            <summary>
            	Gets the objects that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;ObjectDetails&gt; containing an entry for each local object that is blocking the operation.
            </value>
        </member>
        <member name="M:ClearScada.Client.LocalObjectsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.MethodException">
            <summary>
            	The exception that is thrown when an error occurs invoking a method of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.MethodException.#ctor">
            <summary>
            	Initializes a new instance of the <b>MethodException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.MethodException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>MethodException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.MethodException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>MethodException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.MethodException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="P:ClearScada.Client.MethodException.ObjectId"/> of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.MethodException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.MethodException.MethodName">
            <summary>
            	Gets the method that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the method that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.MethodException.ErrorCode">
            <summary>
            The error HRESULT
            </summary>
            <value>
            An <see cref="T:System.Int32"/> containing the HRESULT.
            </value>
        </member>
        <member name="M:ClearScada.Client.MethodException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.ObjectReferenceException">
            <summary>
            	The exception that is thrown when an operation on an object fails due to references from other objects.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ObjectReferenceException.#ctor">
            <summary>
            	Initializes a new instance of the <b>ObjectReferenceException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ObjectReferenceException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>ObjectReferenceException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ObjectReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>ObjectReferenceException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.ObjectReferenceException.References">
            <summary>
            	Gets the list of references that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;<see cref="T:ClearScada.Client.ObjectReference"/>&gt; containing an entry for each reference that is blocking the operation.
            </value>
        </member>
        <member name="M:ClearScada.Client.ObjectReferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.PasswordExpiredException">
            <summary>
            	The exception thrown when attempting to log on if the user's password has expired.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PasswordExpiredException.#ctor">
            <summary>
            	Initializes a new instance of the <b>PasswordExpiredException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PasswordExpiredException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>PasswordExpiredException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.PasswordExpiredException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>PasswordExpiredException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.PasswordExpiredException.ObjectId">
            <summary>
            	Gets the ID of the user that has the expired password
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the object that caused the exception; or, <see cref="F:ClearScada.Client.ObjectId.Null"/> if the exception was caused by passing an unknown object name.
            </value>
        </member>
        <member name="M:ClearScada.Client.PasswordExpiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.PropertyException">
            <summary>
            	The exception that is thrown when an error occurs accessing a property of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyException.#ctor">
            <summary>
            	Initializes a new instance of the <b>PropertyException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>PropertyException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.PropertyException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>PropertyException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.PropertyException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="P:ClearScada.Client.PropertyException.ObjectId"/> of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyException.PropertyName">
            <summary>
            	Gets the property that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the property that caused the exception.
            </value>
        </member>
        <member name="M:ClearScada.Client.PropertyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.ProxyVersionMismatchException">
            <summary>
            The exception thrown when the main and standby servers are not the same version.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ProxyVersionMismatchException.#ctor">
            <summary>
            Initializes a new instance of the <b>ProxyVersionMismatchException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ProxyVersionMismatchException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>ProxyVersionMismatchException</b> class with a specified error message.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ProxyVersionMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <b>ProxyVersionMismatchException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.VersionMismatchException">
            <summary>
            	The exception thrown when an invalid version number is passed to <see cref="M:ClearScada.Client.Advanced.IObjectConfiguration.SetDocumentContent(ClearScada.Client.ObjectId,System.String,System.IO.Stream,System.Int32,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">SetDocumentContent</see>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.VersionMismatchException.#ctor">
            <summary>
            	Initializes a new instance of the <b>VersionMismatchException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.VersionMismatchException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>VersionMismatchException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.VersionMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>VersionMismatchException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="P:ClearScada.Client.VersionMismatchException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.VersionMismatchException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception; or, an empty string if the exception was caused by passing an unknown object ID.
            </value>
        </member>
        <member name="P:ClearScada.Client.VersionMismatchException.Version">
            <summary>
            	Gets the version number of the object that caused the exception.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the version number.
            </value>
        </member>
        <member name="M:ClearScada.Client.VersionMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:ClearScada.Client.ObjectPermissionSet">
            <summary>
            	Wraps a set of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags.
            </summary>
            <remarks>
            	The <b>ObjectPermissionSet</b> class wraps a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags, providing methods to manipulate which permissions are enabled without having to use bitwise operations.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.op_Implicit(ClearScada.Client.ObjectPermissionSet)~ClearScada.Client.ObjectPermissions">
            <summary>
            	Converts a <b>ObjectPermissionSet</b> to a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags.
            </summary>
            <param name="set">
            	The <b>ObjectPermissionSet</b> to convert.
            </param>
            <returns>
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags containing the permissions specified by <paramref name="set"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.op_Implicit(ClearScada.Client.ObjectPermissions)~ClearScada.Client.ObjectPermissionSet">
            <summary>
            	Converts a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags to a <b>ObjectPermissionSet</b>.
            </summary>
            <param name="permissions">
            	The <b>ObjectPermissions</b> flags to convert.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.ObjectPermissions"/> containing the flags specified by <paramref name="permissions"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.Add(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Adds the specified permissions to the <b>ObjectPermissionSet</b>.
            </summary>
            <param name="permissions">
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags to add.
            </param>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.Remove(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Removes the specified permissions from the <b>ObjectPermissionSet</b>.
            </summary>
            <param name="permissions">
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags to remove.
            </param>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.Clear">
            <summary>
            	Removes all permissions from the <b>ObjectPermissionSet</b>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.IsSet(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Determines whether the specified permissions are part of the <b>ObjectPermissionSet</b>.
            </summary>
            <param name="permissions">
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags to test for.
            </param>
            <returns>
            	<see langword="true"/> if all of the permissions specified by <paramref name="permissions"/> are part of the <b>ObjectPermissionSet</b>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.ToObjectPermissions">
            <summary>
            	Converts this <b>ObjectPermissionSet</b> to a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags.
            </summary>
            <returns>
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags containing the permissions specified by this instance.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.FromObjectPermissions(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Initializes this instance from a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags.
            </summary>
            <param name="permissions">
            	The flags from which to initialize this instance.
            </param>
        </member>
        <member name="T:ClearScada.Client.ObjectReference">
            <summary>
            	Represents a reference between two database objects.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ObjectReference.Source">
            <summary>
            	Gets the source of the reference.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> representing the source of the reference (the referencing object).
            </value>
        </member>
        <member name="P:ClearScada.Client.ObjectReference.Target">
            <summary>
            	Gets the target of the reference.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> representing the target of the reference (the referenced object).
            </value>
        </member>
        <member name="T:ClearScada.Client.PropertyError">
            <summary>
            	Represents an error for a property in a database object
            </summary>
        </member>
        <member name="P:ClearScada.Client.PropertyError.Id">
            <summary>
            Database Object identifier.
            </summary>
            <value>
            The database object ID.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyError.Name">
            <summary>
            Name of object.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the name of the object.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyError.Data">
            <summary>
            Error specific information
            </summary>
            <value>
            An <see cref="T:System.Int32"/> containing error specific information.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyError.AggregateName">
            <summary>
            Properties aggregate name ( empty if property is not in an aggregate )
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the aggregate name.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyError.FieldName">
            <summary>
            Property name
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the field name.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyError.Text">
            <summary>
            Description of error.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the error description.
            </value>
        </member>
        <member name="T:ClearScada.Client.ServerNode">
            <summary>
            	Represents a node that runs a ClearSCADA database server.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerNode.DefaultStandardPort">
            <summary>
            	Specifies the default port for a Standard connection.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerNode.DefaultHttpPort">
            <summary>
            	Specifies the default port for a HTTP connection.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerNode.#ctor(System.String,System.Int32)">
            <summary>
            	Initializes a new instance of the <b>ServerNode</b> class that connects to the specified server.
            </summary>
            <param name="hostName">
            	The DNS name or IP address of the host the server is running on.
            </param>
            <param name="port">
            	The port number the server is running on.
            </param>
        </member>
        <member name="M:ClearScada.Client.ServerNode.#ctor(System.Object,System.String,System.Int32)">
            <summary>
            	Initializes a new instance of the <b>ServerNode</b> class that connects to the specified server.
            </summary>
            <param name="connectionType">
            	How to connect to the server.
            </param>
            <param name="hostName">
            	The DNS name or IP address of the host the server is running on.
            </param>
            <param name="port">
            	The port number the server is running on.
            </param>
        </member>
        <member name="M:ClearScada.Client.ServerNode.#ctor(System.Xml.XmlReader)">
            <summary>
            	Initializes a new instance of the <b>ServerNode</b> class with configuration loaded from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            	The <b>XmlReader</b> to load configuration from.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="reader"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidSystemConfigurationException">
            	The configuration is invalid. The <see cref="P:System.Exception.InnerException">InnerException</see> property may contain more details.
            </exception>
        </member>
        <member name="P:ClearScada.Client.ServerNode.System">
            <summary>
            	Gets the <see cref="T:ClearScada.Client.ServerSystem"/> this node belongs to, if any.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.ServerSystem"/> for the node's system.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNode.HostName">
            <summary>
            	Gets and sets the host name of the <b>ServerNode</b>.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the DNS name or IP address of the <b>ServerNode</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNode.Port">
            <summary>
            Gets and sets the port number of the <b>ServerNode</b>.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> in the range <see cref="F:System.Net.IPEndPoint.MinPort">MinPort</see> to <see cref="F:System.Net.IPEndPoint.MaxPort">MaxPort</see> containing the port number of the <b>ServerNode</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNode.Cost">
            <summary>
            	Gets and sets the cost of the <b>ServerNode</b>.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> indicating the relative cost of the <b>ServerNode</b>.
            </value>
            <remarks>
            	A <b>ServerNode</b> with a lower <b>Cost</b> is preferred to a <b>ServerNode</b> with a higher <b>Cost</b> when connecting to a <see cref="T:ClearScada.Client.ServerSystem"/>.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerNode.UseCompression">
            <summary>
            	Gets and sets a value indicating whether to compress requests end to the server.
            </summary>
            <value>
            	<see langword="true"/> to compress request; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNode.ConnectTimeout">
            <summary>
            	Gets and sets the network timeout to use when connecting to the server.
            </summary>
            <value>
            	A <see cref="T:System.TimeSpan"/> containing the network timeout to use when connecting to the server.
            </value>
            <remarks>
            	The default value for <b>ConnectTimeout</b> is 30 seconds.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerNode.RequestTimeout">
            <summary>
            	Gets and sets the network timeout to use when sending a request to the server.
            </summary>
            <value>
            	A <see cref="T:System.TimeSpan"/> containing the network timeout to use when sending a request to the server.
            </value>
            <remarks>
            	The default value for <b>RequestTimeout</b> is 2 minutes.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerNode.PollInterval">
            <summary>
            	Gets and sets how often to poll when monitoring the server with a <see cref="T:ClearScada.Client.ServerSystemMonitor"/>.
            </summary>
             <value>
            	A <see cref="T:System.TimeSpan"/> containing how often to poll.
            </value>
            <remarks>
            	The default value for <b>PollInterval</b> is 10 seconds.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerNode.PollTimeout">
            <summary>
            	Gets and sets the network timeout to use for a poll when monitoring the server with a <see cref="T:ClearScada.Client.ServerSystemMonitor"/>.
            </summary>
            <value>
            	A <see cref="T:System.TimeSpan"/> containing the network timeout to use for a poll.
            </value>
            <remarks>
            	The default value for <b>PollTimeout</b> is 15 seconds.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerNode.IsWebserver">
            <summary>
            Gets and sets the link to be treated as a web server to trigger WebX licenses up on the link dropping
            </summary>
            <value>
            <see langword="true"/> if web server, otherwise <see langword="false"/> .
            </value>
        </member>
        <member name="M:ClearScada.Client.ServerNode.Connect(System.String)">
             <summary>
            		Attempts to connect to the server.  The method has been deprecated.
             </summary>
             <param name="clientName">
            		The name of the client application.
             </param>
             <returns>
            		An <see cref="T:ClearScada.Client.Advanced.IServer">IServer</see> interface for the connection.
             </returns>
             <exception cref="T:System.ArgumentNullException">
            		<paramref name="clientName"/> is <see langword="null"/>.
             </exception>
             <exception cref="T:System.ArgumentException">
            		<paramref name="clientName"/> is an empty string.
             </exception>
             <exception cref="T:ClearScada.Client.CommunicationsException">
            		An error occurred communicating with the server.
             </exception>
        </member>
        <member name="M:ClearScada.Client.ServerNode.Connect(System.String,ClearScada.Client.ClientConnectionSettings)">
             <summary>
            		Attempts to connect to the server.
             </summary>
             <param name="clientName">
            		The name of the client application.
             </param>
             <param name="clientConnectionSettings">
            		Settings for client connection
             </param>
             <returns>
            		An <see cref="T:ClearScada.Client.Advanced.IServer">IServer</see> interface for the connection.
             </returns>
             <exception cref="T:System.ArgumentNullException">
            		<paramref name="clientName"/> is <see langword="null"/>.
             </exception>
             <exception cref="T:System.ArgumentException">
            		<paramref name="clientName"/> is an empty string.
             </exception>
             <exception cref="T:ClearScada.Client.CommunicationsException">
            		An error occurred communicating with the server.
             </exception>
        </member>
        <member name="M:ClearScada.Client.ServerNode.ConnectDiagnostic(System.String)">
            <summary>
            	Attempts to connect to the server as a diagnostic client.
            </summary>
            <param name="clientName">Name of the client.</param>
            <returns>
            	An <see cref="T:ClearScada.Client.Advanced.IServer">IServer</see> interface for the connection.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="clientName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="clientName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerNode.Save(System.Xml.XmlWriter)">
            <summary>
            	Saves the configuration of the <b>ServerNode</b> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            	The <b>XmlWriter</b> to save configuration to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="writer"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerNode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:ClearScada.Client.ServerNodeEventArgs">
            <summary>
            	Provides data for events raised when the availability of a <see cref="T:ClearScada.Client.ServerNode"/> changes.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ServerNodeEventArgs.Node">
            <summary>
            	Gets the node the event applies to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ServerNode"/> the event applies to.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNodeEventArgs.State">
            <summary>
            Gets the state of the node when the event was raised.
            </summary>
            <value>
            The state of the node, or <c>null</c> for the NodeFailed and NodeShutdown events.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNodeEventArgs.IsFailure">
            <summary>
            Gets a value indicating whether the event is due to a node failure.
            </summary>
            <value>
            	<c>true</c> if the event is due to a node failure; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ClearScada.Client.ServerConfigProblemDetails">
            <summary>
            Represents a configuration problem with a ClearSCADA database server.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ServerConfigProblemDetails.Title">
            <summary>
            Gets a value containing the title of the problem.
            </summary>
            <value>
            A <see cref="T:System.String"/> containg the title.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerConfigProblemDetails.MenuText">
            <summary>
            Gets a value containing text to be used on a menu to display the problem details.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the menu text.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerConfigProblemDetails.Description">
            <summary>
            Gets a value containing a description of the problem.
            </summary>
            <value>
            A <see cref="T:System.String"/> contaiing the description.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerConfigProblemDetails.Details">
            <summary>
            Gets a value containing details of the problem.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing details of the problem.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerConfigProblemDetails.Solution">
            <summary>
            Gets a value containing details of how the problem can be resolved.
            </summary>
            <value>
            A <see cref="T:System.String"/> describing a solution to the problem.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerConfigProblemDetails.SupportLink">
            <summary>
            Gets a value containing a URL that can be used to report the problem.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing a URL to report the problem.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerConfigProblemDetails.IsResolvable">
            <summary>
            Gets a value indicating whether the problem can be automatically resolved.
            </summary>
            <value>
            <see langword="true" /> if the problem can be automatically resolved; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerConfigProblemDetails.ResolveText">
            <summary>
            Gets a value to be used on UI element to automatically resolve the problem.
            </summary>
            <value>
            A <see cref="T:System.String"/> for resolve button.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerConfigProblemDetails.CancelText">
            <summary>
            Gets a value to be used on UI element to acknowledge the problem without resolving.
            </summary>
            <value>
            A <see cref="T:System.String"/> for cancel button.
            </value>
        </member>
        <member name="T:ClearScada.Client.ServerState">
            <summary>
            	The possible states of a ClearSCADA database server.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.None">
            <summary>
            	The server is not running.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Starting">
            <summary>
            	The server is connecting to partners to determine whether to go <see cref="F:ClearScada.Client.ServerState.Main"/> or <see cref="F:ClearScada.Client.ServerState.Standby"/>.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.ConfigurationError">
            <summary>
            	The server has a configuration error.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Main">
            <summary>
            	The server is running normally.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Synchronizing">
            <summary>
            	The server is synchronizing configuration and current data from a partner that is <see cref="F:ClearScada.Client.ServerState.Main"/>.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Standby">
            <summary>
            	The server is standby to a partner that is <see cref="F:ClearScada.Client.ServerState.Main"/>.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Shutdown">
            <summary>
            	The server is shutting down.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Initializing">
            <summary>
            	The server is initializing.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Loading">
            <summary>
            	The server is loading its database.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.SynchronizingHistoric">
            <summary>
            	The server is synchronizing historic data from a partner that is <see cref="F:ClearScada.Client.ServerState.Main"/>.
            </summary>
        </member>
        <member name="T:ClearScada.Client.ServerStateDetails">
            <summary>
            	Represents the current state of a ClearSCADA database server.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerStateDetails.#ctor(ClearScada.Client.ServerState)">
            <summary>
            Instantiate ServerStateDetails to create and inject details for implied state changes.
            </summary>
            <param name="state">The Server State.</param>
        </member>
        <member name="P:ClearScada.Client.ServerStateDetails.State">
            <summary>
            	Gets the current state of the server.
            </summary>
            <value>
            	One of the <see cref="T:ClearScada.Client.ServerState"/> values.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerStateDetails.StateDescription">
            <summary>
            	Gets the description of the current state of the server.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing a description of the current <see cref="P:ClearScada.Client.ServerStateDetails.State"/> of the server.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerStateDetails.StateChangeTime">
            <summary>
            	Gets the time the server entered its current state.
            </summary>
            <value>
            	A <see cref="T:System.DateTimeOffset"/> containing the time the server entered its current state.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerStateDetails.ConfigProblem">
            <summary>
            	Gets details of the problem when the server is in the <see cref="F:ClearScada.Client.ServerState.ConfigurationError"/> state.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.ServerConfigProblemDetails"/> describing the configuration problem; or <see langword="null"/> if there is no problem.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerStateDetails.DatabaseEmulationActive">
            <summary>
            Gets a value indicating if the server is currently emulating older database files
            </summary>
        </member>
        <member name="P:ClearScada.Client.ServerStateDetails.DatabaseEmulationVersion">
            <summary>
            Gets a value indicating the version of database files being emulated
            </summary>
        </member>
        <member name="T:ClearScada.Client.AlarmState">
            <summary>
            	Specifies the possible values for the state of an <see cref="T:ClearScada.Client.AlarmDetails"/>.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.Inactive">
            <summary>
            	The alarm is inactive.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.Disabled">
            <summary>
            	The alarm is disabled.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.AcceptedUncleared">
            <summary>
            	The alarm is accepted and uncleared.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.UnacceptedCleared">
            <summary>
            	The alarm is unaccepted and cleared.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.UnacceptedUncleared">
            <summary>
            	The alarm is unaccepted and uncleared.
            </summary>
        </member>
        <member name="T:ClearScada.Client.AlarmDetails">
            <summary>
            	Represents a database alarm.
            </summary>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.State">
            <summary>
            	Gets the state of the alarm.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.AlarmState"/> value containing the state of the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.Severity">
            <summary>
            	Gets the severity of the alarm.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Severity"/> representing the severity of the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.ConditionName">
            <summary>
            	Gets the condition of the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the condition of the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.SubConditionName">
            <summary>
            	Gets the current active sub-condition of the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the current active sub-condition of the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.ActiveTime">
            <summary>
            	Gets the time the alarm went active.
            </summary>
            <value>
            	A <see cref="T:System.DateTimeOffset"/> containing the time the alarm went active, or the time the alarm transitioned into the current active sub-condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.Source">
            <summary>
            	Gets the source of the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the source of the alarm.
            </value>
            <remarks>
            	For most alarms, <b>Source</b> will be the full name of the object the alarm belongs to; however, for text alarms <b>Source</b> may be an arbitrary string.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.Message">
            <summary>
            	Gets a message describing the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing a message describing the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.Category">
            <summary>
            	Gets the category of the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the event category of the alarm.
            </value>
        </member>
        <member name="T:ClearScada.Client.AreaOfInterestId">
            <summary>
            	Represents the unique identifier of an Area of Interest.
            </summary>
            <remarks>
            	An Area of Interest ID is a signed 32-bit integer. The <b>AreaOfInterestId</b> type should be used to represent Area of Interest IDs to provide strong type safety.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.AreaOfInterestId.Null">
            <summary>
            	The ID used to represent a null Area of Interest reference.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AreaOfInterestId.Root">
            <summary>
            	The ID used to represent a reference to the database's root area.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.#ctor(System.Int32)">
            <summary>
            	Initializes a new instance of the <b>AreaOfInterestId</b> structure to a specified ID.
            </summary>
            <param name="id">
            	The ID to initialize the new instance to.
            </param>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Implicit(ClearScada.Client.AreaOfInterestId)~System.Int32">
            <summary>
            	Converts an instance of <b>AreaOfInterestId</b> to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="id">
            	The <b>AreaOfInterestId</b> to convert.
            </param>
            <returns>
            	An <see cref="T:System.Int32"/> containing the numeric value of <paramref name="id"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Implicit(System.Int32)~ClearScada.Client.AreaOfInterestId">
            <summary>
            	Converts an instance of <see cref="T:System.Int32"/> to an <b>AreaOfInterestId</b>.
            </summary>
            <param name="id">
            	The <b>int</b> to convert.
            </param>
            <returns>
            	An <b>AreaOfInterestId</b> containing the ID specified by <paramref name="id"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Equality(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Determines whether two instances of <b>AreaOfInterestId</b> are equal.
            </summary>
            <param name="id1">
            	The first <b>AreaOfInterestId</b> to compare.
            </param>
            <param name="id2">
            	The second <b>AreaOfInterestId</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Inequality(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Determines whether two instances of <b>AreaOfInterestId</b> are not equal.
            </summary>
            <param name="id1">
            	The first <b>AreaOfInterestId</b> to compare.
            </param>
            <param name="id2">
            	The second <b>AreaOfInterestId</b>to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Equality(ClearScada.Client.AreaOfInterestId,System.Int32)">
            <summary>
            	Determines whether an instance of <b>AreaOfInterestId</b> and an instance of <see cref="T:System.Int32"/> are equal.
            </summary>
            <param name="id1">
            	The <b>AreaOfInterestId</b> to compare.
            </param>
            <param name="id2">
            	The <b>int</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Inequality(ClearScada.Client.AreaOfInterestId,System.Int32)">
            <summary>
            	Determines whether an instance of <b>AreaOfInterestId</b> and an instance of <see cref="T:System.Int32"/> are not equal.
            </summary>
            <param name="id1">
            	The <b>AreaOfInterestId</b> to compare.
            </param>
            <param name="id2">
            	The <b>int</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.Equals(ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>AreaOfInterestId</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.Equals(System.Int32)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>int</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.Equals(System.Object)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">
            	An object to compare with this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is an instance of <b>AreaOfInterestId</b> or <see cref="T:System.Int32"/>, and has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.GetHashCode">
            <summary>
            	Returns the hash code for this instance.
            </summary>
            <returns>
            	A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToString">
            <summary>
            	Converts the numerical value of this instance to its equivalent string representation.
            </summary>
            <returns>
            	The string representation of the value of this instance.
            </returns>
            <remarks>
            	The return value is formatted with the general numeric format specifier ("G") and the <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToString(System.IFormatProvider)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.
            </summary>
            <param name="provider">
            	An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="provider"/>.
            </returns>
            <remarks>
            	This instance is formatted with the general numeric format specifier ("G").<br/>
            	The <paramref name="provider"/> parameter is an <b>IFormatProvider</b> that obtains a <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> object.
            	The <b>NumberFormatInfo</b> provides culture-specific format information about this instance.
            	If <paramref name="provider"/> is <see langword="null"/>, this instance is formatted with the <b>NumberFormatInfo</b> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToString(System.String)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation, using the specified format.
            </summary>
            <param name="format">
            	A numeric format string.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="format"/>.
            </returns>
            <remarks>
            	If format is <see langword="null"/> or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").<br/>
            	The return value of this instance is formatted with the <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToString(System.String,System.IFormatProvider)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.
            </summary>
            <param name="format">
            	A numeric format string.
            </param>
            <param name="formatProvider">
            	An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="format"/> and <paramref name="formatProvider"/>
            </returns>
            <remarks>
            	If format is <see langword="null"/> or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").<br/>
            	The <paramref name="formatProvider"/> parameter is an <b>IFormatProvider</b> that obtains a <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> object.
            	The <b>NumberFormatInfo</b> provides culture-specific format information about this instance.
            	If <paramref name="formatProvider"/> is <see langword="null"/>, this instance is formatted with the <b>NumberFormatInfo</b> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToInt32">
            <summary>
            	Converts this instance to an <see cref="T:System.Int32"/>.
            </summary>
            <returns>
            	An <see cref="T:System.Int32"/> containing the numeric value of this instance.
            </returns>
        </member>
        <member name="T:ClearScada.Client.EventDetails">
            <summary>
            	Represents a database event journal entry.
            </summary>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Severity">
            <summary>
            	Gets the severity of the event.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Severity"/> representing the severity of the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Time">
            <summary>
            	Gets the time the event occurred.
            </summary>
            <value>
            	A <see cref="T:System.DateTimeOffset"/> containing the time the event occurred.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Source">
            <summary>
            	Gets the source of the event.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the source of the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Message">
            <summary>
            	Gets a message describing the event.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing a message describing the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Category">
            <summary>
            	Gets the category of the event.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the category of the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.User">
            <summary>
            	Gets the user that caused the event to occur.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the user that caused the event to occur.
            </value>
        </member>
        <member name="T:ClearScada.Client.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Aggregate_EnableMultiChoiceAggregate">
            <summary>
              Looks up a localized string similar to Cannot enable a multi-choice aggregate using the Enable property..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Aggregate_NotEnabled">
            <summary>
              Looks up a localized string similar to The aggregate &apos;{0}&apos; is not enabled..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_ArraysMustBeSameLength">
            <summary>
              Looks up a localized string similar to Arrays must be the same length..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidExceptionClass">
            <summary>
              Looks up a localized string similar to The server returned an unknown exception class {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidExceptionConstructor">
            <summary>
              Looks up a localized string similar to The server returned an exception of class {0} but this class does not have an appropriate constructor..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidExceptionProperty">
            <summary>
              Looks up a localized string similar to The server returned an exception of class {0} with an unknown or read-only property {1}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidNode">
            <summary>
              Looks up a localized string similar to The specified node is invalid..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidOffsetAndLength">
            <summary>
              Looks up a localized string similar to Invalid offset and length..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidOptions">
            <summary>
              Looks up a localized string similar to Invalid options..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidSeekOrigin">
            <summary>
              Looks up a localized string similar to Invalid SeekOrigin value..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_LengthIncorrect">
            <summary>
              Looks up a localized string similar to Length is incorrect..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_LengthIsZero">
            <summary>
              Looks up a localized string similar to Length must not be zero..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_ObjectNotSeverity">
            <summary>
              Looks up a localized string similar to Object is not a Severity.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_OldParentNameDoesNotMatch">
            <summary>
              Looks up a localized string similar to oldParentName does not match FullName..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_RangeEndIsBeforeRangeStart">
            <summary>
              Looks up a localized string similar to Invalid range - end is before start..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamIsEmpty">
            <summary>
              Looks up a localized string similar to Stream must not be empty..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamNotReadable">
            <summary>
              Looks up a localized string similar to Stream must be readable..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamNotSeekable">
            <summary>
              Looks up a localized string similar to Stream must be seekable..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamNotWritable">
            <summary>
              Looks up a localized string similar to Stream must be writable..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamTooLong">
            <summary>
              Looks up a localized string similar to Stream too long..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_TokenNullOrEmpty">
            <summary>
              Looks up a localized string similar to Token cannot be null or empty..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_UnsupportedType">
            <summary>
              Looks up a localized string similar to Value is an unsupported type..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_ValueCannotBeEmpty">
            <summary>
              Looks up a localized string similar to Value cannot be empty..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_VoicemailPinCharacters">
            <summary>
              Looks up a localized string similar to Numeric Login PIN cannot contain any characters other than numeric digits..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.ArgumentNull_ArrayElementCannotBeNull">
            <summary>
              Looks up a localized string similar to Array element cannot be null..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_BodyCRCMismatch">
            <summary>
              Looks up a localized string similar to The received body checksum value is incorrect..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ClientSideAutomationDisabled">
            <summary>
              Looks up a localized string similar to Client side automation is disabled..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ConnectionCloseByServer">
            <summary>
              Looks up a localized string similar to The connection was closed by the server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ConnectionNotLicensed">
            <summary>
              Looks up a localized string similar to The request could not be processed as the connection is not licensed..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ConnectTimeout">
            <summary>
              Looks up a localized string similar to Attempt to connect timed out..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ConstructException">
            <summary>
              Looks up a localized string similar to An error occurred constructing the exception returned by the server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_DuplicateWorkstationName">
            <summary>
              Looks up a localized string similar to The workstation name is already in use from a different workstation..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_HeaderCRCMismatch">
            <summary>
              Looks up a localized string similar to The received header checksum value is incorrect..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_HMACMismatch">
            <summary>
              Looks up a localized string similar to The HMAC received from the server is incorrect..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_InvalidRequest">
            <summary>
              Looks up a localized string similar to The specified request is not valid for this connection..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_InvalidVerificationData">
            <summary>
              Looks up a localized string similar to Peer supplied malformed or incomplete verification data..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_IOException">
            <summary>
              Looks up a localized string similar to An I/O error occurred.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_LinkDisconnected">
            <summary>
              Looks up a localized string similar to Link has been disconnected..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_LinkTerminated">
            <summary>
              Looks up a localized string similar to The link terminated or is in a bogus state and cannot be used any more. Other links are still valid..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_MismatchedVerificationMethods">
            <summary>
              Looks up a localized string similar to Requested verification methods {0} but the peer provided {1}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_NoProxyLink">
            <summary>
              Looks up a localized string similar to The request could not be processed as the server does not have a connection to the main server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ParentLinkUnsupportedEncryption">
            <summary>
              Looks up a localized string similar to Requested parent link encryption scheme is not supported..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ParentLinkUnsupportedVersion">
            <summary>
              Looks up a localized string similar to Requested parent link protocol version is not supported..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_PCSClientSecretUnauthorized">
            <summary>
              Looks up a localized string similar to Unauthorized to obtain PCS client secret..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_PCSInvalidToken">
            <summary>
              Looks up a localized string similar to The PCS token was invalid..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_PCSSMSUnavailable">
            <summary>
              Looks up a localized string similar to PCS System Management Server unavailable..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_PCSTimeout">
            <summary>
              Looks up a localized string similar to Timed out contacting the PCS System Management Server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_PCSTokenRejected">
            <summary>
              Looks up a localized string similar to The PCS token was rejected by the PCS System Management Server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_PCSTokenValidationKeysUnavailable">
            <summary>
              Looks up a localized string similar to Unable to obtain PCS token validation keys..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_RejectedByDmz">
            <summary>
              Looks up a localized string similar to The request could not be processed because the server is a DMZ server. .
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_RejectedDueToChangeover">
            <summary>
              Looks up a localized string similar to The request could not be processed because there is a pending server changeover..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_RejectedDueToShutdown">
            <summary>
              Looks up a localized string similar to The request could not be processed because the server is shutting down..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_SecureSessionRequired">
            <summary>
              Looks up a localized string similar to A secure socket session is required..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_SelectedMultipleEncryptionTypes">
            <summary>
              Looks up a localized string similar to Peer attempted to select multiple encryption types: {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ServerInInvalidState">
            <summary>
              Looks up a localized string similar to The request could not be processed as the server is in an invalid state..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ServerThrewException">
            <summary>
              Looks up a localized string similar to The request could not be processed as the server threw an exception..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ServerVerificationUnavailableInProtocolVersion">
            <summary>
              Looks up a localized string similar to Server verification required, but unavailable in protocol version {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_SocketError">
            <summary>
              Looks up a localized string similar to An error occurred communicating with the server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_TransactionIdMismatch">
            <summary>
              Looks up a localized string similar to The received transaction ID {0} does not match the expected transaction ID {1}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnexpectedData">
            <summary>
              Looks up a localized string similar to The server returned unexpected data..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnexpectedEventDuringAdviseConnect">
            <summary>
              Looks up a localized string similar to Unexpected event received during advise connection..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnexpectedLinkID">
            <summary>
              Looks up a localized string similar to Received a message for unexpected link ID {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnknownStatus">
            <summary>
              Looks up a localized string similar to The request could not be processed. The server returned an unknown status code 0x{0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedClientVersion">
            <summary>
              Looks up a localized string similar to The server does not support clients running this software version..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedEncryptionType">
            <summary>
              Looks up a localized string similar to Peer attempted to select unsupported encryption type {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedInterface">
            <summary>
              Looks up a localized string similar to The server does not support the requested interface..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedProtocolVersion">
            <summary>
              Looks up a localized string similar to Peer attempted to select unsupported protocol version {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedServerVersion">
            <summary>
              Looks up a localized string similar to The client does not support connecting to servers older than version {0}. The server being connected to is version {1}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedVerificationMethodRequested">
            <summary>
              Looks up a localized string similar to Peer requested unsupported verification method {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedVerificationMethodSupplied">
            <summary>
              Looks up a localized string similar to Peer provided data for unknown verification method {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidArea_UnknownAreaId">
            <summary>
              Looks up a localized string similar to The database does not contain an Area of Interest with ID {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidObject_UnknownObjectId">
            <summary>
              Looks up a localized string similar to The database does not contain an object with ID {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_AlreadyMonitoring">
            <summary>
              Looks up a localized string similar to The system is already being monitored..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_MonitoringAlreadyStarted">
            <summary>
              Looks up a localized string similar to Node monitoring has already been started..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_MonitoringNotStarted">
            <summary>
              Looks up a localized string similar to Node monitoring has not been started..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_NotConnected">
            <summary>
              Looks up a localized string similar to The connection is not connected..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_SessionAlreadySecure">
            <summary>
              Looks up a localized string similar to The session is already secure..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_SessionNotSecure">
            <summary>
              Looks up a localized string similar to The session is not secure..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_SessionSecure">
            <summary>
              Looks up a localized string similar to Operation not available when the socket is secure..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidSystemConfiguration_DuplicateSystemNames">
            <summary>
              Looks up a localized string similar to Multiple systems named &apos;{0}&apos; defined..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidSystemConfiguration_InvalidFormat">
            <summary>
              Looks up a localized string similar to The XML contains an invalid numeric or Boolean value..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidSystemConfiguration_InvalidNumberOfServers">
            <summary>
              Looks up a localized string similar to System must have between 1 and {0} servers..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidSystemConfiguration_InvalidPort">
            <summary>
              Looks up a localized string similar to Port must be between 1 and {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidSystemConfiguration_InvalidSystemName">
            <summary>
              Looks up a localized string similar to The system name &apos;{0}&apos; is not valid. Names must be between 1 and {1} characters, contain only alphanumeric characters, spaces, underscores or dashes, and start and end with an alphanumeric character..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidSystemConfiguration_InvalidXML">
            <summary>
              Looks up a localized string similar to The XML is not valid..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidSystemConfiguration_MissingServerName">
            <summary>
              Looks up a localized string similar to The server name must be specified..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidSystemConfiguration_MissingSystemName">
            <summary>
              Looks up a localized string similar to The system name must be specified..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.IO_CantSeekBeforeBeginningOfStream">
            <summary>
              Looks up a localized string similar to Cannot seek before the beginning of the stream..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_MultiDimArrays">
            <summary>
              Looks up a localized string similar to Multi-dimensional arrays are not supported..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_NonZeroBasedArrays">
            <summary>
              Looks up a localized string similar to Non-zero-based arrays are not supported..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_UnsupportedDbType">
            <summary>
              Looks up a localized string similar to Unsupported database type {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_UnsupportedTypeForVariant">
            <summary>
              Looks up a localized string similar to Objects of type {0} cannot be converted to variants..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_UnsupportedVarType">
            <summary>
              Looks up a localized string similar to Unsupported VARTYPE {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.ProxyVersionMismatch">
            <summary>
              Looks up a localized string similar to Modifications to the database while connected to a standby server are not supported when the main and standby servers are running different versions of the software..
            </summary>
        </member>
        <member name="T:ClearScada.Client.ObjectId">
            <summary>
            	Represents the unique identifier of a database object.
            </summary>
            <remarks>
            	A database object ID is a signed 32-bit integer. The <b>ObjectId</b> type should be used to represent object IDs to provide strong type safety.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.ObjectId.Null">
            <summary>
            The ID used to represent a null database object reference.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectId.Root">
            <summary>
            The ID used to represent a reference to the database's root group.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ObjectId.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <b>ObjectId</b> structure to a specified ID.
            </summary>
            <param name="id">The ID to initialize the new instance to.</param>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Implicit(ClearScada.Client.ObjectId)~System.Int32">
            <summary>
            	Converts an instance of <b>ObjectId</b> to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="id">
            	The <b>ObjectId</b> to convert.
            </param>
            <returns>
            	An <see cref="T:System.Int32"/> containing the numeric value of <paramref name="id"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Implicit(System.Int32)~ClearScada.Client.ObjectId">
            <summary>
            	Converts an instance of <see cref="T:System.Int32"/> to an <b>ObjectId</b>.
            </summary>
            <param name="id">
            	The <b>int</b> to convert.
            </param>
            <returns>
            	An <b>ObjectId</b> containing the ID specified by <paramref name="id"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Equality(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId)">
            <summary>
            	Determines whether two instances of <b>ObjectId</b> are equal.
            </summary>
            <param name="id1">
            	The first <b>ObjectId</b> to compare.
            </param>
            <param name="id2">
            	The second <b>ObjectId</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Inequality(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId)">
            <summary>
            	Determines whether two instances of <b>ObjectId</b> are not equal.
            </summary>
            <param name="id1">
            	The first <b>ObjectId</b> to compare.
            </param>
            <param name="id2">
            	The second <b>ObjectId</b>to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Equality(ClearScada.Client.ObjectId,System.Int32)">
            <summary>
            	Determines whether an instance of <b>ObjectId</b> and an instance of <see cref="T:System.Int32"/> are equal.
            </summary>
            <param name="id1">
            	The <b>ObjectId</b> to compare.
            </param>
            <param name="id2">
            	The <b>int</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Inequality(ClearScada.Client.ObjectId,System.Int32)">
            <summary>
            	Determines whether an instance of <b>ObjectId</b> and an instance of <see cref="T:System.Int32"/> are not equal.
            </summary>
            <param name="id1">
            	The <b>ObjectId</b> to compare.
            </param>
            <param name="id2">
            	The <b>int</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.Equals(ClearScada.Client.ObjectId)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>ObjectId</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.Equals(System.Int32)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>int</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.Equals(System.Object)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">
            	An object to compare with this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is an instance of <b>ObjectId</b> or <see cref="T:System.Int32"/>, and has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.GetHashCode">
            <summary>
            	Returns the hash code for this instance.
            </summary>
            <returns>
            	A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToString">
            <summary>
            	Converts the numerical value of this instance to its equivalent string representation.
            </summary>
            <returns>
            	The string representation of the value of this instance.</returns>
            <remarks>
            	The return value is formatted with the general numeric format specifier ("G") and the <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToString(System.IFormatProvider)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.
            </summary>
            <param name="provider">
            	An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="provider"/>.
            </returns>
            <remarks>
            	This instance is formatted with the general numeric format specifier ("G").<br/>
            	The <paramref name="provider"/> parameter is an <b>IFormatProvider</b> that obtains a <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> object.
            	The <b>NumberFormatInfo</b> provides culture-specific format information about this instance.
            	If <paramref name="provider"/> is <see langword="null"/>, this instance is formatted with the <b>NumberFormatInfo</b> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToString(System.String)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation, using the specified format.
            </summary>
            <param name="format">
            	A numeric format string.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="format"/>.
            </returns>
            <remarks>
            	If format is <see langword="null"/> or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").<br/>
            	The return value of this instance is formatted with the <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToString(System.String,System.IFormatProvider)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.
            </summary>
            <param name="format">
            	A numeric format string.
            </param>
            <param name="formatProvider">
            	An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="format"/> and <paramref name="formatProvider"/>
            </returns>
            <remarks>
            	If format is <see langword="null"/> or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").<br/>
            	The <paramref name="formatProvider"/> parameter is an <b>IFormatProvider</b> that obtains a <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> object.
            	The <b>NumberFormatInfo</b> provides culture-specific format information about this instance.
            	If <paramref name="formatProvider"/> is <see langword="null"/>, this instance is formatted with the <b>NumberFormatInfo</b> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToInt32">
            <summary>
            	Converts this instance to an <see cref="T:System.Int32"/>.
            </summary>
            <returns>
            	An <see cref="T:System.Int32"/> containing the numeric value of this instance.
            </returns>
        </member>
        <member name="T:ClearScada.Client.ObjectPermissions">
            <summary>
            	Specifies flags that control access to the data and operations of a database object.
            </summary>
            <remarks>
            	Some permissions are only relevant for certain types of object e.g. Override is only relevant for points.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.None">
            <summary>
            	Specifies no access.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Browse">
            <summary>
            	Controls whether an object is listed when enumerating the children of its parent.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Configure">
            <summary>
            	Controls whether an object can be configured, e.g. modifying configuration properties, renaming an object, creating new objects in a group.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Security">
            <summary>
            	Controls whether an object's security can be modified, and whether users and user groups and be configured.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.SystemAdmin">
            <summary>
            	Controls whether system administration operations can be performed, e.g. mounting a historic archive, modifiying system configuration, shutting down server.
            	Most system administration operations require <b>SystemAdmin</b> permission on the database's root group
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Control">
            <summary>
            	Controls whether the object can be controlled, e.g. modifying most data properties, controlling a point, generating a report.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.AcceptAlarms">
            <summary>
            	Controls whether the object's alarms can be accepted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.DisableAlarms">
            <summary>
            	Controls whether the object's alarms can be disabled.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Override">
            <summary>
            	Controls whether the object's value can be overriden.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Notes">
            <summary>
            	Controls whether the object's notes can be set.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.RetrieveData">
            <summary>
            	Controls whether data retrieval can be initiated for the object e.g. one shot an outstation.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.DisableControl">
            <summary>
            	Controls whether controls can be be disabled for the object.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Promote">
            <summary>
            	Controls whether the object can be promoted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.SwitchLine">
            <summary>
            	Controls whether the object can switch communications channels.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Tune">
            <summary>
            	Controls whether the object's alarm limits can be tuned.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Diagnostics">
            <summary>
            	Controls whether the object diagnostic and monitoring facilities can be accessed.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ModifyHistoric">
            <summary>
            	Controls whether the object's historic data can modified.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.AnnotateHistoric">
            <summary>
            	Controls whether the object's historic data can be annotated.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ValidateHistoric">
            <summary>
            	Controls whether the object's historic data can be validated.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ViewAlarms">
            <summary>
            	Controls whether the object's alarms can be read.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Read">
            <summary>
            	Controls whether the object can be read.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ExclusiveControl">
            <summary>
            	Controls whether the object can be taken under exclusive control.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ManageExclusiveControl">
            <summary>
            	Controls whether exclusive control of the object can be taken away from another user.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.RemoveAlarms">
            <summary>
            	Controls whether the object's alarms can be removed.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.EnableDisable">
            <summary>
            	Controls whether the object can be enabled or disabled.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ManualRedirect">
            <summary>
            	Controls whether the object's alarms can be manually redirected.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.UnacceptAlarms">
            <summary>
            	Controls whether the object's alarms can be unaccepted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.AssignAlarms">
            <summary>
            	Controls whether the object's alarms responsibility can be modified.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.OnOffScan">
            <summary>
            	Controls whether the object can be set on or off scan.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.CancelRequest">
            <summary>
            	Controls whether the object's requests can be canceled.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Operator">
            <summary>
            	A set of permissions typically used for Operator users.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Advanced">
            <summary>
            	A set of permissions typically used for Advanced users.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Engineer">
            <summary>
            	A set of permissions typically used for Engineer users.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Full">
            <summary>
            	All available permissions.
            </summary>
        </member>
        <member name="T:ClearScada.Client.ObjectUpdateType">
            <summary>
            	Specifies whether an object was created, modified or deleted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectUpdateType.Created">
            <summary>
            	A new object was created.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectUpdateType.Modified">
            <summary>
            	The configuration of an object was modified.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectUpdateType.Deleted">
            <summary>
            	An object was deleted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectUpdateType.Renamed">
            <summary>
            	An object (or its path) was renamed.
            </summary>
        </member>
        <member name="T:ClearScada.Client.ObjectUpdateEventArgs">
            <summary>
            	Provides data for events raised when objects are created, modified or deleted.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ObjectUpdateEventArgs.UpdateType">
            <summary>
            	Gets the type of update that caused the event.
            </summary>
            <value>
            	One of the <see cref="T:ClearScada.Client.ObjectUpdateType"/> values.
            </value>
        </member>
        <member name="P:ClearScada.Client.ObjectUpdateEventArgs.ObjectId">
            <summary>
            	Gets the ID of the database object that caused the event.
            </summary>
            <value>
            	An <see cref="P:ClearScada.Client.ObjectUpdateEventArgs.ObjectId"/> containing the ID of the database object that caused the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.ObjectUpdateEventArgs.ObjectName">
            <summary>
            	Gets the name of the database object that caused the event.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the full name of the database object that caused the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.ObjectUpdateEventArgs.ObjectClass">
            <summary>
            	Gets the class of the database object that caused the event.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the class of the database object that caused the event.
            </value>
        </member>
        <member name="T:ClearScada.Client.PropertyOverrideCollection">
            <summary>
            	Represents the property overrides of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that is empty.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that contains properties copied from the specified collection.
            </summary>
            <param name="propertyOverrides">
            	The collection whose properties are copied to the new <see cref="T:ClearScada.Client.PropertyOverrideCollection"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyOverrides"/> is <see langword="null"/>.
            	An element of <paramref name="propertyOverrides"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	Ana element of <paramref name="propertyOverrides"/> is an empty string.
            </exception>
        </member>
        <member name="P:ClearScada.Client.PropertyOverrideCollection.Count">
            <summary>
            	Gets the number of properties in the collection.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of properties in the collection.
            </value>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.Add(System.String)">
            <summary>
            	Adds a property to the collection.
            </summary>
            <param name="item">
            	The name of the property to add.
            </param>
            <remarks>
            	Adding a property that already exists in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="item"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="item"/> is an empty string.
            </exception>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.Clear">
            <summary>
            	Removes all properties from the collection.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.Contains(System.String)">
            <summary>
            	Determines whether a property is in the collection.
            </summary>
            <param name="item">
            	The name of the property to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.Remove(System.String)">
            <summary>
            	Removes a property from the collection.
            </summary>
            <param name="item">
            	The name of the property to remove.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> was found and removed from the collection; or, <see langword="false"/> if <paramref name="item"/> was not in the collection.
            </returns>
            <remarks>
            	Attempting to remove a property that is not in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="item"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.PropertyUpdateEventArgs">
            <summary>
            	Provides data for events raised when a property of an object changes value.
            </summary>
        </member>
        <member name="P:ClearScada.Client.PropertyUpdateEventArgs.ObjectId">
            <summary>
            	Gets the ID of the database object that caused the event.
            </summary>
            <value>
            	An <see cref="P:ClearScada.Client.PropertyUpdateEventArgs.ObjectId"/> containing the ID of the database object that caused the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyUpdateEventArgs.Property">
            <summary>
            	Gets the name of the property whose value has changed.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the property whose value has changed.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyUpdateEventArgs.PreviousValue">
            <summary>
            	Gets the value of the property before the change.
            </summary>
            <value>
            	The previous value of the property.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyUpdateEventArgs.CurrentValue">
            <summary>
            	Gets the value of the property after the change.
            </summary>
            <value>
            	The current value of the property.
            </value>
        </member>
        <member name="T:ClearScada.Client.LicenseType">
            <summary>
            Specifies how the system is licensed.
            </summary>
        </member>
        <member name="F:ClearScada.Client.LicenseType.Client">
            <summary>
            Use a license allocated by the license server on the client machine.
            </summary>
        </member>
        <member name="F:ClearScada.Client.LicenseType.Server">
            <summary>
            Use a license allocated by the database server.
            </summary>
        </member>
        <member name="T:ClearScada.Client.ClientCertMode">
            <summary>
            Specifies the client certificate selection mode.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ClientCertMode.Disabled">
            <summary>
            Do not send a client certificate.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ClientCertMode.Auto">
            <summary>
            Automatically select a client certificate.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ClientCertMode.Specified">
            <summary>
            Send a specified client certificate.
            </summary>
        </member>
        <member name="T:ClearScada.Client.ServerSystem">
            <summary>
            	Represents a group of related <see cref="T:ClearScada.Client.ServerNode"/>s.
            </summary>
            <remarks>
            	A <b>ServerSystem</b> can be configured with up to <see cref="F:ClearScada.Client.ServerSystem.MaxNodes"/> <see cref="T:ClearScada.Client.ServerNode"/>s that a client can connect to to access a particular database.
            	Note that a <b>ServerSystem</b> does not have to have all nodes of a redundant standby system configured e.g. if certain nodes can not be reached due to network topology.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.ServerSystem.MaxNodes">
            <summary>
            	Defines the maximum number of nodes in a <see cref="T:ClearScada.Client.ServerSystem"/>.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerSystem.MaxNameLength">
            <summary>
            	Defines the maximum name length.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerSystem.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.ServerSystem"/> class with the specified name.
            </summary>
            <param name="name">
            	The name of the <b>ServerSystem</b>.
            </param>
        </member>
        <member name="M:ClearScada.Client.ServerSystem.#ctor(System.Xml.XmlReader)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.ServerSystem"/> class with configuration loaded from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            	The <b>XmlReader</b> to load configuration from.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="reader"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidSystemConfigurationException">
            	The configuration is invalid. The <see cref="P:System.Exception.InnerException">InnerException</see> property may contain more details.
            </exception>		
        </member>
        <member name="P:ClearScada.Client.ServerSystem.Name">
            <summary>
            	Gets and sets the name of the system.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the system.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.IsEnabled">
            <summary>
            	Gets and sets the enabled status of the system.
            </summary>
            <value>
            	<see langword="true"/> to enable the system; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	The default value for <b>IsEnabled</b> is <see langword="true"/>.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.IsVisibleInViewX">
            <summary>
            Gets or sets a value indicating whether this system is visible in ViewX.
            </summary>
            <value>
            	<c>true</c> if this system is visible in ViewX; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.IsSecureConnection">
            <summary>
            Gets or sets a value indicating whether the connection to this system is secured.
            </summary>
            <value>
              <c>true</c> if the connection is secured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.SynchronizedOnly">
            <summary>
            Gets or sets a value indicating whether the connection to this system is allowed for Synchronizing nodes.
            </summary>
            <value>
              <c>true</c> if connections to synchronzing systems is not allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.LicenseType">
            <summary>
            Gets and sets the type of license used by the system.
            </summary>
            <value>
            The type of the license.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.WorkstationName">
            <summary>
            Gets and sets the name of the workstation.
            </summary>
            <value>
            The name of the workstation.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.DefaultPriority">
            <summary>
            Gets or sets the default priority of the system.
            </summary>
            <value>
            The default priority.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.IPv6Enabled">
            <summary>
            Gets or sets the flag for the system defining whether IPv6 is enabled.
            </summary>
            <value>
            The flag indicating whether IPv6 is enabled.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.ValidateServerCert">
            <summary>
            Gets or sets the flag for the system defining whether the client certificate should be validated.
            </summary>
            <value>
            The flag indicating whether the client certificate should be validated.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.ClientCertMode">
            <summary>
            Gets or sets the client certificate selection mode.
            </summary>
            <value>
            The client certificate selection mode.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.ClientCertSelectionHash">
            <summary>
            Gets or sets the hash of the client certificate to send to the server.
            </summary>
            <value>
            The client certificate hash.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.ClientCertSelectionSearchString">
            <summary>
            Gets or sets the string to use when searching for a client certificate to send to the server.
            </summary>
            <value>
            The search string. The search will find any certificates whose subject contains this string. This is a substring search.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.AllowLegacyProtocol">
            <summary>
            Gets or sets the flag for the system defining whether to allow the legacy protocol to be used.
            </summary>
            <value>
            The flag indicating whether to allow the legacy protocol to be used.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.Nodes">
            <summary>
            Gets the nodes in the system.
            </summary>
            <value>
            An array of <see cref="T:ClearScada.Client.ServerNode"/> containing all nodes in the system.
            </value>
        </member>
        <member name="M:ClearScada.Client.ServerSystem.Save(System.Xml.XmlWriter)">
            <summary>
            	Saves the configuration of the <see cref="T:ClearScada.Client.ServerSystem"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            	The <b>XmlWriter</b> to save configuration to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="writer"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.ServerSystemCollection">
            <summary>
            	A collection of <see cref="T:ClearScada.Client.ServerSystem"/> objects.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerSystemCollection.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.ServerSystemCollection"/> class that is empty.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerSystemCollection.#ctor(System.Xml.XmlReader)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.ServerSystemCollection"/> class with configuration loaded from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            	The <b>XmlReader</b> to load configuration from.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="reader"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidSystemConfigurationException">
            	The configuration is invalid. The <see cref="P:System.Exception.InnerException">InnerException</see> property may contain more details.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemCollection.Save(System.Xml.XmlWriter)">
            <summary>
            	Saves the configuration of the <see cref="T:ClearScada.Client.ServerSystemCollection"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            	The <b>XmlWriter</b> to save configuration to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="writer"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemCollection.GetKeyForItem(ClearScada.Client.ServerSystem)">
            <summary>
            Dummy comment for protected sealed method
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:ClearScada.Client.ServerSystemMonitor">
            <summary>
            	Monitors the availability of the <see cref="P:ClearScada.Client.ServerSystem.Nodes">Nodes</see> in a <see cref="T:ClearScada.Client.ServerSystem"/>.
            </summary>
            <remarks>
            	A <b>ServerSystemMonitor</b> monitors each of the <see cref="P:ClearScada.Client.ServerSystem.Nodes">Nodes</see> in a <see cref="T:ClearScada.Client.ServerSystem"/>,
            	and raises events when a node becomes <see cref="E:ClearScada.Client.ServerSystemMonitor.NodeAvailable">available</see>, is <see cref="E:ClearScada.Client.ServerSystemMonitor.NodeShutdown">shut down</see>, or <see cref="E:ClearScada.Client.ServerSystemMonitor.NodeFailed">fails</see>.
            	It also determines the <see cref="P:ClearScada.Client.ServerSystemMonitor.PreferredNode"/> to connect to based on availability, cost, connection type and server state.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.#ctor(ClearScada.Client.ServerSystem)">
             <summary>
            		Initializes a new instance of the <b>ServerSystemMonitor</b> class to monitor the specified system.
             </summary>
             <param name="system">
            		The system to monitor.
             </param>
             <exception cref="T:System.ArgumentNullException">
            		<paramref name="system"/> is <see langword="null"/>.
             </exception>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.NodeAvailable">
            <summary>
            	Occurs when a previously unreachable <see cref="T:ClearScada.Client.ServerNode"/> becomes available.
            </summary>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.NodeShutdown">
            <summary>
            	Occurs when a previously available <see cref="T:ClearScada.Client.ServerNode"/> is shut down normally.
            </summary>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.NodeFailed">
            <summary>
            	Occurs when a previously available <see cref="T:ClearScada.Client.ServerNode"/> is no longer reachable.
            </summary>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.NodeStateChange">
            <summary>
            	Occurs when an available <see cref="T:ClearScada.Client.ServerNode"/> changes state.
            </summary>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.PreferredNodeChanged">
            <summary>
            	Occurs when the <see cref="P:ClearScada.Client.ServerSystemMonitor.PreferredNode"/> changes.
            </summary>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.PreferredNodePollComplete">
            <summary>
            Occurs when the preferred node completes a poll.
            </summary>
            <remarks>
            This is needed for interop with the unmanaged system manager. Can be removed when interop is removed.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerSystemMonitor.System">
            <summary>
            	Gets the system the <b>ServerSystemMonitor</b> is monitoring.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ServerSystem"/> the <b>ServerSystemMonitor</b> is monitoring.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystemMonitor.PreferredNode">
            <summary>
            	Gets the current preferred <b>ServerNode</b> to connect to.
            </summary>
            <value>
            	The current preferred <see cref="T:ClearScada.Client.ServerNode"/> to connect to; or, a <see langword="null"/> if there are no available <b>ServerNode</b>s, or <see cref="M:ClearScada.Client.ServerSystemMonitor.Start(ClearScada.Client.ClientConnectionSettings)">Start</see> has not been called.
            </value>
            <remarks>
            	A node is available if the ClearSCADA database server is running on it, and is in the <see cref="F:ClearScada.Client.ServerState.SynchronizingHistoric">SynchronizingHistoric</see> <see cref="F:ClearScada.Client.ServerState.Main">Main</see> or <see cref="F:ClearScada.Client.ServerState.Standby">Standby</see> state.
            	If multiple nodes are available, then the one with the lowest <see cref="P:ClearScada.Client.ServerNode.Cost">Cost</see> is preferred.
            	If available multiple nodes have the same cost, then if one is <b>Main</b> it is preferred, otherwise the choice is arbitrary.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerSystemMonitor.IsConnecting">
            <summary>
            Gets a value indicating whether monitor is connecting.
            </summary>
            <value>
            	<c>true</c> if this instance is connecting; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystemMonitor.PLUserName">
            <summary>
            Gets a value for checking which user is logged into this system, and hence for which provisional login is required.
            </summary>
            <value>
            	Current system logged on user
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystemMonitor.PLPassword">
            <summary>
            Convenience for setting the password internally in the class.
            </summary>
            <value>
            	na
            </value>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.Dispose">
            <summary>
            	Stops monitoring and releases all resources associated with the <b>ServerSystemMonitor</b>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.GetBestState(ClearScada.Client.ServerNode@)">
            <summary>
            Gets the state of the best node that is contactable (but not necessarily connectable).
            </summary>
            <param name="node">The best node.</param>
            <returns>Details of best node.</returns>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.GetBestError(ClearScada.Client.ServerNode@)">
            <summary>
            Get the error of the best node that is contactable.
            </summary>
            <param name="node">
            The best node.
            </param>
            <returns>
            The exception on the best node, or null if the best node does not have a comms error.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.IsNodeAvailable(ClearScada.Client.ServerNode)">
            <summary>
            	Determines whether a specified <see cref="T:ClearScada.Client.ServerNode"/> is available.
            </summary>
            <param name="node">
            	The node for which to check availability.
            </param>
            <returns>
            	<see langword="true"/> if the specified <b>ServerNode</b> is available; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	A node is available if the ClearSCADA database server is running on it, and is in the <see cref="F:ClearScada.Client.ServerState.SynchronizingHistoric">SynchronizingHistoric</see> <see cref="F:ClearScada.Client.ServerState.Main">Main</see> or <see cref="F:ClearScada.Client.ServerState.Standby">Standby</see> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>ServerSystemMonitor</b> is not currently monitoring the system.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="node"/> is not a node being monitored by the <b>ServerSystemMonitor</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.GetNodeState(ClearScada.Client.ServerNode)">
            <summary>
            	Gets the current state of a specified <see cref="T:ClearScada.Client.ServerNode"/>.
            </summary>
            <param name="node">
            	The node for which to get the state.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.ServerStateDetails"/> containing the node's current state; or, <see langword="null"/> if the ClearSCADA database server is not running on the node.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>ServerSystemMonitor</b> is not currently monitoring the system.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="node"/> is not a node being monitored by the <b>ServerSystemMonitor</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.GetServerLabel(ClearScada.Client.ServerNode)">
            <summary>
            Gets the server label of a given node.
            </summary>
            <param name="node">The node.</param>
            <returns>The server label.</returns>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>ServerSystemMonitor</b> is not currently monitoring the system.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="node"/> is not a node being monitored by the <b>ServerSystemMonitor</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.SetProvisionalLogOnCredentials(System.String,System.Security.SecureString)">
            <summary>
            Sets the Provisional Logon credentials for the nodes of the system
            </summary>
            <param name="userName">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.Start(ClearScada.Client.ClientConnectionSettings)">
            <summary>
            	Starts monitoring the <see cref="P:ClearScada.Client.ServerSystem.Nodes">Nodes</see> in the <see cref="P:ClearScada.Client.ServerSystemMonitor.System"/>.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>ServerSystemMonitor</b> is already monitoring the system.
            </exception>
            <param name="clientConnectionSettings">Settings for the client connection</param>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.Stop">
            <summary>
            	Stops monitoring the <see cref="P:ClearScada.Client.ServerSystem.Nodes">Nodes</see> in the <see cref="P:ClearScada.Client.ServerSystemMonitor.System"/>.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.SetNodeFailed(System.String)">
            <summary>
            	Mark the node as being failed and therefore never useable.
            </summary>
            <param name="nodeHostName">The host name of the node that has failed</param>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.GetProvisionalLogonCredentials(System.String@,System.Security.SecureString@)">
            <summary>
            Gets the Provisional Logon credentials for the nodes of the system.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The associated password.</param>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.GetBestNodeProperty``1(System.Func{ClearScada.Client.ServerSystemMonitor.ServerNodeMonitor,``0},ClearScada.Client.ServerNode@)">
            <summary>
            Gets a property from the best node regardless of its state.
            </summary>
            <typeparam name="T">The type of the attribute to get.</typeparam>
            <param name="select">The selection function.</param>
            <param name="bestNode">The best node.</param>
            <returns>
            The attribute from the best node.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.GetBestNodeProperty``1(System.Func{ClearScada.Client.ServerSystemMonitor.ServerNodeMonitor,System.Boolean},System.Func{ClearScada.Client.ServerSystemMonitor.ServerNodeMonitor,``0},ClearScada.Client.ServerNode@)">
            <summary>
            Gets a property from the best node regardless of its state.
            </summary>
            <typeparam name="T">The type of the attribute to get.</typeparam>
            <param name="filter">The filter function. Return true if the instance should be included. Otherwise, false.</param>
            <param name="select">The selection function. The <see cref="T:ClearScada.Client.ServerSystemMonitor.ServerNodeMonitor"/> reference can be null.</param>
            <param name="bestNode">The best node.</param>
            <returns>
            The selected property from the best node.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.GetNodeProperty``1(ClearScada.Client.ServerNode,System.Func{ClearScada.Client.ServerSystemMonitor.ServerNodeMonitor,``0})">
            <summary>
            	Gets a property from the <see cref="T:ClearScada.Client.ServerSystemMonitor.ServerNodeMonitor"/> instance for a specified <see cref="T:ClearScada.Client.ServerNode"/>.
            </summary>
            <typeparam name="T">
            	The type of the property.
            </typeparam>
            <param name="node">
            	The node for which to get the monitor instance.
            </param>
            <param name="select">
            	The selection function.
            </param>
            <returns>
            	The property of the server node monitor for the given node.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            	The <see cref="T:ClearScada.Client.ServerSystemMonitor"/> has been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <see cref="T:ClearScada.Client.ServerSystemMonitor"/> is not currently monitoring the system.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="node"/> is not a node being monitored by the <see cref="T:ClearScada.Client.ServerSystemMonitor"/>.
            </exception>
        </member>
        <member name="P:ClearScada.Client.ServerSystemMonitor.ServerNodeMonitor.ServerLabel">
            <summary>
            Gets the label of the server.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ServerSystemMonitor.ServerNodeMonitor.Exception">
            <summary>
            Gets the communication error from the monitored node.
            </summary>
            <remarks>
            <see langword="null"/> if there is none.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.Severity">
            <summary>
            	Represents the severity of an alarm or event.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Severity.Priority">
            <summary>
            Gets the priority of the severity.
            </summary>
            <value>
            An <see cref="T:System.Int16"/> containing the numeric priority of the severity.
            </value>
            <remarks>
            The <b>Priority</b> of a <b>Severity</b> is a number between 1 and 1000 representing the relative priority of the severity.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Severity.Description">
            <summary>
            Gets the description of the severity.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the description of the severity.
            </value>
        </member>
        <member name="M:ClearScada.Client.Severity.op_Equality(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether two instances of <b>Severity</b> are equal.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.
            </param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is equal to <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_Inequality(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether two instances of <b>Severity</b> are not equal.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.
            </param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is not equal to <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_LessThan(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether one <b>Severity</b> is less than another <b>Severity</b>.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.</param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.</param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is less than <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_LessThanOrEqual(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether one <b>Severity</b> is less than or equal to another <b>Severity</b>.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.</param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.</param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is less than or equal to <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_GreaterThan(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether one <b>Severity</b> is greater than another <b>Severity</b>.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.
            </param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is greater than <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_GreaterThanOrEqual(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether one <b>Severity</b> is greater than or equal to another <b>Severity</b>.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.
            </param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is greater than <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.Equals(ClearScada.Client.Severity)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>Severity</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.Equals(System.Object)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">
            	An object to compare with this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is an instance of <b>Severity</b>, and has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.CompareTo(ClearScada.Client.Severity)">
            <summary>
            	Compares this instance to a specified <b>Severity</b> and returns an indication of their relative values.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	A signed number indicating the relative values of this instance and <paramref name="other"/>.<br/>
            	<list type="table">
            		<listheader>
            			<term>Return Value</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>Less than zero</term>
            			<description>This is instance is less than <paramref name="other"/>.</description>
            		</item>
            		<item>
            			<term>Zero</term>
            			<description>This is instance equal to <paramref name="other"/>.</description>
            		</item>
            		<item>
            			<term>Greater than zero</term>
            			<description>This is instance is greater than <paramref name="other"/>.</description>
            		</item>
            	</list>
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.GetHashCode">
            <summary>
            	Returns the hash code for this instance.
            </summary>
            <returns>
            	A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.ToString">
            <summary>
            	Returns description of severity.
            </summary>
            <returns>
            	A <see cref="T:System.String"/> containing description of severity.
            </returns>
        </member>
        <member name="T:ClearScada.Client.SeverityCollection">
            <summary>
            	A read-only collection of <b>Severity</b> values.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.AggregateDictionary">
            <summary>
            	A read-only dictionary of <see cref="T:ClearScada.Client.Simple.Aggregate"/> objects, indexed by aggregate name.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDictionary.Count">
            <summary>
            	Gets the number of aggregates in the <b>AggregateDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of aggregates in the <b>AggregateDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDictionary.Keys">
            <summary>
            	Gets a collection containing the aggregate names in the <b>AggregateDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:System.String"/>&gt; containing the aggregate names in the <b>AggregateDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDictionary.Values">
            <summary>
            	Gets a collection containing the aggregates in the <b>AggregateDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:ClearScada.Client.Simple.Aggregate"/>&gt; containing the aggregates in the <b>AggregateDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDictionary.Item(System.String)">
            <summary>
            	Gets the aggregate with the specified name.
            </summary>
            <param name="key">
            	The name of the aggregate to get.
            </param>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.Aggregate"/> with the specified name.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            	An aggregate named <paramref name="key"/> does not exist in the <b>AggregateDictionary</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AggregateDictionary.ContainsKey(System.String)">
            <summary>
            	Determines whether there is a aggregate with the specified name in the <b>AggregateDictionary</b>.
            </summary>
            <param name="key">
            	The name of the aggregate to locate.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AggregateDictionary</b> contains an aggregate with the specified name; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AggregateDictionary.TryGetValue(System.String,ClearScada.Client.Simple.Aggregate@)">
            <summary>
            	Gets the aggregate with the specified name.
            </summary>
            <param name="key">
            	The name of the aggregate to get.
            </param>
            <param name="value">
            	When this method returns, contains the aggregate with the specified name, if found; otherwise, <see langword="null"/>. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AggregateDictionary</b> contains an aggregate with the specified name; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method combines the functionality of the <see cref="M:ClearScada.Client.Simple.AggregateDictionary.ContainsKey(System.String)">ContainsKey</see> method and the <see cref="P:ClearScada.Client.Simple.AggregateDictionary.Item(System.String)">Item</see> property.
            	Use the <b>TryGetValue</b> method if your code frequently attempts to access aggregates that are not in the <b>AggregateDictionary</b>.
            	Using this method is more efficient than catching the <see cref="T:System.Collections.Generic.KeyNotFoundException"/> thrown by the <b>Item</b> property.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Simple.AlarmConditionDictionary">
            <summary>
            	A read-only dictionary of <see cref="T:ClearScada.Client.Simple.AlarmCondition"/> objects, indexed by condition name.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDictionary.Count">
            <summary>
            	Gets the number of alarm conditions in the <b>AlarmConditionDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of alarm conditions in the <b>AlarmConditionDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDictionary.Keys">
            <summary>
            	Gets a collection containing the condition names in the <b>AlarmConditionDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:System.String"/>&gt; containing the condition names in the <b>AlarmConditionDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDictionary.Values">
            <summary>
            	Gets a collection containing the alarm conditions in the <b>AlarmConditionDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:ClearScada.Client.Simple.AlarmCondition"/>&gt; containing the alarm conditions in the <b>AlarmConditionDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDictionary.Item(System.String)">
            <summary>
            	Gets the alarm condition with the specified name.
            </summary>
            <param name="key">
            	The name of the alarm condition to get.
            </param>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.AlarmCondition"/> with the specified name.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            	An alarm condition named <paramref name="key"/> does not exist in the <b>AlarmConditionDictionary</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmConditionDictionary.ContainsKey(System.String)">
            <summary>
            	Determines whether there is a alarm condition with the specified name in the <b>AlarmConditionDictionary</b>.
            </summary>
            <param name="key">
            	The name of the alarm condition to locate.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AlarmConditionDictionary</b> contains an alarm condition with the specified name; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmConditionDictionary.TryGetValue(System.String,ClearScada.Client.Simple.AlarmCondition@)">
            <summary>
            	Gets the alarm condition with the specified name.
            </summary>
            <param name="key">
            	The name of the alarm condition to get.
            </param>
            <param name="value">
            	When this method returns, contains the alarm condition with the specified name, if found; otherwise, <see langword="null"/>. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AlarmConditionDictionary</b> contains an alarm condition with the specified name; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method combines the functionality of the <see cref="M:ClearScada.Client.Simple.AlarmConditionDictionary.ContainsKey(System.String)">ContainsKey</see> method and the <see cref="P:ClearScada.Client.Simple.AlarmConditionDictionary.Item(System.String)">Item</see> property.
            	Use the <b>TryGetValue</b> method if your code frequently attempts to access alarm conditionss that are not in the <b>AlarmConditionDictionary</b>.
            	Using this method is more efficient than catching the <see cref="T:System.Collections.Generic.KeyNotFoundException"/> thrown by the <b>Item</b> property.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Simple.AreaOfInterest">
            <summary>
            	Represents an Area of Interest.
            </summary>
            <remarks>
            	An <b>AreaOfInterest</b> maintains a reference to its <see cref="T:ClearScada.Client.Simple.Connection"/> object.
            	If the <b>Connection</b> is disconnected, then operations on the <b>AreaOfInterest</b> that require a server request will throw an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.AreaOfInterest.Id">
            <summary>
            	Gets the unique identifer of the area.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectId"/> containing the ID of the area.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AreaOfInterest.Parent">
            <summary>
             Gets the parent of the area.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the parent of the area; or, <see langword="null"/> if the area is the database's root area.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AreaOfInterest.Name">
            <summary>
            	Gets the name of the area.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the area.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AreaOfInterest.FullName">
            <summary>
            	Gets the full name of the area.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the area.
            </value>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.Refresh">
            <summary>
            	Refreshes the <b>AreaOfInterest</b> with the latest details from the server.
            </summary>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.GetChild(System.String)">
            <summary>
            	Gets the child of the area with the specified name.
            </summary>
            <param name="areaName">
            	The name of the child area to look up.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the child area with the specified name, if found; otherwise, <see langword="null"/>.
            </returns>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.GetChildren(System.String)">
            <summary>
            	Gets the children of the area whose names match the specified pattern.
            </summary>
            <param name="areaNamePattern">
            	The pattern on which to match area names; or, an empty string to return all children regardless of name.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterestCollection"/> with an entry for each child of the area whose name matches the specified pattern; or, an an empty <b>AreaOfInterestCollection</b> if the area contains no such children.
            </returns>
            <remarks>
            	The syntax used for <paramref name="areaNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.GetDescendants">
            <summary>
            	Gets all descendants of the area.
            </summary>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterestCollection"/> with an entry for each descendant of the area; or, an an empty <b>AreaOfInterestCollection</b> if the area has no descendants.
            </returns>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.GetDescendants(System.String)">
            <summary>
            	Gets the descendants of the area whose names match the specified pattern.
            </summary>
            <param name="areaNamePattern">
            	The pattern on which to match area names.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterestCollection"/> with an entry for each descendant of the area whose name matches the specified pattern; or, an an empty <b>AreaOfInterestCollection</b>, if the area contains no such descendants.
            </returns>
            <remarks>
            	The syntax used for <paramref name="areaNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.CreateArea(System.String)">
            <summary>
            	Creates a new Area of Interest as a child of this area.
            </summary>
            <param name="areaName">
            	The name to give the new area; or, an empty string to generate a default name for the new area.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the newly created area.
            </returns>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing area in this area.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an area named <paramref name="areaName"/> in this area would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a new area in this area would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.Delete(System.Boolean)">
            <summary>
            	Deletes the area from the database.
            </summary>
            <param name="forceDeletion">
            	<see langword="true"/> to delete the area even there are references to it; or, <see langword="false"/> to only delete the area if it is not referenced.
            </param>
            <remarks>
            	If there are references from database objects to the area, then it will only be deleted if <paramref name="forceDeletion"/> is <see langword="true"/>.
            	In this case, all references to the area will be cleared.
            </remarks>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.<br/>-or-<br/>
            	The area is the database's root area.
            </exception>
            <exception cref="T:ClearScada.Client.AreaReferenceException">
            	The area, or its children, are referenced by objects, and <paramref name="forceDeletion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.Rename(System.String)">
            <summary>
            	Changes the name of the area.
            </summary>
            <param name="areaName">
            	The new name to give the area.
            </param>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="areaName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing area in this area's parent area.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Renaming this area to <paramref name="areaName"/> would exceed the database's maximum full name length.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.MoveTo(ClearScada.Client.Simple.AreaOfInterest)">
            <summary>
            	Moves the area to a new location
            </summary>
            <param name="parent">
            	The area to move the area to.
            </param>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> has been deleted from the database<br/>-or-<br/>
            	The area is the database's root area.<br/>-or-<br/>
            	<paramref name="parent"/> is the same as this area.<br/>-or-<br/>
            	<paramref name="parent"/> is a child of this area.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	The name of this area clashes with the name of an existing area in <paramref name="parent"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Moving this area to <paramref name="parent"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Moving this area to <paramref name="parent"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.AreaOfInterest.CopyTo(ClearScada.Client.Simple.AreaOfInterest,System.String)">CopyTo</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.CopyTo(ClearScada.Client.Simple.AreaOfInterest,System.String)">
            <summary>
            	Creates a copy of the area.
            </summary>
            <param name="parent">
            	The area in which to create the new area.
            </param>
            <param name="areaName">
            	The name to give the new area; or, an empty string to generate a default name for the new area.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the newly created database area.
            </returns>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The area has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> has been deleted from the database.<br/>-or-<br/>
            	The area is the database's root area.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing object in <paramref name="parent"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating a copy of this area named <paramref name="areaName"/> in <paramref name="parent"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a copy of this area in <paramref name="parent"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.AreaOfInterest.MoveTo(ClearScada.Client.Simple.AreaOfInterest)">MoveTo</seealso>
        </member>
        <member name="T:ClearScada.Client.Simple.AreaOfInterestCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.Connection">
            <summary>
            	Represents a connection to a database.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>Connection</b> class with the specified client name.
            </summary>
            <param name="clientName">
            	The name of the client application.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="clientName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="clientName"/> is an empty string.
            </exception>
        </member>
        <member name="E:ClearScada.Client.Simple.Connection.ObjectUpdated">
            <summary>
            	Occurs when a database object is created, modified or deleted.
            </summary>
            <remarks>
            	This event is only raised if <see cref="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">RegisterForObjectUpdates</see> has been called.
            </remarks>
            <seealso cref="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">RegisterForObjectUpdates</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.UnregisterObjectUpdates">UnregisterObjectUpdates</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.ClientName">
            <summary>
            	Gets the name of the client application.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the client application, used to identify this <b>Connection</b> when connected to a server.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.IsConnected">
            <summary>
            	Gets a value indicating whether the <b>Connection</b> is currently connected to a server.
            </summary>
            <value>
            	<see langword="true"/> if the <b>Connection</b> is currently connected to a server; otherwise, <see langword="false"/>.
            </value>
            <seealso cref="M:ClearScada.Client.Simple.Connection.Connect(ClearScada.Client.ServerNode)">Connect</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.Disconnect">Disconnect</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.Server">
            <summary>
            	Gets the advanced interface used by the <b>Connection</b>.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Advanced.IServer"/> interface used by the <b>Connection</b>, if connected; otherwise, <see langword="null"/>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.IsLoggedOn">
            <summary>
            	Gets a value indicating whether the <b>Connection</b> is currently logged on as a specific user.
            </summary>
            <value>
            	<see langword="true"/> if the <b>Connection</b> is currently connected and logged on; otherwise, <see langword="false"/>.
            </value>
            <seealso cref="P:ClearScada.Client.Simple.Connection.UserName"/>
            <seealso cref="P:ClearScada.Client.Simple.Connection.UserObjectId"/>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOn(System.String,System.Security.SecureString)">LogOn</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOff">LogOff</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.UserName">
            <summary>
            	Gets the name of the currently logged on user.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the currently logged on user, if connected and logged on; otherwise, an empty string.
            </value>
            <seealso cref="P:ClearScada.Client.Simple.Connection.IsLoggedOn"/>
            <seealso cref="P:ClearScada.Client.Simple.Connection.UserObjectId"/>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOn(System.String,System.Security.SecureString)">LogOn</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOff">LogOff</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.UserObjectId">
            <summary>
            	Gets the object ID of the currently logged on user.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.ObjectId"/> containing the ID of the currently logged on user, if connected and logged on; otherwise, <see cref="F:ClearScada.Client.ObjectId.Null"/>.
            </value>
            <seealso cref="P:ClearScada.Client.Simple.Connection.IsLoggedOn"/>
            <seealso cref="P:ClearScada.Client.Simple.Connection.UserName"/>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOn(System.String,System.Security.SecureString)">LogOn</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOff">LogOff</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.WebLicenseCount">
            <summary>
            Gets the web license count for the server
            </summary>
            <value>
            	a <see cref="T:System.Int32"/> representing the total avalible WebX Licenses
            </value>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ConnectWebserver(ClearScada.Client.ServerNode)">
            <summary>
            	Connects the <b>Connection</b> to the server running on the specified host using default settings as a web server.
            </summary>
            <param name="node">
            	The server to connect to.
            </param>
            <remarks>
            	If the <b>Connection</b> is currently connected, it will be disconnected and a new connection established.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>Connection</b> object has been disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="node"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.Connect(System.String)">
            <summary>
            	Connects the <b>Connection</b> to the server running on the specified host using default settings.
            </summary>
            <overloads>
            	Connects the <b>Connection</b> to the specified server.
            </overloads>
            <param name="hostName">
            	The DNS name of the server to connect to.
            </param>
            <remarks>
            	If the <b>Connection</b> is currently connected, it will be disconnected and a new connection established.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>Connection</b> object has been disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="hostName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.Connect(ClearScada.Client.ServerNode)">
            <summary>
            	Connects the <b>Connection</b> to the specified server.
            </summary>
            <param name="node">
            	The server to connect to.
            </param>
            <remarks>
            	If the <b>Connection</b> is currently connected, it will be disconnected and a new connection established.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>Connection</b> object has been disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="node"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.Disconnect">
            <summary>
            	Closes the <b>Connection</b> and allows it to be re-connected.
            </summary>
            <remarks>
            	After calling <b>Disconnect</b>, the <b>Connection</b> object can be re-connected by calling <see cref="M:ClearScada.Client.Simple.Connection.Connect(ClearScada.Client.ServerNode)">Connect</see> again.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.Dispose">
            <summary>
            	Releases all resources associated with the <b>Connection</b>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.LogOn(System.String,System.String)">
            <summary>
            	Logs the <b>Connection</b> on as the specified user.
            </summary>
            <param name="userName">The name of the user to log on as.</param>
            <param name="password">The password of the user to log on as.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="userName"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="password"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The username and password combination is incorrect.
            </exception>
            <exception cref="T:ClearScada.Client.PasswordExpiredException">
            	The password of the specified user has expired.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.LogOn(System.String,System.Security.SecureString)">
            <summary>
            	Logs the <b>Connection</b> on as the specified user.
            </summary>
            <param name="userName">The name of the user to log on as.</param>
            <param name="password">The password of the user to log on as.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="userName"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="password"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The username and password combination is incorrect.
            </exception>
            <exception cref="T:ClearScada.Client.PasswordExpiredException">
            	The password of the specified user has expired.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.LogOff">
            <summary>
            	Logs the <b>Connection</b> off.
            </summary>
            <remarks>
            	Calling <b>LogOff</b> while not logged on has no effect.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetObject(ClearScada.Client.ObjectId)">
            <summary>
            	Gets the database object with the specified ID.
            </summary>
            <overloads>
            	Gets the specified database object.
            </overloads>
            <param name="objectId">
            	The ID of the object to look up.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the database object with the specified ID, if found; otherwise, <see langword="null"/>.
            </returns>
            <remarks>
            	To get the database's root group, pass <see cref="F:ClearScada.Client.ObjectId.Root"/> as <paramref name="objectId"/>.
            </remarks>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetObject(System.String)">
            <summary>
            	Gets the database object with the specified name.
            </summary>
            <param name="objectName">
            	The name of the object to look up.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the database object with the specified name, if found; otherwise, <see langword="null"/>.
            </returns>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetObjects(System.String,System.String)">
            <summary>
            	Gets the objects in the database that match the specified criteria.
            </summary>
            <param name="className">
            	The class of objects to return; or, an empty string to return all objects regardless of class.
            </param>
            <param name="objectNamePattern">
            	The pattern on which to match object names; or, an empty string to return all objects regardless of name.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for each object in the database that is of (or derived from) the specified class, and whose name matches the specified pattern; or, an an empty <b>DBObjectCollection</b>, if the database contains no such objects.
            </returns>
            <remarks>
            	The syntax used for <paramref name="objectNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Browse" on="Root Group"/>
            <scxpermission name="Browse" on="Objects">
            	Objects for which the caller does not have <b>Browse</b> permission will not be returned.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.
            	<paramref name="objectNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CreateObject(System.String,ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Creates a new object in the database.
            </summary>
            <param name="className">
            	The class of object to create.
            </param>
            <param name="parentId">
            	The ID of the group in which to create the new object.
            </param>
            <param name="objectName">
            	The name to give the new object; or, an empty string to generate a default name for the new object.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created database object.
            </returns>
            <scxpermission name="Configure" on="Parent Group"/>
            <scxpermission name="Security" on="Parent Group">
            	Needed (in addition to <b>Configure</b>) if new object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not creatable,<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not allowed in the type of group specified by <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a group that is currently controlled by a configuration permit, and <paramref name="className"/> specifies a class that can't be created in a permit.<br/>-or-<br/>
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="parentId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an object that is not a group.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an empty instance (one without a template configured).<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template that is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an object named <paramref name="objectName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a new object of class <paramref name="className"/> in <paramref name="parentId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating a new object of class <paramref name="className"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.CreateInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">CreateInstance</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CreateInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Creates a new instance of a specified template.
            </summary>
            <param name="templateId">
            	The ID of the template to create an instance of.
            </param>
            <param name="parentId">
            	The ID of the group in which to create the new instance.
            </param>
            <param name="instanceName">
            	The name to give the new instance; or, an empty string to generate a default name for the new instance.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created instance.
            </returns>
            <scxpermission name="Configure" on="Parent Group"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="instanceName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="templateId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="templateId"/> specifies an object that is not a template.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an object that is not a group.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an empty instance (one without a template configured).<br/>-or-<br/>
            	<paramref name="parentId"/> specifies the same template as <paramref name="templateId"/>, or a group that is a child of <paramref name="templateId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies another instance of <paramref name="templateId"/>, or a group that is a child of an instance of <paramref name="templateId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template that is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="instanceName"/> is too long.<br/>-or-<br/>
            	<paramref name="instanceName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="instanceName"/> clashes with the name of an existing object in <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template, and <paramref name="instanceName"/> clashes with the name of an existing object in an instance of that template.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an object named <paramref name="instanceName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating an object in <paramref name="parentId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating the objects of <paramref name="templateId"/> in the new instance would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating the objects of <paramref name="templateId"/> in the new instance would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating the objects of <paramref name="templateId"/> in the new instance would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.CreateObject(System.String,ClearScada.Client.ObjectId,System.String)">CreateObject</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.ConvertInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.Boolean)">ConvertInstance</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.DeleteObject(ClearScada.Client.ObjectId,System.Boolean)">
            <summary>
            	Deletes an object from the database.
            </summary>
            <param name="objectId">
            	The ID of the object to delete.
            </param>
            <param name="forceDeletion">
            	<see langword="true"/> to delete the object even if there are references to it; or, <see langword="false"/> to only delete the object if it is not referenced.
            </param>
            <remarks>
            	If there are references from other database objects to the object, or to children of the object, then it will only be deleted if <paramref name="forceDeletion"/> is <see langword="true"/>.
            	In this case, all references to the object(s) will be cleared. When deleting a group, references from one object in the group to another object in the group do not prevent deletion.
            </remarks>
            <scxpermission name="Configure" on="Target Object">
            	If target object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Security" on="Target Object">
            	Needed (in addition to <b>Configuration</b>) if target object is a user or user group. If target object is a group, then needed on any children that are users or user groups.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a user, or a group containing a user, that is currently logged on.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a user, or a group containing a user, that has an active configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.ObjectReferenceException">
            	The object specified by <paramref name="objectId"/>, or its children, are referenced by other objects, and <paramref name="forceDeletion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in an instance that is controlled by the instance's template.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.RenameObject(ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Changes the name of an object in the database.
            </summary>
            <param name="objectId">
            	The ID of the object to rename.
            </param>
            <param name="objectName">
            	The new name to give the object.
            </param>
            <scxpermission name="Configure" on="Target Object"/>
            <scxpermission name="Security" on="Target Object">
            	Needed (in addition to <b>Configuration</b>) if target object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="objectName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in <paramref name="objectId"/>'s parent group.<br/>-or-<br/>
            	<paramref name="objectId"/> is in a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Renaming <paramref name="objectId"/> to <paramref name="objectName"/> would exceed the database's maximum full name length.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in an instance that is controlled by the instance's template.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.MoveObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId)">
            <summary>
            	Moves an object in the database to a new location.
            </summary>
            <param name="objectId">
            	The ID of the object to move.
            </param>
            <param name="parentId">
            	The ID of the group to move the object to.
            </param>
            <scxpermission name="Configure" on="Target Object">
            	If target object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Security" on="Target Object">
            	Needed (in addition to <b>Configure</b>) if target object is a user or user group. If target object is a group, then also needed on any children that are users or user groups.
            </scxpermission>
            <scxpermission name="Configure" on="Old Parent"/>
            <scxpermission name="Configure" on="New Parent"/>
            <scxpermission name="Security" on="New Parent">
            	Needed if target object is a user or user group, or a group containing a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an object that is not a group.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies the same object as <paramref name="objectId"/>.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a group, and <paramref name="parentId"/> specifies a child of that group.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object of a class that is not allowed in the type of group specified by <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a group that contains an object of a class that is not allowed in the type of group specified by <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an empty instance (one without a template configured).<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an instance, or a group containing an instance, and <paramref name="parentId"/> specifies that instance's template.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an instance, or a group containing an instance, and <paramref name="parentId"/> specifies another instance of that instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	The name of <paramref name="objectId"/> clashes with the name of an existing object in <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template, and the name of <paramref name="objectId"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Moving <paramref name="objectId"/> to <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Moving <paramref name="objectId"/> to <paramref name="parentId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Moving <paramref name="objectId"/> to <paramref name="parentId"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in an instance that is controlled by the instance's template.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.CopyObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">CopyObject</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CopyObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Creates a copy of an object in the database.
            </summary>
            <param name="objectId">
            	The ID of the object to copy.
            </param>
            <param name="parentId">
            	The ID of the group in which to create the new object.
            </param>
            <param name="objectName">
            	The name to give the new object; or, an empty string to generate a default name for the new object.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created database object.
            </returns>
            <scxpermission name="Read" on="Target Object">
            	If target object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Configure" on="New Parent"/>
            <scxpermission name="Security" on="New Parent">
            	Needed (in addition to <b>Configure</b>) if target object is a user or user group, or a group containing a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="objectId"/> specifies an object of a class that is not allowed in the type of group specified by <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a group that contains an object of a class that is not allowed in the type of group specified by <paramref name="parentId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an object that is not a group.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an empty instance (one without a template configured).
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating a copy of <paramref name="objectId"/> named <paramref name="objectName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a copy of <paramref name="objectId"/> in <paramref name="parentId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating a copy of <paramref name="objectId"/> in <paramref name="parentId"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.MoveObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId)">MoveObject</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ConvertObject(ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Converts an object to a different class.
            </summary>
            <param name="objectId">
            	The ID of the object to convert.
            </param>
            <param name="className">
            	The name of the class to convert the object to.
            </param>
            <scxpermission name="Configure" on="Target Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not a valid conversion for <paramref name="objectId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.<br/>-or-<br/>
            	The specified conversion is from one group type to another, and the group contains objects that are not allowed in the target type.
            </exception>
            <exception cref="T:ClearScada.Client.ObjectReferenceException">
            	The specified conversion is from group to template, but objects in the group are referenced by objects outside the group.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in an instance that is controlled by the instance's template, and is not an abstract object or a converted abstract object.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ConvertInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.Boolean)">
            <summary>
            	Converts an instance to a different template.
            </summary>
            <param name="instanceId">
            	The ID of the instance to convert.
            </param>
            <param name="templateId">
            	The ID of the template to convert the instance to.
            </param>
            <param name="forceConversion">
            	<see langword="true"/> to convert the instance even if contains local objects; or, <see langword="false"/> to only convert the instance if it does not contain local objects.
            </param>
            <remarks>
            	If the instance contains local objects (i.e. objects that are defined in the instance and not its template), then it will only be converted if <paramref name="forceConversion"/> is <see langword="true"/>.
            	In this case, the local objects will be deleted.
            </remarks>
            <scxpermission name="Configure" on="Target Instance"/>
            <scxpermission name="Read" on="Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="instanceId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="templateId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an object that is not an instance.<br/>-or-<br/>
            	<paramref name="templateId"/> specifies an object that is not a template.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in the template specified by <paramref name="templateId"/>.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in a template, and <paramref name="templateId"/> specifies a template that contains another instance of that template.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in an instance of the template specified by <paramref name="templateId"/>.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in an instance, and <paramref name="templateId"/> specifies a template that contains another instance of that instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Converting <paramref name="instanceId"/> to <paramref name="templateId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Converting <paramref name="instanceId"/> to <paramref name="templateId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Converting <paramref name="instanceId"/> to <paramref name="templateId"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in an instance, and the TemplateId of the child instance is controlled by the parent instance's template.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in a template, and the corresponding instance in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.LocalObjectsException">
            	The instance specified by <paramref name="instanceId"/> contains local objects, and <paramref name="forceConversion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ChangeUserPassword(ClearScada.Client.ObjectId,System.String,System.String)">
            <summary>
            	Changes the password of a user.
            </summary>
            <param name="objectId">
            	The object ID of the user whose password to change.
            </param>
            <param name="oldPassword">
            	The user's current password, if required; otherwise, an empty string.
            </param>
            <param name="newPassword">
            	The user's new password.
            </param>
            <remarks>
            The <paramref>oldPassword</paramref> parameter is required if the connection is logged on the specified user.
            If the connection is logged on as a different user, then that user must have <b>Configure</b> and <b>Security</b> permissions on the specified user object.
            </remarks>
            <scxpermission name="Configure, Security" on="User">
            	Not required if the connection is logged on as the specified user.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="oldPassword"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="newPassword"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object that is not a user.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidPasswordException">
            	<paramref name="newPassword"/> is an empty string, and the specified user is not allowed an empty password.<br/>-or-<br/>
            	<paramref name="newPassword"/> does not meet the required password length for the specified user.<br/>-or-<br/>
            	<paramref name="newPassword"/> does not meet the required password strength for the specified user.<br/>-or-<br/>
            	<paramref name="newPassword"/> is the same as the specified user's current passwod.<br/>-or-<br/>
            	<paramref name="newPassword"/> is the same as a password recently used by the specified user.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The connection is logged on the specified user, and <paramref name="oldPassword"/> is incorrect.<br/>-or-<br/>
            	The connection is logged on the specified user, and the user is not allowed to change their own password.<br/>-or-<br/>
            	The connection is logged as a different user, and that user does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ChangeUserPassword(ClearScada.Client.ObjectId,System.Security.SecureString,System.Security.SecureString)">
            <summary>
            	Changes the password of a user.
            </summary>
            <param name="objectId">
            	The object ID of the user whose password to change.
            </param>
            <param name="oldPassword">
            	The user's current password, if required; otherwise, an empty string.
            </param>
            <param name="newPassword">
            	The user's new password.
            </param>
            <remarks>
            The <paramref>oldPassword</paramref> parameter is required if the connection is logged on the specified user.
            If the connection is logged on as a different user, then that user must have <b>Configure</b> and <b>Security</b> permissions on the specified user object.
            </remarks>
            <scxpermission name="Configure, Security" on="User">
            	Not required if the connection is logged on as the specified user.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="oldPassword"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="newPassword"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object that is not a user.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidPasswordException">
            	<paramref name="newPassword"/> is an empty string, and the specified user is not allowed an empty password.<br/>-or-<br/>
            	<paramref name="newPassword"/> does not meet the required password length for the specified user.<br/>-or-<br/>
            	<paramref name="newPassword"/> does not meet the required password strength for the specified user.<br/>-or-<br/>
            	<paramref name="newPassword"/> is the same as the specified user's current passwod.<br/>-or-<br/>
            	<paramref name="newPassword"/> is the same as a password recently used by the specified user.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The connection is logged on the specified user, and <paramref name="oldPassword"/> is incorrect.<br/>-or-<br/>
            	The connection is logged on the specified user, and the user is not allowed to change their own password.<br/>-or-<br/>
            	The connection is logged as a different user, and that user does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ChangeUserVoicemailPin(ClearScada.Client.ObjectId,System.String,System.String)">
            <summary>
            	Changes the Numeric Login PIN of a user.
            </summary>
            <param name="objectId">
            	The object ID of the user whose password to change.
            </param>
            <param name="oldPin">
            	The user's current PIN, if required; otherwise, an empty string.
            </param>
            <param name="newPin">
            	The user's new PIN.
            </param>
            <remarks>
            The <paramref>oldPin</paramref> parameter is required if the connection is logged on the specified user.
            If the connection is logged on as a different user, then that user must have <b>Configure</b> and <b>Security</b> permissions on the specified user object.
            </remarks>
            <scxpermission name="Configure, Security" on="User">
            	Not required if the connection is logged on as the specified user.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="oldPin"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="newPin"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="newPin"/> contains characters other than digits.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object that is not a user.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidPasswordException">
            	<paramref name="newPin"/> is an empty string, and the specified user is not allowed an empty PIN.<br/>-or-<br/>
            	<paramref name="newPin"/> does not meet the database's required PIN length.<br/>-or-<br/>
            	<paramref name="newPin"/> is the same as the specified user's current PIN.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The connection is logged on the specified user, and <paramref name="oldPin"/> is incorrect.<br/>-or-<br/>
            	The connection is logged as a different user, and that user does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ChangeUserVoicemailPin(ClearScada.Client.ObjectId,System.Security.SecureString,System.Security.SecureString)">
            <summary>
            	Changes the Numeric Login PIN of a user.
            </summary>
            <param name="objectId">
            	The object ID of the user whose password to change.
            </param>
            <param name="oldPin">
            	The user's current PIN, if required; otherwise, an empty string.
            </param>
            <param name="newPin">
            	The user's new PIN.
            </param>
            <remarks>
            The <paramref>oldPin</paramref> parameter is required if the connection is logged on the specified user.
            If the connection is logged on as a different user, then that user must have <b>Configure</b> and <b>Security</b> permissions on the specified user object.
            </remarks>
            <scxpermission name="Configure, Security" on="User">
            	Not required if the connection is logged on as the specified user.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="oldPin"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="newPin"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="newPin"/> contains characters other than digits.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object that is not a user.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidPasswordException">
            	<paramref name="newPin"/> is an empty string, and the specified user is not allowed an empty PIN.<br/>-or-<br/>
            	<paramref name="newPin"/> does not meet the database's required PIN length.<br/>-or-<br/>
            	<paramref name="newPin"/> is the same as the specified user's current PIN.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The connection is logged on the specified user, and <paramref name="oldPin"/> is incorrect.<br/>-or-<br/>
            	The connection is logged as a different user, and that user does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetClasses(System.String[])">
            <summary>
            	Gets the metadata for the specified database classes.
            </summary>
            <param name="classNames">
            	The names of the classes for which to get the metadata.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinitionCollection"/> with an entry for each of the specified database classes.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="classNames"/> is <see langword="null"/>.
            	An element of <paramref name="classNames"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	An element of <paramref name="classNames"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetClass(System.String)">
            <summary>
            	Gets the metadata for a specified database class.
            </summary>
            <param name="className">
            	The name of the class for which to get the metadata.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> that contains the metadata the specified database class.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetSeverities">
            <summary>
            	Gets metadata for the database's Alarm &amp; Event severities.
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.SeverityCollection"/> containing an entry for each of the database's configured severities.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">
            <summary>
            	Causes an event to be raised when database objects of specified classes are created, modified or deleted.
            </summary>
            <param name="classNames">
            	An array of database classes for which to raise an event.
            </param>
            <remarks>
            	This method causes the <see cref="E:ClearScada.Client.Simple.Connection.ObjectUpdated"/> event to be raised whenever an object of (or derived from) one of the specified classes is created, modified or deleted.
            	If the method is called again with a different set of classes, the two sets will be merged. To stop events being raised, call <see cref="M:ClearScada.Client.Simple.Connection.UnregisterObjectUpdates">UnregisterObjectUpdates</see>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="classNames"/> is <see langword="null"/>.<br/>-or-<br/>
            	An element of <paramref name="classNames"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="classNames"/> is an empty array.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	An element of <paramref name="classNames"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.UnregisterObjectUpdates">UnregisterObjectUpdates</seealso>
            <seealso cref="E:ClearScada.Client.Simple.Connection.ObjectUpdated">ObjectUpdated</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.UnregisterObjectUpdates">
            <summary>
            	Stops events being raised when database objects are created, modified or deleted.
            </summary>
            <remarks>
            	It is safe to call this method without having called <see cref="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">RegisterForObjectUpdates</see>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">RegisterForObjectUpdates</seealso>
            <seealso cref="E:ClearScada.Client.Simple.Connection.ObjectUpdated">ObjectUpdated</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetArea(ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Gets the Area of Interest with the specified ID.
            </summary>
            <overloads>
            	Gets the specified Area Of Interest.
            </overloads>
            <param name="areaId">
            	The ID of the area to look up.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the area with the specified ID, if found; otherwise, <see langword="null"/>.
            </returns>
            <remarks>
            	To get the database's root area, pass <see cref="F:ClearScada.Client.AreaOfInterestId.Root"/> as <paramref name="areaId"/>.
            </remarks>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetArea(System.String)">
            <summary>
            	Gets the Area of Interest with the specified name.
            </summary>
            <param name="areaName">
            	The name of the area to look up.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the area with the specified name, if found; otherwise, <see langword="null"/>.
            </returns>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetAreas(System.String)">
            <summary>
            	Gets the Areas of Interest in the database whose names match the specified pattern.
            </summary>
            <param name="areaNamePattern">
            	The pattern on which to match area names; or, an empty string to return all area regardless of name.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterestCollection"/> with an entry for each area in the database whose name matches the specified pattern; or, an an empty <b>DBObjectCollection</b>, if the database contains no such areas.
            </returns>
            <remarks>
            	The syntax used for <paramref name="areaNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CreateArea(ClearScada.Client.AreaOfInterestId,System.String)">
            <summary>
            	Creates a new Area of Interest in the database.
            </summary>
            <param name="parentId">
            	The ID of the area in which to create the new area.
            </param>
            <param name="areaName">
            	The name to give the new area; or, an empty string to generate a default name for the new area.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the newly created area.
            </returns>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="parentId"/> is not a valid area ID.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing area in <paramref name="parentId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an area named <paramref name="areaName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a new area in <paramref name="parentId"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.DeleteArea(ClearScada.Client.AreaOfInterestId,System.Boolean)">
            <summary>
            	Deletes an Area of Interest from the database.
            </summary>
            <param name="areaId">
            	The ID of the area to delete.
            </param>
            <param name="forceDeletion">
            	<see langword="true"/> to delete the area even there are references to it; or, <see langword="false"/> to only delete the area if it is not referenced.
            </param>
            <remarks>
            	If there are references from database objects to the area, then it will only be deleted if <paramref name="forceDeletion"/> is <see langword="true"/>.
            	In this case, all references to the area will be cleared.
            </remarks>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="areaId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="areaId"/> specifies the database's root area.
            </exception>
            <exception cref="T:ClearScada.Client.AreaReferenceException">
            	The area specified by <paramref name="areaId"/>, or its children, are referenced by objects, and <paramref name="forceDeletion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.RenameArea(ClearScada.Client.AreaOfInterestId,System.String)">
            <summary>
            	Changes the name of an Area Of Interest.
            </summary>
            <param name="areaId">
            	The ID of the area to rename.
            </param>
            <param name="areaName">
            	The new name to give the area.
            </param>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="areaName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="areaId"/> is not a valid object ID.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing area in <paramref name="areaId"/>'s parent area.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Renaming <paramref name="areaId"/> to <paramref name="areaName"/> would exceed the database's maximum full name length.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.MoveArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Moves an Area of Interest to a new location
            </summary>
            <param name="areaId">
            	The ID of the area to move.
            </param>
            <param name="parentId">
            	The ID of the area to move the area to.
            </param>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="areaId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="areaId"/> specifies the database's root area.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies the same area as <paramref name="areaId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a child of <paramref name="areaId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	The name of <paramref name="areaId"/> clashes with the name of an existing area in <paramref name="parentId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Moving <paramref name="areaId"/> to <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Moving <paramref name="areaId"/> to <paramref name="parentId"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.CopyArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId,System.String)">CopyArea</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CopyArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId,System.String)">
            <summary>
            	Creates a copy of an Area of Interest.
            </summary>
            <param name="areaId">
            	The ID of the area to copy.
            </param>
            <param name="parentId">
            	The ID of the area in which to create the new area.
            </param>
            <param name="areaName">
            	The name to give the new area; or, an empty string to generate a default name for the new area.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the newly created database area.
            </returns>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="areaId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="areaId"/> specifies the database's root area.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing object in <paramref name="parentId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating a copy of <paramref name="areaId"/> named <paramref name="areaName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a copy of <paramref name="areaId"/> in <paramref name="parentId"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.MoveArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">MoveArea</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.SetAVEVAIdentityManagerUserToken(System.String)">
            <summary>
            Set the user token used to authenticate requests sent to the server
            </summary>
            <param name="token">An AVEVA Identity Manager user token</param>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ClearUserToken">
            <summary>
            Clear the user token used to authenticate requests sent to the server
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.Aggregate">
            <summary>
            	Represents a database aggregate.
            </summary>
            <remarks>
            	An <b>Aggregate</b> maintains a reference to its <see cref="T:ClearScada.Client.Simple.Connection"/> object.
            	If the <b>Connection</b> is disconnected, then operations on the <b>Aggregate</b> that require a server request will throw an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.ParentObject">
            <summary>
            	Gets the parent database object of the aggregate.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent database object of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.Name">
            <summary>
            	Gets the name of the aggregate.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.AggregateDefinition">
            <summary>
            	Gets the aggregate's definition
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AggregateDefinition"/> representing the aggregate's definition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.Enabled">
            <summary>
            	Gets and sets a value indicating whether the aggegate is enabled.
            </summary>
            <value>
            	<see langword="true"/> if the aggregate is enabled; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	If the aggregate is not an optional aggregate, <b>Enabled</b> will always be <see langword="true"/>.
            	It is not possible to enable a optional multi-choice aggregate using the <b>Enabled</b> property; instead, use the <see cref="P:ClearScada.Client.Simple.Aggregate.ClassName"/> property.
            	However, it is possible to disable an optional multi-choice aggregate using the <b>Enabled</b> property.
            </remarks>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to enable or disable an aggregate.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to enable or disable an aggregate on a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	When setting the property, the <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	When setting the property, the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	When setting the property, <paramref name="value"/> is <see langword="true"/> and the aggregate is a multi-choice aggregate.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> is <see langword="false"/> and the aggregate is not an optional aggregate.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	When setting the property, the caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the aggregate's parent object is in an instance, and the aggregate is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	When setting the property, an error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.ClassName">
            <summary>
            	Gets and sets which class of a multi-choice aggregate is enabled.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the current class of the aggregate; or, an empty string if the aggregate is disabled.
            </value>
            <remarks>
            	To get the list of possible classes for an aggregate, use the <see cref="P:ClearScada.Client.Simple.AggregateDefinition.AggregateClasses">Classes</see> property of the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.AggregateDefinition"/>.
            </remarks>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to change the class of an aggregate.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to change the class of an aggregate on a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	When setting the property, the <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	When setting the property, <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	When setting the property, the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	When setting the property, the <paramref name="value"/> is not the name of a valid class for the aggregate.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> is an empty string and the aggregate is not an optional aggregate.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	When setting the property, the caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the aggregate's parent object is in an instance, and the aggregate is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	When setting the property, an error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.AlarmConditions">
            <summary>
            	Gets the alarm conditions of the aggregate.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AlarmConditionDictionary"/> with an entry for each of the aggregate's alarm conditions; or, an empty <b>AlarmConditionDictionary</b> if the aggregate has no alarm conditions.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.Item(System.String)">
            <summary>
            	Gets or sets the value of a property of the aggregate.
            </summary>
            <param name="propertyName">
            	The name of the property to get or set.
            </param>
            <value>
            	The value of the property.
            </value>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            		Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            		Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            		To get or set the value of a property of one of the aggregate's alarm conditions, prefix the name of the property with the name of the alarm condition, concatenated with a period
            		e.g. <c>aggr["CallbackFail.Accepted"] = true;</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Parent Object">
            	Needed to get the value of a property.
            </scxpermission>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Parent Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	When setting the property, <paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is in a template, and the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	When setting a property of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.<br/>-or-<br/>
            	When setting the property, <paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Aggregate.GetProperty(System.String)">
            <summary>
            	Gets the value of a property of the aggregate.
            </summary>
            <param name="propertyName">
            	The name of the property to get.
            </param>
            <returns>
            	The value of the property.
            </returns>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	</para>
            	<para>
            		To get the value of a property of one of the aggregate's alarm conditions, prefix the name of the property with the name of the alarm condition, concatenated with a period
            		e.g. <c>bool accepted = (bool) aggr.GetValue( "CallbackFail.Accepted" );</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Parent Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not readable.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Aggregate.SetProperty(System.String,System.Object)">
            <summary>
            	Sets the value of a property of the aggregate.
            </summary>
            <param name="propertyName">
            	The name of the property to set.
            </param>
            <param name="value">
            	The value of the property.
            </param>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            	To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            	Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            	To set the value of a property of one of the aggregate's alarm conditions, prefix the name of the property with the name of the alarm condition, concatenated with a period
            	e.g. <c>aggr.SetValue( "CallbackFail.Accepted", true );</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Parent Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is in a template, and the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, and <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	<paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Aggregate.InvokeMethod(System.String,System.Object[])">
            <summary>
            	Invokes a method on the aggregate.
            </summary>
            <param name="methodName">
            	The name of the method to invoke.
            </param>
            <param name="arguments">
            	The arguments to pass to the method; or, <see langword="null"/> if the method does not have parameters.
            </param>
            <returns>
            	The return value of the method; or, <see langword="null"/> if the method does not have a return value.
            </returns>
            <remarks>
            	A method's return type or parameters can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            	</list>
            	<para>
            		The return type or parameters can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            		To determine the return type of a method, use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.ReturnType">ReturnType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/>.
            		To determine the type of a parameter, use the <see cref="P:ClearScada.Client.Simple.MethodParameterDefinition.ParameterType">ParameterType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodParameterDefinition"/>.
            		Passing an argument as an instance of a different supported type will attempt to convert the value.
            		Passing an argument as an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            	To invoke a method one of the aggregate's alarm conditions, prefix the name of the method with the name of the alarm condition, concatenated with a period
            	e.g. <c>aggr.InvokeMethod( "CallbackFailed.Accpet", null );</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <scxpermission name="Various" on="Parent Object">
            	The permissions required to invoke a method vary for each method. Use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.InvokePermissions">InvokePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="methodName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	An element of <paramref name="arguments"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.MethodException">
            	<paramref name="methodName"/> does not specify the name of a method of the aggregate.<br/>-or-<br/>
            	<paramref name="arguments"/> does not contain the correct number of arguments.<br/>-or-<br/>
            	The method was invoked but the call failed. TODO: At some point we need to go through all method implementations and modify them to fill out an exception rather than return a HRESULT. Unfortunately there are currently nearly 750 methods in SCX.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Aggregate.IsPropertyWritable(System.String)">
            <summary>
            	Determines whether the caller can set the value of a property of the aggregate
            </summary>
            <param name="propertyName">
            	The name of the property.
            </param>
            <returns>
            	<see langword="true"/> if the caller can write to the specified property; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method checks the following conditions:<br/>
            	<list type="bullet">
            		<item>The property is writable.</item>
            		<item>The caller has the necessary permissions to write to the property.</item>
            		<item>If the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is in an instance, the property is not controlled by the instance's template.</item>
            	</list>
            	<para>
            		To determine if a property of one of the aggregate's alarm conditions is writable, prefix the name of the property with the name of the alarm condition, concatenated with a period
            		e.g. <c>bool writable = aggr.IsPropertyWritable( "CallbackFail.Accepted" );</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Simple.AlarmCondition">
            <summary>
            Represents a database alarm condition.
            </summary>
            <remarks>
            	An <b>AlarmCondition</b> maintains a reference to its <see cref="T:ClearScada.Client.Simple.Connection"/> object.
            	If the <b>Connection</b> is disconnected, then operations on the <b>AlarmCondition</b> that require a server request will throw an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.ParentObject">
            <summary>
            	Gets the parent database object of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent database object of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.ParentAggregate">
            <summary>
            	Gets the parent aggregate of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.Aggregate"/> representing the parent aggregate of the alarm condition; or, <see langword="null"/> if the alarm condition does not belong to an aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.Name">
            <summary>
            	Gets the name of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.AlarmConditionDefinition">
            <summary>
            	Gets the alarm condition's definition
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AlarmConditionDefinition"/> representing the alarm condition's definition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.Item(System.String)">
            <summary>
            	Gets or sets the value of a property of the alarm condition.
            </summary>
            <param name="propertyName">
            	The name of the property to get or set.
            	</param>
            <value>
            	The value of the property.
            </value>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            		Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            		Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Parent Object">
            	Needed to get the value of a property.
            </scxpermission>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Parent Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	When setting the property, <paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm condition's object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is in a template, and the alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	When setting a property of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.<br/>-or-<br/>
            	When setting the property, <paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the alarm conditions's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmCondition.GetProperty(System.String)">
            <summary>
            	Gets the value of a property of the alarm condition.
            </summary>
            <param name="propertyName">
            	The name of the property to get.
            </param>
            <returns>
            	The value of the property.
            </returns>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Parent Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm conditions's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.
            	<paramref name="propertyName"/> specifies a property that is not readable.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmCondition.SetProperty(System.String,System.Object)">
            <summary>
            	Sets the value of a property of the alarm condition.
            </summary>
            <param name="propertyName">
            	The name of the property to set.
            </param>
            <param name="value">
            	The value of the property.
            </param>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            		Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            		Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            </remarks>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Parent Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> has been deleted from the database.
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is in a template, and the alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, and <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	<paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmCondition.InvokeMethod(System.String,System.Object[])">
            <summary>
            	Invokes a method on the alarm condition.
            </summary>
            <param name="methodName">
            	The name of the method to invoke.
            </param>
            <param name="arguments">
            	The arguments to pass to the method; or, <see langword="null"/> if the method does not have parameters.
            </param>
            <returns>
            	The return value of the method; or, <see langword="null"/> if the method does not have a return value.
            </returns>
            <remarks>
            	A method's return type or parameters can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            	</list>
            	<para>
            	The return type or parameters can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            	To determine the return type of a method, use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.ReturnType">ReturnType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/>.
            	To determine the type of a parameter, use the <see cref="P:ClearScada.Client.Simple.MethodParameterDefinition.ParameterType">ParameterType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodParameterDefinition"/>.
            	Passing an argument as an instance of a different supported type will attempt to convert the value.
            	Passing an argument as an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            </remarks>
            <scxpermission name="Various" on="Parent Object">
            	The permissions required to invoke a method vary for each method. Use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.InvokePermissions">InvokePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="methodName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	An element of <paramref name="arguments"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.MethodException">
            	<paramref name="methodName"/> does not specify the name of a method of the alarm condition.<br/>-or-<br/>
            	<paramref name="arguments"/> does not contain the correct number of arguments.<br/>-or-<br/>
            	The method was invoked but the call failed. TODO: At some point we need to go through all method implementations and modify them to fill out an exception rather than return a HRESULT. Unfortunately there are currently nearly 750 methods in SCX.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmCondition.IsPropertyWritable(System.String)">
            <summary>
            	Determines whether the caller can set the value of a property of the alarm condition
            </summary>
            <param name="propertyName">
            	The name of the property.
            </param>
            <returns>
            	<see langword="true"/> if the caller can write to the specified property; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method checks the following conditions:<br/>
            	<list type="bullet">
            		<item>The property is not read-only.</item>
            		<item>The caller has the necessary permissions to write to the property.</item>
            		<item>If the alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is in an instance, the property is not controlled by the instance's template.</item>
            	</list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Simple.DBObject">
            <summary>
            	Represents a database object.
            </summary>
            <remarks>
            	A <b>DBObject</b> maintains a reference to its <see cref="T:ClearScada.Client.Simple.Connection"/> object.
            	If the <b>Connection</b> is disconnected, then operations on the <b>DBObject</b> that require a server request will throw an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="E:ClearScada.Client.Simple.DBObject.PropertyUpdated">
            <summary>
            	Occurs when a property of the object changes value.
            </summary>
            <remarks>
            	This event is only raised if <see cref="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">RegisterForPropertyUpdates</see> has been called.
            </remarks>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">RegisterForPropertyUpdates</seealso>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.UnregisterPropertyUpdates">UnregisterPropertyUpdates</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Id">
            <summary>
            	Gets the unique identifer of the object.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectId"/> containing the ID of the object.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Parent">
            <summary>
            	Gets the parent group of the object.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent group of the object; or, <see langword="null"/> if the object is the database's root group.
            </value>
            <scxpermission name="Read" on="Parent Group"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object's parent group has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Name">
            <summary>
            	Gets the name of the object.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.FullName">
            <summary>
            	Gets the full name of the object.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.ClassDefinition">
            <summary>
            	Gets the object's class definition.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> representing about the object's class.
            </value>
             <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Notes">
            <summary>
            	Gets and sets the notes associated with the object.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the notes associated with the object.
            </value>
            <scxpermission name="Read" on="Object">
            	Needed to get the notes.
            </scxpermission>
            <scxpermission name="Notes" on="Object">
            	Needed to set the notes.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Aggregates">
            <summary>
            	Gets the aggregates of the object.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AggregateDictionary"/> with an entry for each of the object's aggregates; or, an an empty <b>AggregateDictionary</b> if the object has no aggregates.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.AlarmConditions">
            <summary>
            	Gets the alarm conditions of the object.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AlarmConditionDictionary"/> with an entry for each of the object's alarm conditions; or, an an empty <b>AlarmConditionDictionary</b> if the object has no alarm conditions.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Template">
            <summary>
            	Gets the parent template of the object.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent template of the object; or, <see langword="null"/> if the object is not in a template.
            </value>
            <scxpermission name="Read" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object's parent template has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Instance">
            <summary>
            	Gets the parent instance of the object.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent instance of the object; or, <see langword="null"/> if the object is not in a instance.
            </value>
            <scxpermission name="Read" on="Parent Instance"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object's parent instance has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.TemplateObject">
            <summary>
            	Gets the corresponding template object of the object.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the corresponding template object of the object; or, <see langword="null"/> if the object is not in an instance or does not have a corresponding object in the instance's template.
            </value>
            <scxpermission name="Read" on="Template Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in an instance.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.IsGroup">
            <summary>
            	Gets a value indicating whether the object is a group.
            </summary>
            <value>
            	<see langword="true"/> if the object is a group; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	An object is a group if it is an instance of CGroup, CTemplate, CTemplateInstance or COperatorDocStore.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Item(System.String)">
            <summary>
            	Gets or sets the value of a property of the object.
            </summary>
            <param name="propertyName">
            	The name of the property to get or set.
            </param>
            <value>
            	The value of the property.
            </value>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            		Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            		Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            		To get or set the value of a property of one of the object's aggregates or alarm conditions, prefix the name of the property with the name of the aggregate or alarm condition, concatenated with a period
            		e.g. <c>obj["Historic.Compress"] = true;</c>. Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Object">
            	Needed to get the value of a property.
            </scxpermission>
            <scxpermission name="Configure" on="Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property, if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	When setting the property, <paramref name="value"/> is an unsupported type.
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is in a template, and this object is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	When setting a property of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.<br/>-or-<br/>
            	When setting the property, <paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the object is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.Refresh">
            <summary>
            	Refreshes the <b>DBObject</b> with the latest details from the server.
            </summary>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <see cref="T:ClearScada.Client.Simple.Connection"/> used to retrieve this <b>AreaOfInterest</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetProperty(System.String)">
            <summary>
            	Gets the value of a property of the object.
            </summary>
            <param name="propertyName">
            	The name of the property to get.
            </param>
            <returns>
            	The value of the property.
            </returns>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            	To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	</para>
            	<para>
            	To get the value of a property of one of the object's aggregates or alarm conditions, prefix the name of the property with the name of the aggregate or alarm condition, concatenated with a period
            	e.g. <c>bool compressed = (bool) obj.GetValue( "Historic.Compress" );</c>. Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not readable.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetProperty(System.String,System.Object)">
            <summary>
            	Sets the value of a property of the object.
            </summary>
            <param name="propertyName">
            	The name of the property to set.
            </param>
            <param name="value">
            	The value of the property.
            </param>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            	To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            	Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            	To set the value of a property of one of the object's aggregates or alarm conditions, prefix the name of the property with the name of the aggregate or alarm condition, concatenated with a period
            	e.g. <c>obj.SetValue( "Historic.Compress", true );</c>. Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <scxpermission name="Configure" on="Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property, if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is in a template, and this object is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, and <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	<paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetProperties(System.String[],System.Object[])">
            <summary>
            	Sets the values of multiple configuration properties of the object in a single transaction.
            </summary>
            <param name="propertyNames">The names of the properties to set. Each element of <b>propertyNames</b> corresponds to the element of <b>values</b> with the same index.</param>
            <param name="values">The values of the properties. Each element of <b>values</b> corresponds to the element of <b>propertyNames</b> with the same index.</param>
            <remarks>
            	When setting large numbers of properties, using <b>SetProperties</b> is more efficient than using <see cref="M:ClearScada.Client.Simple.DBObject.SetProperty(System.String,System.Object)">SetProperty</see> to set each property individually.
            	The object  will only be modified if all the specified properties can be set successfully with the specified values.
            	<b>This method can only be used to set <see cref="F:ClearScada.Client.Simple.PropertyType.Configuration">Configuration</see> properties.</b>
            </remarks>
            <scxpermission name="Configure" on="Object"/>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) if the object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyNames"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="values"/> is <see langword="null"/>.<br/>-or-<br/>
            	An element of <paramref name="propertyNames"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="propertyNames"/> is empty.<br/>-or-<br/>
            	<paramref name="values"/> is not the same length as <paramref name="propertyNames"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            	One of the properties is of type <see cref="T:ClearScada.Client.ObjectId"/>, and the corresponding value does not specify a valid object ID or name.<br/>-or-<br/>
            	One of the properties is of type <see cref="T:ClearScada.Client.ObjectId"/>, and the corresponding value specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	One of the properties is of type <see cref="T:ClearScada.Client.ObjectId"/>, and the corresponding value specifies a valid object, but the object is in a template, and this object is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	One of the properties is of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, and the corresponding value does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	One of the elements of <paramref name="propertyNames"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	One of the properties is not a configuration property.<br/>-or-<br/>
            	One of the properties is not writable.<br/>-or-<br/>
            	One of the values could not be converted to the appropriate type for that property.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object in an instance, and one of the properties is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.InvokeMethod(System.String,System.Object[])">
            <summary>
            	Invokes a method on the object.
            </summary>
            <param name="methodName">
            	The name of the method to invoke.
            </param>
            <param name="arguments">
            	The arguments to pass to the method; or, <see langword="null"/> if the method does not have parameters.
            </param>
            <returns>
            	The return value of the method; or, <see langword="null"/> if the method does not have a return value.
            </returns>
            <remarks>
            	A method's return type or parameters can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            	</list>
            	<para>
            	The return type or parameters can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            	To determine the return type of a method, use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.ReturnType">ReturnType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/>.
            	To determine the type of a parameter, use the <see cref="P:ClearScada.Client.Simple.MethodParameterDefinition.ParameterType">ParameterTypeType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodParameterDefinition"/>.
            	Passing an argument as an instance of a different supported type will attempt to convert the value.
            	Passing an argument as an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            	To invoke a method one of the object's aggregates or alarm conditions, prefix the name of the method with the name of the aggregate or alarm condition,
            	concatenated with a period e.g. <c>obj.InvokeMethod( "Historic.InsertValue", DateTimeOffset.Now, 12.3, 192 );</c>.
            	Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <scxpermission name="Various" on="Object">
            	The permissions required to invoke a method vary for each method. Use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.InvokePermissions">InvokePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="methodName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	An element of <paramref name="arguments"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.MethodException">
            	<paramref name="methodName"/> does not specify the name of a method of the object.<br/>-or-<br/>
            	<paramref name="methodName"/> does not contain the correct number of arguments.<br/>-or-<br/>
            	The method was invoked but the call failed. TODO: At some point we need to go through all method implementations and modify them to fill out an exception rather than return a HRESULT. Unfortunately there are currently nearly 750 methods in SCX.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.IsPropertyWritable(System.String)">
            <summary>
            	Determines whether the caller can set the value of a property of the object
            </summary>
            <param name="propertyName">
            	The name of the property.
            </param>
            <returns>
            	<see langword="true"/> if the caller can write to the specified property; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method checks the following conditions:<br/>
            	<list type="bullet">
            		<item>The property is not read-only.</item>
            		<item>The caller has the necessary permissions to write to the property.</item>
            		<item>If the object is in an instance, the property is not controlled by the instance's template.</item>
            	</list>
            	<para>
            	To determine if a property of one of the object's aggregates or alarm conditions is writable, prefix the name of the property with the name of the aggregate or alarm condition,
            	concatenated with a period e.g. <c>bool writable = obj.IsPropertyWritable( "Historic.Compress" );</c>.
            	Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the object.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.CheckPermissions(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Determines whether the caller has the specified permissions on the object.
            </summary>
            <param name="permissions">
            	The permissions to check for.
            </param>
            <returns>
            	<see langword="true"/> if the caller has the specified permissions; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetChild(System.String)">
            <summary>
            	Gets the child of the object with the specified name.
            </summary>
            <param name="objectName">
            	The name of the child object to look up.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the child object with the specified name, if found; otherwise, <see langword="null"/>.
            </returns>
            <scxpermission name="Read" on="Child Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetChildren(System.String,System.String)">
            <summary>
            	Gets the children of the object that match the specified criteria.
            </summary>
            <param name="className">
            	The class of objects to return; or, an empty string to return all children regardless of class.
            </param>
            <param name="objectNamePattern">
            	The pattern on which to match object names; or, an empty string to return all children regardless of name.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for child of the object that is of (or derived from) the specified class, and whose name matches the specified pattern; or, an an empty <b>DBObjectCollection</b> if the object has no such children.
            </returns>
            <remarks>
            	The syntax used for <paramref name="objectNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Browse" on="Object"/>
            <scxpermission name="Browse" on="Children">
            	Children for which the caller does not have <b>Browse</b> permission will not be returned.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="objectNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not a group.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetDescendants(System.String,System.String)">
            <summary>
            	Gets the descendants of the object that match the specified criteria.
            </summary>
            <param name="className">
            	The class of objects to return; or, an empty string to return all descendants regardless of class.
            </param>
            <param name="objectNamePattern">
            	The pattern on which to match object names; or, an empty string to return all descendants regardless of name.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for descendant of the object that is of (or derived from) the specified class, and whose name matches the specified pattern; or, an an empty <b>DBObjectCollection</b> if the object has no such descendants.
            </returns>
            <remarks>
            	The syntax used for <paramref name="objectNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Browse" on="Object"/>
            <scxpermission name="Browse" on="Descendants">
            	Descendants for which the caller does not have <b>Browse</b> permission will not be returned.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="objectNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not a group.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.CreateObject(System.String,System.String)">
            <summary>
            	Creates a new object in the database as a child of this object.
            </summary>
            <param name="className">
            	The class of object to create.
            </param>
            <param name="objectName">
            	The name to give the new object; or, an empty string to generate a default name for the new object.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created database object.
            </returns>
            <scxpermission name="Configure" on="Object"/>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) if new object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not creatable,<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not allowed in the object.<br/>-or-<br/>
            	The object is is currently controlled by a configuration permit, and <paramref name="className"/> specifies a class that can't be created in a permit.<br/>-or-<br/>
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not a group.
            	The object is an empty instance (one without a template configured).<br/>-or-<br/>
            	The object is a template that is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in this group.<br/>-or-<br/>
            	The object is a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an object named <paramref name="objectName"/> in this object would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a new object of class <paramref name="className"/> in this object would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating a new object of class <paramref name="className"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.CreateInstance(ClearScada.Client.Simple.DBObject,System.String)">CreateInstance</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.CreateInstance(ClearScada.Client.Simple.DBObject,System.String)">
            <summary>
            	Creates a new instance of a specified template as a child of this object.
            </summary>
            <param name="template">
            	The template to create an instance of.
            </param>
            <param name="instanceName">
            	The name to give the new instance; or, an empty string to generate a default name for the new instance.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created instance.
            </returns>
            <scxpermission name="Configure" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="instanceName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	<paramref name="template"/> is has been deleted from the database.<br/>-or-<br/>
            	<paramref name="template"/> is not a template.<br/>-or-<br/>
            	The object is not a group.<br/>-or-<br/>
            	The object is an empty instance (one without a template configured).<br/>-or-<br/>
            	The object is the same as <paramref name="template"/>, or a group that is a child of <paramref name="template"/>.<br/>-or-<br/>
            	The object is another instance of <paramref name="template"/>, or a group that is a child of an instance of <paramref name="template"/>.<br/>-or-<br/>
            	The object is a template that is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="instanceName"/> is too long.<br/>-or-<br/>
            	<paramref name="instanceName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="instanceName"/> clashes with the name of an existing object in this group.<br/>-or-<br/>
            	The object is a template, and <paramref name="instanceName"/> clashes with the name of an existing object in an instance of that template.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an object named <paramref name="instanceName"/> in this object would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating an object in this object would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating the objects of <paramref name="template"/> in the new instance would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating the objects of <paramref name="template"/> in the new instance would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating the objects of <paramref name="template"/> in the new instance would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.CreateObject(System.String,System.String)">CreateObject</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.Delete(System.Boolean)">
            <summary>
            	Deletes the object from the database.
            </summary>
            <param name="forceDeletion">
            	<see langword="true"/> to delete the object even if there are references to it; or, <see langword="false"/> to only delete the object if it is not referenced.
            </param>
            <remarks>
            	If there are references from other database objects to the object, or to children of the object, then it will only be deleted if <paramref name="forceDeletion"/> is <see langword="true"/>.
            	In this case, all references to the object(s) will be cleared. When deleting a group, references from one object in the group to another object in the group do not prevent deletion.
            </remarks>
            <scxpermission name="Configure" on="Object">
            	If the object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configuration</b>) if the object is a user or user group. If the object is a group, then needed on any children that are users or user groups.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is the database's root group.<br/>-or-<br/>
            	The object is a user, or a group containing a user, that is currently logged on.<br/>-or-<br/>
            	The object is a user, or a group containing a user, that has an active configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.ObjectReferenceException">
            	The object, or its children, are referenced by other objects, and <paramref name="forceDeletion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and is controlled by the instance's template.<br/>-or-<br/>
            	The object is in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.Rename(System.String)">
            <summary>
            	Changes the name of the object.
            </summary>
            <param name="objectName">
            	The new name to give the object.
            </param>
            <scxpermission name="Configure" on="Object"/>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configuration</b>) if the object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="objectName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is the database's root group.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in the objects's parent group.<br/>-or-<br/>
            	The object is in a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Renaming the object to <paramref name="objectName"/> would exceed the database's maximum full name length.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and is controlled by the instance's template.<br/>-or-<br/>
            	The object is in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.MoveTo(ClearScada.Client.Simple.DBObject)">
            <summary>
            	Moves the object to a new location.
            </summary>
            <param name="parent">
            	The group to move the object to.
            </param>
            <scxpermission name="Configure" on="Object">
            	If the object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) if the object is a user or user group. If the object is a group, then also needed on any children that are users or user groups.
            </scxpermission>
            <scxpermission name="Configure" on="Old Parent"/>
            <scxpermission name="Configure" on="New Parent"/>
            <scxpermission name="Security" on="New Parent">
            	Needed if the object is a user or user group, or a group containing a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> is not a group.<br/>-or-<br/>
            	The object is the database's root group.<br/>-or-<br/>
            	<paramref name="parent"/> is the same as the object.<br/>-or-<br/>
            	The object is a group, and <paramref name="parent"/> is a child of that group.<br/>-or-<br/>
            	The object is of a class that is not allowed in <paramref name="parent"/>.<br/>-or-<br/>
            	The object is a group that contains an object of a class that is not allowed in <paramref name="parent"/>.<br/>-or-<br/>
            	<paramref name="parent"/> is an empty instance (one without a template configured).<br/>-or-<br/>
            	The object is an instance, or a group containing an instance, and <paramref name="parent"/> is that instance's template.<br/>-or-<br/>
            	The object is an instance, or a group containing an instance, and <paramref name="parent"/> is another instance of that instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	The name of the object clashes with the name of an existing object in <paramref name="parent"/>.<br/>-or-<br/>
            	<paramref name="parent"/> is a template, and the name of the object clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Moving the object to <paramref name="parent"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Moving the object to <paramref name="parent"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Moving the object to <paramref name="parent"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and is controlled by the instance's template.<br/>-or-<br/>
            	The object is in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.CopyTo(ClearScada.Client.Simple.DBObject,System.String)">CopyTo</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.CopyTo(ClearScada.Client.Simple.DBObject,System.String)">
            <summary>
            	Creates a copy of the object in the database.
            </summary>
            <param name="parent">
            	The group in which to create the new object.
            </param>
            <param name="objectName">
            	The name to give the new object; or, an empty string to generate a default name for the new object.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created database object.
            </returns>
            <scxpermission name="Read" on="Object">
            	If the object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Configure" on="New Parent"/>
            <scxpermission name="Security" on="New Parent">
            	Needed (in addition to <b>Configure</b>) if the object is a user or user group, or a group containing a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	The object is of a class that is not allowed in <paramref name="parent"/>.<br/>-or-<br/>
            	The object is a group that contains an object of a class that is not allowed in <paramref name="parent"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> is not a group.<br/>-or-<br/>
            	The object is the database's root group.<br/>-or-<br/>
            	<paramref name="parent"/> is an empty instance (one without a template configured).
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in <paramref name="parent"/>.<br/>-or-<br/>
            	<paramref name="parent"/> is a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating a copy of the object named <paramref name="objectName"/> in <paramref name="parent"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a copy of the object in <paramref name="parent"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating a copy of the object in <paramref name="parent"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.MoveTo(ClearScada.Client.Simple.DBObject)">MoveTo</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.Convert(System.String)">
            <summary>
            	Converts the object to a different class.
            </summary>
            <param name="className">
            	The name of the class to convert the object to.
            </param>
            <scxpermission name="Configure" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not a valid conversion for the object>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is the database's root group.<br/>-or-<br/>
            	The specified conversion is from one group type to another, and the group contains objects that are not allowed in the target type.
            </exception>
            <exception cref="T:ClearScada.Client.ObjectReferenceException">
            	The specified conversion is from group to template, but objects in the group are referenced by objects outside the group.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and is controlled by the instance's template and is not an abstract object or a converted abstract object.<br/>-or-<br/>
            	The object is in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetPropertyOverrides">
            <summary>
            	Gets the property overrides of the object.
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> containing an entry for each of the object's property override; or, an empty <see langword="PropertyOverrideCollection"/> if the object has no property overrides.</returns>
            <scxpermission name="Read" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetPropertyOverrides(ClearScada.Client.PropertyOverrideCollection)">
            <summary>
            	Sets the property overrides of the object.
            </summary>
            <param name="propertyOverrides">
            	The property overrides to set; or, an empty <see langword="PropertyOverrideCollection"/> to remove all property overrides from the object.
            </param>
            <scxpermission name="Configure" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyOverrides"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	One of the entries in <paramref name="propertyOverrides"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	One of the properties in <paramref name="propertyOverrides"/> is not a configuration property.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetTemplatePropertyControls">
            <summary>
            	Gets the template property controls of the object.
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.TemplatePropertyControlsCollection"/> containing an entry for each of the object's property controls; or, an empty <see langword="TemplatePropertyControlsCollection"/> if the object has no property overrides or field expressions.</returns>
            <scxpermission name="Read" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetTemplatePropertyControls(ClearScada.Client.TemplatePropertyControlsCollection)">
            <summary>
            	Sets the template property controls of the object.
            </summary>
            <param name="propertyControls">
            	The property controls to set; or, an empty <see langword="TemplatePropertyControlsCollection"/> to remove all property controls from the object.
            </param>
            <scxpermission name="Configure" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyControls"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	One of the entries in <paramref name="propertyControls"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	One of the properties in <paramref name="propertyControls"/> is not a configuration property.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetTemplateExpressionVariables">
            <summary>
            	Gets the template expression variables of a template
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.TemplateExpressionVariablesCollection"/> containing an entry for each of the tempalates expression variables; or, an empty <see langword="TemplateExpressionVariablesCollection"/> if the template has no expression variables.</returns>
            <scxpermission name="Read" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetInstanceVariables">
            <summary>
            	Gets the  expression variables of a template instance
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.InstanceVariablesCollection"/> containing an entry for each of the tempalates expression variables; or, an empty <see langword="TemplateExpressionVariablesCollection"/> if the template has no expression variables.</returns>
            <scxpermission name="Read" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetTemplateExpressionVariables(ClearScada.Client.TemplateExpressionVariablesCollection)">
            <summary>
            	Sets the template expression variables of a template
            </summary>
            <param name="expressionVariables">
            	The expression variables to create; or, an empty <see langword="TemplateExpressionVariablesCollection"/> to remove all property controls from the object.
            </param>
            <scxpermission name="Configure" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="expressionVariables"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	One of the entries in <paramref name="expressionVariables"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	One of the properties in <paramref name="expressionVariables"/> is not a configuration property.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetInstanceVariables(ClearScada.Client.InstanceVariablesCollection)">
            <summary>
            	Sets the expression variables of an instance of a template
            </summary>
            <param name="expressionVariables">
            	The expression variables to set <see langword="TemplateExpressionVariablesCollection"/> to remove all property controls from the object.
            </param>
            <scxpermission name="Configure" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="expressionVariables"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	One of the entries in <paramref name="expressionVariables"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	One of the properties in <paramref name="expressionVariables"/> is not a configuration property.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetSecurity">
            <summary>
            	Gets the security of an object.
            </summary>
            <returns>
            	An <see cref="T:ClearScada.Client.AccessControlList"/> containing the security for the object.
            </returns>
            <scxpermission name="Security" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.<br/>-or-<br/>
            	Security is not enabled on this database.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetSecurity(ClearScada.Client.AccessControlList,System.Boolean)">
            <summary>
            	Sets the security of an object.
            </summary>
            <param name="security">
            	An <see cref="T:ClearScada.Client.AccessControlList"/> containing the new security for the object.
            </param>
            <param name="removeSecurityFromDescendants">
            	<see langword="true"/> to remove the security for any descendants, causing them to inherit their security from this object; or, <see langword="false"/> to leave descendants as they are.
            </param>
            <remarks>
            	<para>
            		To remove the security from an object and cause it to inherit from its parent, pass an <see cref="T:ClearScada.Client.AccessControlList"/> with its
            		<see cref="P:ClearScada.Client.AccessControlList.InheritedFromParent">InheritedFromParent</see> property set to <see langword="true"/>.
            	</para>
            	<para>
            		If <paramref name="removeSecurityFromDescendants"/> is <see langword="true"/>, and the caller does not have <b>Security</b> permission on a descendant,
            		or a descendant is an object in an instance whose security is controlled by its template, then the security of that descendant will not be removed.
            		An <see cref="T:ClearScada.Client.AccessDeniedException"/> will not be thrown in this case.
            	</para>
            </remarks>
            <scxpermission name="Security" on="Object">
            	If <paramref name="removeSecurityFromDescendants"/> is <see langword="true"/>, then also needed on any descendants.
            </scxpermission>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="security"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.<br/>-or-<br/>
            	Security is not enabled on this database.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	<paramref name="security"/> contains an <see cref="T:ClearScada.Client.AccessControlEntry"/> that specifies an invalid user name.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object in an instance, and its security is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.ImportConfiguration(System.IO.Stream)">
            <summary>
            	Imports object configuration from a stream.
            </summary>
            <param name="stream">
            	The stream to import configuration from.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the top-level imported object.
            </returns>
            <remarks>
            	The stream must contain the contains of a valid ClearSCADA database export e.g. from a previous call to <see cref="M:ClearScada.Client.Simple.DBObject.ExportConfiguration(System.IO.Stream)">ExportConfiguration</see> or an existing SDE file.
            	The stream must be readable and seekable. The <see cref="P:System.IO.Stream.Position">Position</see> of the stream will be reset to the beginning of the stream if necessary.
            </remarks>
            <scxpermission name="Configure" on="Object"/>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) if the import stream contains users or user groups.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="stream"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="stream"/> is not readable.
            	<paramref name="stream"/> is not seekable.
            	<paramref name="stream"/> is empty.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	The top-level object in the import stream is of an unsupported database class.<br/>-or-<br/>
            	The import stream contains objects of a class that is not allowed in the object.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not a group.<br/>-or-<br/>
            	The object is an empty instance (one without a template configured).
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Importing the objects in the import stream would exceed the database's maximum full name length.<br/>-or-<br/>
            	Importing the objects in the import stream would exceed the database's maximum object depth.<br/>-or-<br/>
            	Importing the objects in the import stream would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.ImportFormatException">
            	The import stream does not contain a valid ClearSCADA database export.<br/>-or-<br/>
            	The import stream is in an unsupported format.<br/>-or-<br/>
            	The import stream contains objects from an unsupported database version.<br/>-or-<br/>
            	The import stream terminates unexpectedly (e.g. a corrupt file).
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.ExportConfiguration(System.IO.Stream)">
            <summary>
            	Exports object configuration to a stream.
            </summary>
            <param name="stream">
            	The stream to export configuration to.
            </param>
            <remarks>
            	The stream must be writable.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
             <exception cref="T:System.ArgumentNullException">
            	<paramref name="stream"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="stream"/> is not writable.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetReferencesTo">
            <summary>
            	Gets a list of the other database objects that reference this object.
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for each database object that references this object; or, an an empty <b>DBObjectCollection</b> if no other objects reference this object.
            </returns>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetReferencesFrom">
            <summary>
            	Gets a list of the other database objects that this object references.
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for each database object that this object references; or, an an empty <b>DBObjectCollection</b> if this object references no other objects.
            </returns>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetAlarms">
            <summary>
            	Gets the active alarms of the object.
            </summary>
            <returns>
            	An <see cref="T:ClearScada.Client.AlarmDetailsCollection"/> with an entry for each active alarm on the object; or, an empty <see cref="T:ClearScada.Client.AlarmDetailsCollection"/> has no active alarms.
            </returns>
            <remarks>
            	Calling <b>GetAlarms</b> on a group will return the active alarms for each of the group's children. Calling <b>GetAlarms</b> on the database's root group will also return any active text alarms.
            </remarks>
            <scxpermission name="ViewAlarms" on="Object">
            	Alarms on objects for which the caller does not have <b>ViewAlarms</b> permission will not be returned.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not an alarmable object or a group.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetEvents(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            	Gets event journal entries related to the object for a specified time range.
            </summary>
            <param name="rangeStart">
            	The start of the time for which to return events.
            </param>
            <param name="rangeEnd">
            	The end of the time for which to return events.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.EventDetailsCollection"/> with an entry for each event in the specified range; or, an empty <see cref="T:ClearScada.Client.EventDetailsCollection"/> if there are no such events.
            </returns>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="rangeEnd"/> is earlier than <paramref name="rangeStart"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">
            <summary>
            	Causes events to be raised when the one of the specified properties of the object changes value.
            </summary>
            <param name="propertyNames">
            	The property names for which to raise update events.
            </param>
            <remarks>
            	<para>
            		This method causes the <see cref="E:ClearScada.Client.Simple.DBObject.PropertyUpdated"/> event to be raised whenever the one of the properties specified by <paramref name="propertyNames"/> changes value.
            		If the method is called again with a different set of properties, the two sets will be merged. To stop events being raised, call <see cref="M:ClearScada.Client.Simple.DBObject.UnregisterPropertyUpdates">UnregisterPropertyUpdates</see>.
            	</para>
            	<para>
            		To raise events when a property of one of the object's aggregates or alarm conditions changes value, prefix the name of the property with the name of the aggregate or alarm condition,
            		concatenated with a period e.g. <c>obj.RegisterForPropertyUpdates( "Historic.LastUpdateTime" );</c>.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyNames"/> is <see langword="null"/>.<br/>-or-<br/>
            	An element of <paramref name="propertyNames"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="propertyNames"/> is empty.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	One of the elements of <paramref name="propertyNames"/> does not specify the name of a property of the object.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.UnregisterPropertyUpdates">UnregisterPropertyUpdates</seealso>
            <seealso cref="E:ClearScada.Client.Simple.DBObject.PropertyUpdated">PropertyUpdated</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.UnregisterPropertyUpdates">
            <summary>
            	Stops events being raised when properties of the object change value.
            </summary>
            <remarks>
            	It is safe to call this method without having called <see cref="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">RegisterForPropertyUpdates</see>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">RegisterForPropertyUpdates</seealso>
            <seealso cref="E:ClearScada.Client.Simple.DBObject.PropertyUpdated">PropertyUpdated</seealso>
        </member>
        <member name="T:ClearScada.Client.Simple.DBObjectCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.DBObject"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.AggregateDefinition">
            <summary>
            	Provides metadata about a database aggregate.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.Name">
            <summary>
            	Gets the name of the aggregate.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.DisplayName">
            <summary>
            	Gets the display name of the aggregate.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.ParentClass">
            <summary>
            	Gets the database class the aggregate belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> the aggregate belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.CanDisable">
            <summary>
            	Gets a value that indicates whether the aggregate can be disabled.
            </summary>
            <value>
            	<see langword="true"/> if the aggregate can be disabled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.AggregateClasses">
            <summary>
            	Gets the possible database classes for the aggregate.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinitionCollection"/> with an entry for each of the possible classes for the aggregate.
            </value>
            <remarks>
            	If the aggregate is not a multi-choice aggregate, <b>AggregateClasses</b> will contain a single entry.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.Simple.AggregateDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.AggregateDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.AlarmConditionDefinition">
            <summary>
            	Provides metadata about a database alarm condition.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.Name">
            <summary>
            	Gets the name of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.DisplayName">
            <summary>
            	Gets the display name of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.ParentClass">
            <summary>
            	Gets the database class the alarm condition belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> the alarm condition belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.Category">
            <summary>
            	Gets the category of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the category of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.SubConditions">
            <summary>
            	Gets the sub-conditions of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;<see cref="T:System.String"/>&gt; with an entry for each sub-condition of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.AlarmClass">
            <summary>
            	Gets the database class for the alarm condition.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> containing metadata about the <b>CAlarm</b> database class.
            </value>
        </member>
        <member name="T:ClearScada.Client.Simple.AlarmConditionDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.AlarmConditionDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.ClassDefinition">
            <summary>
            	Provides metadata about a database class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Name">
            <summary>
            	Gets the name of the class.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the class.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.DisplayName">
            <summary>
            	Gets the display name of the class.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the class.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Category">
            <summary>
            	Gets the category of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Advanced.CategoryMetadata"/> containing the category the class belongs to.
            </value>
            <remarks>This is the highest level of the nested categories if apply.</remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Categories">
            <summary>
            	Gets the nested categories.
            </summary>
            <value>
            	A read-only collection of <see cref="T:ClearScada.Client.Advanced.CategoryMetadata"/>s.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.BaseClass">
            <summary>
            	Gets the base class of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> for the class's base class; or, <see langword="null"/> if the class has no base class.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.DerivedClasses">
            <summary>
            	Gets the derived classes of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinitionCollection"/> with an entry for each of the class's derived classes; or, an an empty <b>ClassDefinitionCollection</b> if the class has no derived classes.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Icon">
            <summary>
            	Gets the icon used to represent objects of the class.
            </summary>
            <value>
            	A <see cref="T:System.Drawing.Bitmap"/> containing the icon used to represent objects of the class.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.ConfigurationProperties">
            <summary>
            	Gets the configuration properties of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.PropertyDefinitionCollection"/> with an entry for each of the class's configuration properties; or, an an empty <b>PropertyDefinitionCollection</b> if the class has no configuration properties.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.DataProperties">
            <summary>
            	Gets the persisted data properties of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.PropertyDefinitionCollection"/> with an entry for each of the class's data properties; or, an an empty <b>PropertyDefinitionCollection</b> if the class has no data properties.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.DynamicProperties">
            <summary>
            	Gets the dynamic data properties of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.PropertyDefinitionCollection"/> with an entry for each of the class's dynamic properties; or, an an empty <b>PropertyDefinitionCollection</b> if the class has no dynamic properties.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Methods">
            <summary>
            	Gets the methods of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.MethodDefinitionCollection"/> with an entry for each of the class's methods; or, an an empty <b>MethodDefinitionCollection</b> if the class has no methods.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Aggregates">
            <summary>
            	Gets the aggregates of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.AggregateDefinitionCollection"/> with an entry for each of the class's aggregates; or, an an empty <b>AggregateDefinitionCollection</b> if the class has no aggregates.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.AlarmConditions">
            <summary>
            	Gets the alarm conditions of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.AlarmConditionDefinitionCollection"/> with an entry for each of the class's alarm conditions; or, an an empty <b>AlarmConditionDefinitionCollection</b> if the class has no alarm conditions.
            </value>
        </member>
        <member name="M:ClearScada.Client.Simple.ClassDefinition.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:ClearScada.Client.Simple.ClassDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.MethodDefinition">
            <summary>
            	Provides metadata about a method of a database class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.Name">
            <summary>
            	Gets the name of the method.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the method.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.DisplayName">
            <summary>
            	Gets the display name of the method.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the method.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.Description">
            <summary>
            	Gets the description of the method.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized description of the method.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.ParentClass">
            <summary>
            	Gets the database class the method belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> the method belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.Parameters">
            <summary>
            	Gets the parameters of the method.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.MethodParameterDefinitionCollection"/> containing an entry for each parameter of the method; or, an an empty <b>MethodParameterDefinitionCollection</b> if the method has no parameters.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.ReturnType">
            <summary>
            	Gets the return type of the method
            </summary>
            <value>
            	A <see cref="T:System.Type"/> representing the type of the method's return value; or, <see cref="T:System.Void"/> if the method does not return a value.
            </value>
            <remarks>
            	The return type of a method can by one of following:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Void"/></item>
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:System.Object"/></item>
            	</list>
            	<para>
            		A method with a return type of <see cref="T:System.Object"/> means that the method can return any of the other above types - it does not mean the method can return any arbitrary type.
            		A method can also return a single-dimensioned <see cref="T:System.Array"/> of any of the above types. 
            	</para>	
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.InvokePermissions">
            <summary>
            	Gets the permissions needed to invoke this method.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectPermissionSet"/> containing the permissions needed to invoke to this method.
            </value>
        </member>
        <member name="T:ClearScada.Client.Simple.MethodDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.MethodParameterDefinition">
            <summary>
            	Provides metadata about a parameter of a method of a database class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.Name">
            <summary>
            	Gets the name of the parameter.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the parameter.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.DisplayName">
            <summary>
            	Gets the display name of the parameter.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the parameter.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.Description">
            <summary>
            	Gets the description of the parameter.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized description of the parameter.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.ParentMethod">
            <summary>
            	Gets the method the parameter belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> the parameter belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.ParameterType">
            <summary>
            	Gets the type of the parameter.
            </summary>
            <value>
            	A <see cref="T:System.Type"/> representing the type of the parameter.
            </value>
            <remarks>
            	The type of a parameter can by one of following:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            		<item><see cref="T:System.Object"/></item>
            	</list>
            	<para>
            		A parameter with a type of <see cref="T:System.Object"/> means that the parameter can be any of the other above types - it does not mean the parameter can be any arbitrary type.
            		A parameter can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. 
            	</para>	
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.IsOptional">
            <summary>
            	Gets a value indicating whether the parameter can be omitted when calling its method.
            </summary>
            <value>
            	<see langword="true"/> if the parameter can be omitted; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	If a parameter is optional, then all subsequent parameters in its method will also be optional. If a parameter is omitted when calling its method, then all subsequent parameters must also be omitted.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.Simple.MethodParameterDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.MethodParameterDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.PropertyType">
            <summary>
            	Specifies whether a property is part of an objects's configuration, persisted data, or dynamic data.
            </summary>
            <remarks>
            	This enumeration is used by the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.PropertyType">PropertyType</see> property of the <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> class.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.Simple.PropertyType.Configuration">
            <summary>
            	The property is part of an object's configuration
            </summary>
        </member>
        <member name="F:ClearScada.Client.Simple.PropertyType.Data">
            <summary>
            	The property is part of an object's persisted data.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Simple.PropertyType.Dynamic">
            <summary>
            	The property is part of an object's dynamic data.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.PropertyDefinition">
            <summary>
            	Provides metadata about a property of a database class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.Name">
            <summary>
            	Gets the name of the property.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the property.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.DisplayName">
            <summary>
            	Gets the display name of the property.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the property.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.Description">
            <summary>
            	Gets the description of the property.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized description of the property.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.ParentClass">
            <summary>
            	Gets the database class the property belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> the property belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.PropertyType">
            <summary>
            	Gets whether a property is part of an objects's configuration, persisted data, or dynamic data.
            </summary>
            <value>
            	One of the <see cref="T:ClearScada.Client.Simple.PropertyType"/> values.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.DataType">
            <summary>
            	Gets the underlying datatype of the property.
            </summary>
            <value>
            	A <see cref="T:System.Type"/> representing the underlying datatype of the property.
            </value>
            <remarks>
            	The data type of a property can be one of following:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            		<item><see cref="T:System.Object"/></item>
            	</list>
            	<para>
            		A property with a data type of <see cref="T:System.Object"/> means that the property can be any of the other above types - it does not mean the property can be of any arbitrary type.
            		A property can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types, or <see cref="T:System.Nullable`1">Nullable&lt;T&gt;</see> where T is any of the above value-types. 
            	</para>	
            	<para>
            		The type of database object referenced by an <see cref="T:ClearScada.Client.ObjectId"/> property is specified by the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.ReferenceClass"/> property.
            	</para>
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.ReferenceClass">
            <summary>
            	Gets the type of database object referenced by a <see cref="T:ClearScada.Client.ObjectId"/> property.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> for the the type of database object referenced by this property, if the property is a <see cref="T:ClearScada.Client.ObjectId"/>; otherwise, <see langword="null"/>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.Length">
            <summary>
            	Gets the length of a <see cref="T:System.String"/> property.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the maximum number of characters that can be stored in this property, if the property is a <see cref="T:System.String"/> property; otherwise, <b>1</b>.
            </value>
            <remarks>
            	If there is no limit on the number of characters that can be stored in this property, <b>Length</b> will be <b>0</b>. 
            	However, the value of the property may be truncated when accessed through interfaces that do not support arbitrary length strings, such as ODBC.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.IsReadable">
            <summary>
            	Gets a value indicating whether the value of the property can be read.
            </summary>
            <value>
            	<see langword="true"/> if the value of the property can be read; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	This property indicates whether a property is fundamentally readable. 
            	It does not check if the caller has the necessary permissions to read the property.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.IsWritable">
            <summary>
            	Gets a value indicating whether the value of the property can be written.
            </summary>
            <value>
            	<see langword="true"/> if the value of the property can be written; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	This property indicates whether a property is fundamentally writable. 
            	It does not check if the caller has the necessary permissions to write to the property, or if the property is controlled by a template.
            	To check if a property is writable for a particular object, use <see cref="M:ClearScada.Client.Simple.DBObject.IsPropertyWritable(System.String)">IsPropertyWritable</see>.
            	To get the permissions needed to write to this property, use <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions"/>.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">
            <summary>
            	Gets the permissions needed to write to this property.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectPermissionSet"/> containing the permissions needed to write to this property.
            </value>
            <remarks>
            	For configuration properties, this will always be <b>Configure</b>. 
            	For most data properties, this will be <b>Control</b>, however some data properties may need a different set of permissions.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.Simple.PropertyDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.StateChangeEventArgs">
            <summary>
            	Provides data about events raised when a server changes state.
            </summary>
        </member>
        <member name="P:ClearScada.Client.StateChangeEventArgs.StateDetails">
            <summary>
            	Gets the state of the server.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.ServerStateDetails"/> containing the state of the server.
            </value>
        </member>
        <member name="T:ClearScada.Client.InvalidSystemConfigurationException">
            <summary>
            The exception that is thrown when parsing a Systems XML file that contains invalid configuration.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidSystemConfigurationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.InvalidSystemConfigurationException"/> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidSystemConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.InvalidSystemConfigurationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ClearScada.Client.InvalidSystemConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.InvalidSystemConfigurationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ClearScada.Client.InvalidSystemConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ClearScada.Client.InvalidSystemConfigurationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:ClearScada.Client.TemplateAggregateFlags">
            <summary>
            Flag to indicate what overrides can be enabled
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.None">
            <summary>
            Default value
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.Fixed">
            <summary>
            User cannot enable/disable the aggregate
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.List">
            <summary>
            There is a list of aggregates for the user to choose from. Note: this option is included automatically in the DB_AGGREGATE_TABLES_CREATE_EX macro
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.NoUserDisable">
            <summary>
            ViewX form will not offer a disable option but the aggregate may be disabled if all expressions for the aggregate options evaluate false.
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.NoWeb">
            <summary>
            Prevents list of historic files appearing on the web
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.DynamicMetadata">
            <summary>
            Dynamic metadata aggregate
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.Default">
            <summary>
            Default (historic) aggregate for object
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.Template">
            <summary>
            Allows historic files in templates
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.AlwaysOverride">
            <summary>
            Aggregate is always overridden when added to a template
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateAggregateFlags.InstanceOverride">
            <summary>
            Aggregate can only be overriden by an instance override (Normally because data can't be created by a simple expression). 
            </summary>
        </member>
        <member name="T:ClearScada.Client.ExpressionVariableType">
            <summary>
            	Defines the variable type.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ExpressionVariableType.Undefined">
            <summary>
            	Unitialised
            </summary>
        </member>
        <member name="F:ClearScada.Client.ExpressionVariableType.Int32">
            <summary>
            	Signed 32 bit integer
            </summary>
        </member>
        <member name="F:ClearScada.Client.ExpressionVariableType.UInt32">
            <summary>
            	Unsigned 32 bit integer
            </summary>
        </member>
        <member name="F:ClearScada.Client.ExpressionVariableType.Double">
            <summary>
            	64 bit floating point number
            </summary>
        </member>
        <member name="F:ClearScada.Client.ExpressionVariableType.String">
            <summary>
            	String
            </summary>
        </member>
        <member name="F:ClearScada.Client.ExpressionVariableType.OPCTime">
            <summary>
            	OPC Time format String Format
            </summary>
        </member>
        <member name="F:ClearScada.Client.ExpressionVariableType.OPCTimeOffset">
            <summary>
            	OPC Time Offset format String Format
            </summary>
        </member>
        <member name="F:ClearScada.Client.ExpressionVariableType.DBRef">
            <summary>
            	Database Reference Full Name format
            </summary>
        </member>
        <member name="F:ClearScada.Client.ExpressionVariableType.AOIRef">
            <summary>
            	AOI Reference Full Name format
            </summary>
        </member>
        <member name="T:ClearScada.Client.TemplateExpressionVariable">
            <summary>
            	Represents a single property variable to be used in template expressions
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariable.#ctor(System.Object,System.String,ClearScada.Client.ExpressionVariableType)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.TemplatePropertyControl"/> class as a property expression.
            </summary>
            <param name="defaultValue">
            	Value of variable in template and default value in instances
            </param>
            <param name="description">
            	Description of the variable.
            </param>
            <param name="type">
            	Type of the variable
            </param>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            </remarks>
        </member>
        <member name="P:ClearScada.Client.TemplateExpressionVariable.DefaultValue">
            <summary>
            	 Value used for variable in template and by default in instance
            </summary>
            <value>
            	An <see cref="T:System.Object"/> containing the default value.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateExpressionVariable.Description">
            <summary>
            	 Description of variable
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the description.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateExpressionVariable.VariableType">
            <summary>
            	 Type of variable
            </summary>
            <value>
            	A byte containing the parameters type.
            </value>
        </member>
        <member name="T:ClearScada.Client.TemplateExpressionVariablesCollection">
            <summary>
            	Represents the variables used in a templates property controls expression.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that is empty.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.TemplateExpressionVariable}})">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that contains properties copied from the specified collection.
            </summary>
            <param name="expressionVariables">
            	The collection whose properties are copied to the new <see cref="T:ClearScada.Client.TemplateExpressionVariable"/>.
            </param>
        </member>
        <member name="P:ClearScada.Client.TemplateExpressionVariablesCollection.Count">
            <summary>
            	Gets the number of properties in the collection.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of properties in the collection.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateExpressionVariablesCollection.Item(System.String)">
            <summary>
            	Finds the variable in the collection
            </summary>
            <value>
            	The found variable.
            </value>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.Add(System.String,ClearScada.Client.TemplateExpressionVariable)">
            <summary>
            	Adds a property to the collection.
            </summary>
            <param name="variableName">
            	Name of variable to add.
            </param>
            <param name="details">
            	Details of the variable to add.
            </param>
            <remarks>
            	Adding a property that already exists in the collection leaves the collection unchanged.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.Add(System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.TemplateExpressionVariable})">
            <summary>
            	Adds a property to the collection.
            </summary>
            <param name="item">
            	A pair consisting of the name of property and details of variable to add.
            </param>
            <remarks>
            	Adding a property that already exists in the collection leaves the collection unchanged.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.Clear">
            <summary>
            	Removes all properties from the collection.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.Contains(System.String)">
            <summary>
            	Determines whether an expression variable is in the collection.
            </summary>
            <param name="variableName">
            	The name of the expression varialbe to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="variableName"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="variableName"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.Find(System.String)">
            <summary>
            	Finds the variable in the collection
            </summary>
            <param name="variableName">
            	The name of the expression variable to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="variableName"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="variableName"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.TemplateExpressionVariable})">
            <summary>
            	Determines whether a variable is in the collection.
            </summary>
            <param name="item">
            	Expresssion Variable to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.Remove(System.String)">
            <summary>
            	Removes a variable from the collection.
            </summary>
            <param name="variableName">
            	The name of the variable to remove.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="variableName"/> was found and removed from the collection; or, <see langword="false"/> if <paramref name="variableName"/> was not in the collection.
            </returns>
            <remarks>
            	Attempting to remove a property that is not in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="variableName"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.TemplateExpressionVariablesCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.TemplateExpressionVariable})">
            <summary>
            	Removes a variable from the collection.
            </summary>
            <param name="item">
            	The name of the property to remove.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> was found and removed from the collection; or, <see langword="false"/> if <paramref name="item"/> was not in the collection.
            </returns>
            <remarks>
            	Attempting to remove a property that is not in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="item"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.TemplateFieldFlags">
            <summary>
            Flags to indicate what overrides are available on the property.
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateFieldFlags.None">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateFieldFlags.AlwaysOverride">
            <summary>
            Property is always overriden.
            </summary>
        </member>
        <member name="F:ClearScada.Client.TemplateFieldFlags.InstanceOnly">
            <summary>
            Property can only be instance overridden.
            </summary>
        </member>
        <member name="T:ClearScada.Client.TemplateOverrideDetails">
            <summary>
            	Represents details about overrides for all object in the templates as well as the variables used in the expressions.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplateOverrideDetails.#ctor">
            <summary>
            	Default constructor create an empty collection
            </summary>
        </member>
        <member name="P:ClearScada.Client.TemplateOverrideDetails.Overrides">
            <summary>
            	Get/Set collection of overrides for all object in template
            </summary>
            <value>
            	A collection of template overrides.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateOverrideDetails.Variables">
            <summary>
            	Get/Set collection of variables used by the override expressions.
            </summary>
            <value>
            	A collection of template variables.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateOverrideDetails.Errors">
            <summary>
            	List of error returned by masterstation after parsing and evaluating the expression overrides.
            </summary>
            <value>
            	A list of property errors.
            </value>
        </member>
        <member name="T:ClearScada.Client.TemplatePropertyControlsAggregate">
            <summary>
            	Represents the aggregate overrides and expressions of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsAggregate.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsAggregate.IsOverridden">
            <summary>
            	 Indicates whether aggregate is overridden or not
            </summary>
            <value>
            	<see langword="true"/> if aggregate is overridden.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsAggregate.AggregateName">
            <summary>
            	 Flags instance or expression override.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsAggregate.DisplayName">
            <summary>
            	 Flags instance or expression override.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the display name for the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsAggregate.UseExpression">
            <summary>
            	 Flags instance or expression override.
            </summary>
            <value>
            	<see langword="true"/> if aggregate uses an expression.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsAggregate.AllowExpression">
            <summary>
            	 Flags whether field supports expression override.
            </summary>
            <value>
            	<see langword="true"/> if aggregate supports expression.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsAggregate.AlwaysOverride">
            <summary>
            	 Flags whether field supports is always overridden.
            </summary>
            <value>
            	<see langword="true"/> if aggregate always overridden.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsAggregate.Expression">
            <summary>
            	Expression used to calculate instance value.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing aggregate expression.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsAggregate.Value">
            <summary>
            	Value of field currently in database.
            </summary>
            <value>
            	An <see cref="T:System.Object"/> contains field value.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsAggregate.Overrides">
            <summary>
            	Overrides on fields in aggreagate
            </summary>
            <value>
            	A collection of property overrides for the fields in the aggregate.
            </value>
        </member>
        <member name="T:ClearScada.Client.TemplatePropertyControlsCollection">
            <summary>
            	Represents the property overrides and expressions of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that is empty.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.TemplatePropertyControl}})">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that contains properties copied from the specified collection.
            </summary>
            <param name="propertyControls">
            	The collection whose properties are copied to the new <see cref="T:ClearScada.Client.PropertyOverrideCollection"/>.
            </param>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsCollection.Count">
            <summary>
            	Gets the number of properties in the collection.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of properties in the collection.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControlsCollection.Item(System.String)">
            <summary>
            	Finds the property in the collection
            </summary>
            <value>
            	The found property.
            </value>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.Add(System.String,ClearScada.Client.TemplatePropertyControl)">
            <summary>
            	Adds a property to the collection.
            </summary>
            <param name="property">
            	The name of the property to add.
            </param>
            <param name="item">
            	Expression or override
            </param>
            <remarks>
            	Adding a property that already exists in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="item"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="item"/> is an empty string.
            </exception>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.Add(System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.TemplatePropertyControl})">
            <summary>
            	Adds a property to the collection.
            </summary>
            <param name="item">
            	A pair consisting of property name and expression or override.
            </param>
            <remarks>
            	Adding a property that already exists in the collection leaves the collection unchanged.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.Clear">
            <summary>
            	Removes all properties from the collection.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.Contains(System.String)">
            <summary>
            	Determines whether a property is in the collection.
            </summary>
            <param name="propertyName">
            	The name of the property to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="propertyName"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.TemplatePropertyControl})">
            <summary>
            	Determines whether a property is in the collection.
            </summary>
            <param name="item">
            	The name of the property to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.Find(System.String)">
            <summary>
            	Determines whether a property is in the collection.
            </summary>
            <param name="propertyName">
            	The name of the property to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="propertyName"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.Remove(System.String)">
            <summary>
            	Removes a property from the collection.
            </summary>
            <param name="propertyName">
            	The name of the property to remove.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="propertyName"/> was found and removed from the collection; or, <see langword="false"/> if <paramref name="propertyName"/> was not in the collection.
            </returns>
            <remarks>
            	Attempting to remove a property that is not in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControlsCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,ClearScada.Client.TemplatePropertyControl})">
            <summary>
            	Removes a property from the collection.
            </summary>
            <param name="item">
            	The name of the property to remove.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> was found and removed from the collection; or, <see langword="false"/> if <paramref name="item"/> was not in the collection.
            </returns>
            <remarks>
            	Attempting to remove a property that is not in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="item"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.TemplatePropertyControl">
            <summary>
            	Represents a single property overrides or expression.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControl.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.TemplatePropertyControl"/> class as a property override.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControl.#ctor(System.String,System.Boolean,System.Boolean,System.Object)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.TemplatePropertyControl"/> class as a property override.
            </summary>
            <param name="displayName">
            	Descriptive/Localised name of field
            </param>
            /// <param name="alwaysOverride">
            	Property is alway overridden.
            </param>
            <param name="allowExpression">
            	Property can be expression overridden.
            </param>
            <param name="value">
            	Current value of field
            </param>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControl.#ctor(System.String,System.Boolean,System.Boolean,System.Object,System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.TemplatePropertyControl"/> class as a property expression.
            </summary>
            <param name="displayName">
            	Descriptive/Localised name of field
            </param>
            <param name="alwaysOverride">
            	Property is alway overridden.
            </param>
            <param name="allowExpression">
            	Property can be expression overridden.
            </param>
            <param name="propertyExpression">
            	Expression used to calculate instance parameter.
            </param>
            <param name="value">
            	Current value of field
            </param>
        </member>
        <member name="M:ClearScada.Client.TemplatePropertyControl.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.TemplatePropertyControl"/> class as a property expression.
            </summary>
            <param name="propertyExpression">
            	Expression used to calculate instance parameter.
            </param>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControl.DisplayName">
            <summary>
            	 Flags instance or expression override.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing property display name.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControl.UseExpression">
            <summary>
            	 Flags instance or expression override.
            </summary>
            <value>
            	<see langword="true"/> if property uses an expression.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControl.AllowExpression">
            <summary>
            	 Flags whether field supports expression override.
            </summary>
            <value>
            	<see langword="true"/> if property supports expression.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControl.AlwaysOverride">
            <summary>
            	 Flags whether field supports is always overridden.
            </summary>
            <value>
            	<see langword="true"/> if property always overridden.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControl.Expression">
            <summary>
            	Expression used to calculate instance value.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing property expression.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplatePropertyControl.Value">
            <summary>
            	Value of field currently in database.
            </summary>
            <value>
            	An <see cref="T:System.Object"/> contains field value.
            </value>
        </member>
        <member name="T:ClearScada.Client.TemplateReadAggregate">
            <summary>
            Information read from the masterstation on the override status of an aggregate and its fields.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplateReadAggregate.#ctor">
            <summary>
            Creates empty details
            </summary>
        </member>
        <member name="P:ClearScada.Client.TemplateReadAggregate.Name">
            <summary>
            Name of aggregate
            </summary>
            <value>
            A <see cref="T:System.String"/> containing name of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadAggregate.DisplayName">
            <summary>
            Display name of aggregate
            </summary>
            <value>
            A <see cref="T:System.String"/> containing display name of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadAggregate.Flags">
            <summary>
            Flag to indicate what overrides can be enabled
            </summary>
            <value>
            A bit mask of <see cref="T:ClearScada.Client.TemplateAggregateFlags">flags</see>.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadAggregate.IsOverride">
            <summary>
            Indicates whether the aggregate is currenntly overriden
            </summary>
            <value>
            <see langword="true"/> if aggregate is overridden.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadAggregate.FieldCount">
            <summary>
            Number of fields defined in the aggregate
            </summary>
            <value>
            An <see cref="T:System.Int32"/> containg the number of fields.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadAggregate.Fields">
            <summary>
            List of field in the aggregate.
            </summary>
            <value>
            A list of fields in the aggregate.
            </value>
        </member>
        <member name="T:ClearScada.Client.TemplateReadField">
            <summary>
             Information read from the masterstation on the override status of a database property field.
            </summary>
        </member>
        <member name="P:ClearScada.Client.TemplateReadField.Name">
            <summary>
            Name of property.
            </summary>
            <value>
            A <see cref="T:System.String"/> contains name of property.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadField.DisplayName">
            <summary>
            Display name of property.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing display name of property.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadField.Description">
            <summary>
            Description of property.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing description of property.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadField.IsOverride">
            <summary>
            Indicates whether property is currently overriden.
            </summary>
            <value>
            <see langword="true"/> if property is overridden.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadField.Flags">
            <summary>
            Flags to indicate what type of overrides can be applied to the property.
            </summary>
            <value>
            A bit mask of <see cref="T:ClearScada.Client.TemplateFieldFlags">flags</see>.
            </value>
        </member>
        <member name="T:ClearScada.Client.TemplateReadObject">
            <summary>
            	Information read from the masterstation on the override status of an object and its fields, aggregates and child objects.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplateReadObject.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.ObjectId">
            <summary>
            ObjectId in database.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> containing ID of object in database.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.Name">
            <summary>
            Name of object in database.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing name of object.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.ClassName">
            <summary>
            Type of object.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing class name of object.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.IconIndex">
            <summary>
            Icon used currently always 0.
            </summary>
            <value>
            Always zero.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.FieldCount">
            <summary>
            Number of fields
            </summary>
            <value>
            The number of fields.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.Fields">
            <summary>
            Fields
            </summary>
            <value>
            A list of the object's fields.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.TabCount">
            <summary>
            Number of tabs
            </summary>
            <value>
            The number of tabs.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.Tabs">
            <summary>
             Tabs containing a list of fields
            </summary>
            <value>
            A list of the object's tabs.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.AggregateCount">
            <summary>
            Number of aggregates
            </summary>
            <value>
            The number of aggregates.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.Aggregates">
            <summary>
            Aggregates with fields contained in each aggregate
            </summary>
            <value>
            A list of the object's aggregates.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.ChildCount">
            <summary>
            Number of child objects.
            </summary>
            <value>
            The number of child objects. Zero if not a group.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadObject.Children">
            <summary>
            List of child objects and their fields.
            </summary>
            <value>
            A list of the object's child objects.
            </value>
        </member>
        <member name="T:ClearScada.Client.TemplateReadTab">
            <summary>
            	Information read from the masterstation on the override status of an object's tab and its fields.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TemplateReadTab.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ClearScada.Client.TemplateReadTab.DisplayName">
            <summary>
            Name of tab.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the display name of the tab.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadTab.FieldCount">
            <summary>
            Number of fields in tab.
            </summary>
            <value>
            The number of fields in tab.
            </value>
        </member>
        <member name="P:ClearScada.Client.TemplateReadTab.Fields">
            <summary>
            Fields in tab.
            </summary>
            <value>
            A list of fields in the tab.
            </value>
        </member>
        <member name="T:System.UserRegistryHelper">
            <summary>
            Provides helper functions to validate vaulues to be written to user registry.
            </summary>
        </member>
        <member name="M:System.UserRegistryHelper.CheckObjectIsAValidValue(System.Object)">
            <summary>
            Checks whether value is a valid type and size to be written to user object.
            </summary>
            <param name="value">The value to be checked.</param>
        </member>
        <member name="T:System.PasswordStrength">
            <summary>
            The strength of a password
            </summary>
        </member>
        <member name="F:System.PasswordStrength.Weak">
            <summary>
            A weak password
            </summary>
        </member>
        <member name="F:System.PasswordStrength.Medium">
            <summary>
            A medium password
            </summary>
        </member>
        <member name="F:System.PasswordStrength.Strong">
            <summary>
            A strong password
            </summary>
        </member>
        <member name="F:System.PasswordStrength.VeryStrong">
            <summary>
            A very strong password
            </summary>
        </member>
        <member name="T:System.PasswordHelper">
            <summary>
            Provides extension methods for strings.
            </summary>
        </member>
        <member name="M:System.PasswordHelper.GetPasswordStrength(System.Security.SecureString)">
            <summary>
            Gets the password strength.
            </summary>
            <param name="password">The password.</param>
            <returns>One of <see cref="T:System.PasswordStrength"/> strengths.</returns>
        </member>
        <member name="T:System.Security.SecureStringExtensions">
            <summary>
            Provides extension methods for secure string.
            </summary>
        </member>
        <member name="M:System.Security.SecureStringExtensions.ProcessBytes(System.Security.SecureString,System.Action{System.Byte[]})">
            <summary>
            Processes bytes from the SecureString in a secure context.
            </summary>
            <param name="self">The SecureString instance.</param>
            <param name="action">The action to perform.</param>
        </member>
        <member name="M:System.Security.SecureStringExtensions.ProcessBytes``1(System.Security.SecureString,System.Func{System.Byte[],``0})">
            <summary>
            Processes bytes from the SecureString in a secure context.
            </summary>
            <typeparam name="T">The type returned by the function.</typeparam>
            <param name="self">The SecureString instance.</param>
            <param name="func">The function to perform.</param>
            <returns>Value returned by the function.</returns>
        </member>
        <member name="M:System.Security.SecureStringExtensions.ProcessChars(System.Security.SecureString,System.Action{System.Char[]})">
            <summary>
            Processes bytes from the SecureString in a secure context.
            </summary>
            <param name="self">The SecureString instance.</param>
            <param name="action">The action to perform.</param>
        </member>
        <member name="M:System.Security.SecureStringExtensions.ProcessChars``1(System.Security.SecureString,System.Func{System.Char[],``0})">
            <summary>
            Processes characters from the SecureString in a secure context.
            </summary>
            <typeparam name="T">The type returned by the function</typeparam>
            <param name="self">The SecureString instance.</param>
            <param name="func">The function to perform.</param>
            <returns>Value returned by the function.</returns>
        </member>
        <member name="M:System.Security.SecureStringExtensions.AreEqual(System.Security.SecureString,System.Security.SecureString)">
            <summary>
            Compares the specified self secure string with secureString2.
            </summary>
            <param name="self">Self secure string</param>
            <param name="secureString2">The second secure string.</param>
            <returns>true if the secure strings are equal, false otherwise</returns>
        </member>
        <member name="T:System.StringExtensions">
            <summary>
            Provides extension methods for strings.
            </summary>
        </member>
        <member name="M:System.StringExtensions.ToSecureString(System.String)">
            <summary>
            Converts a string into a secure string.
            </summary>
            <param name="self">
            The string.
            </param>
            <returns>
            The secure string.
            </returns>
            <remarks>
            Using this to "secure" a string is pointless since that string is already in memory.
            This is a convenience method meant for obsolete methods and unit tests.
            </remarks>
        </member>
        <member name="T:SchneiderElectric.Common.CommonAssemblyInfo">
            <summary>
            Version constants
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.CompanyName">
            <summary>
            Name of company
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.CompanyNameEx">
            <summary>
            Name of company (spaces removed)
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.CompanyLegalName">
            <summary>
            Legal name of company
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.CopyrightNotice">
            <summary>
            Copyright notice
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.TrademarkNotice">
            <summary>
            Trademark notice
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.Product">
            <summary>
            Product identifier
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.ProductName">
            <summary>
            Full product name
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.ShortName">
            <summary>
            Short product name
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.MajorVersion">
            <summary>
            Major version number
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.MinorVersion">
            <summary>
            Minor version number
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.BuildNumber">
            <summary>
            Build number
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.RevisionNumber">
            <summary>
            Revision number
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.VersionString">
            <summary>
            Version string
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.ProductCode">
            <summary>
            Product GUID
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.Lang">
            <summary>
            Language code
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.CharSet">
            <summary>
            Character set
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.LangCharSet">
            <summary>
            Language and character set
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.InfoLink">
            <summary>
            URL for product information
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.SupportLink">
            <summary>
            URL for product support
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.UpdateInformation">
            <summary>
            URL for product update information
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.IntendedUsage">
            <summary>
            Description of intended usage for build
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.IconPrefix">
            <summary>
            Prefix on icon filenames
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.SplashScreenApplicationName">
            <summary>
            Product name in splash screen
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.SplashScreenCopyrightNotice">
            <summary>
            Copyright notice in splash screen
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.RegistryBase">
            <summary>
            Registry base key
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.RegistryWow6432NodeBase">
            <summary>
            Registry base key (Wow6432)
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.RegistryRoot">
            <summary>
            Registry root key
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.FolderVendor">
            <summary>
            Vendor folder
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.FolderProduct">
            <summary>
            Product folder
            </summary>
        </member>
        <member name="F:SchneiderElectric.Common.CommonAssemblyInfo.OdbcDriverName">
            <summary>
            ODBC driver name
            </summary>
        </member>
    </members>
</doc>
